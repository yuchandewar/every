(function() {
    var t = this;
    t.N2_ = t.N2_ || {
        r: [],
        d: []
    }, t.N2R = t.N2R || function() {
        t.N2_.r.push(arguments)
    }, t.N2D = t.N2D || function() {
        t.N2_.d.push(arguments)
    }
}).call(window), N2D("SmartSliderBackgrounds", function(a, t) {
    function e(t) {
        this.device = null, this.slider = t, this.hasFixed = !1, this.lazyLoad = parseInt(t.parameters.lazyLoad), this.lazyLoadNeighbor = parseInt(t.parameters.lazyLoadNeighbor), this.loadDeferred = a.Deferred(), this.deviceDeferred = a.Deferred(), this.slider.stages.done("Resized", this.onResized.bind(this)), this.slider.stages.done("StarterSlide", this.onStarterSlide.bind(this))
    }
    return e.prototype.loadWithProgress = function(t) {
        for (var e = 0, i = this.loadDeferred, s = 0; s < t.length; s++) a.when(t[s]).done(function() {
            i.notify(++e, t.length)
        });
        a.when.apply(a, t).done(function() {
            i.resolveWith(null, arguments)
        })
    }, e.prototype.getBackgroundImages = function() {
        for (var t = [], e = 0; e < this.slider.realSlides.length; e++) t.push(this.slider.realSlides[e].background);
        return t
    }, e.prototype.onResized = function() {
        this.onSlideDeviceChanged(this.slider.responsive.getDeviceMode()), this.deviceDeferred.resolve(), this.slider.sliderElement.on("SliderDevice", function(t, e) {
            this.onSlideDeviceChanged(e.device)
        }.bind(this))
    }, e.prototype.onStarterSlide = function() {
        1 === this.lazyLoad ? (this.preLoadSlides = this.preloadSlidesLazyNeighbor, this.loadWithProgress(this.preLoadSlides(this.slider.getVisibleSlides(this.slider.currentSlide)))) : 2 === this.lazyLoad ? (this.preLoadSlides = this._preLoadSlides, this.slider.stages.done("SlidesReady", function() {
            N2R("windowLoad", this.preLoadAll.bind(this))
        }.bind(this)), this.loadWithProgress(this.preLoadSlides(this.slider.getVisibleSlides(this.slider.currentSlide)))) : (this.preLoadSlides = this._preLoadSlides, this.loadWithProgress(this.preLoadAll())), this.slider.sliderElement.on("visibleSlidesChanged", this.onVisibleSlidesChanged.bind(this))
    }, e.prototype.onVisibleSlidesChanged = function() {
        (1 === this.lazyLoad || 2 === this.lazyLoad) && a.when.apply(a, this.preLoadSlides(this.slider.getVisibleSlides()))
    }, e.prototype.onSlideDeviceChanged = function(t) {
        this.device = t;
        for (var e = 0; e < this.slider.visibleRealSlides.length; e++) this.slider.visibleRealSlides[e].background && this.slider.visibleRealSlides[e].background.updateBackgroundToDevice(t)
    }, e.prototype.preLoadAll = function() {
        for (var t = [], e = 0; e < this.slider.visibleRealSlides.length; e++) t.push(this.slider.visibleRealSlides[e].preLoad());
        return t
    }, e.prototype._preLoadSlides = function(t) {
        var e = [];
        "[object Array]" !== Object.prototype.toString.call(t) && (t = [t]);
        for (var i = 0; i < t.length; i++) e.push(t[i].preLoad());
        return e
    }, e.prototype.preloadSlidesLazyNeighbor = function(t) {
        var e = this._preLoadSlides(t);
        if (this.lazyLoadNeighbor)
            for (var i = 0, s = t[0].getPrevious(), n = t[t.length - 1].getNext(); i < this.lazyLoadNeighbor;) s && (e.push(s.preLoad()), s = s.getPrevious()), n && (e.push(n.preLoad()), n = n.getNext()), i++;
        var o = a.Deferred();
        if ("resolved" !== e[0].state()) {
            var r = setTimeout(function() {
                this.slider.load.showSpinner("backgroundImage" + t[0].index), r = null
            }.bind(this), 50);
            a.when.apply(a, e).done(function() {
                r ? (clearTimeout(r), r = null) : this.slider.load.removeSpinner("backgroundImage" + t[0].index), setTimeout(function() {
                    o.resolve()
                }, 100)
            }.bind(this))
        } else setTimeout(function() {
            o.resolve()
        }, 100);
        return e.push(o), e
    }, e.prototype.hack = function() {
        for (var t = 0; t < this.slider.realSlides.length; t++) this.slider.realSlides[t].background && this.slider.realSlides[t].background.hack()
    }, e
}), N2D("CSSData", function(t, e) {
    "use strict";

    function i(t, e) {
        this.$ = t, this.css = e
    }
    return i.prototype.flush = function() {
        this.$.css(this.css)
    }, i
}), N2D("FontSize", function(e, i) {
    var s;
    return {
        toRem: function(t) {
            return t / (s === i && (s = e('<div style="font-size:10rem;"></div>').appendTo("body")), parseFloat(s.css("fontSize")) / 10) + "rem"
        }
    }
}), N2D("SmartSliderLoad", function(i, t) {
    function e(t, e) {
        this.parameters = i.extend({
            fade: 1,
            scroll: 0
        }, e), this.deferred = i.Deferred(), this.slider = t, this.spinnerCouner = 0, this.id = t.sliderElement.attr("id"), this.$window = i(window), this.spinner = i("#" + this.id + "-spinner"), this.$placeholder = i("#" + this.id + "-placeholder")
    }
    return e.prototype.start = function() {
        if (this.parameters.scroll) this.onScrollCallback = this.onScroll.bind(this), window.addEventListener("scroll", this.onScrollCallback, {
            capture: !0,
            passive: !0
        }), this.onScroll();
        else if (this.parameters.fade) {
            this.loadingArea = this.$placeholder, this.showSpinner("fadePlaceholder");
            var i = this.spinner.find(".n2-ss-spinner-counter");
            i.length && (i.html("0%"), this.slider.stages.done("SlidesReady", function() {
                this.slider.backgrounds.loadDeferred.progress(function(t, e) {
                    i.html(Math.round(t / (e + 1) * 100) + "%")
                }.bind(this))
            }.bind(this))), this.showSlider()
        } else this.showSlider()
    }, e.prototype.onScroll = function() {
        this.$window.scrollTop() + this.$window.height() > this.slider.sliderElement.offset().top + 100 && (window.removeEventListener("scroll", this.onScrollCallback, {
            capture: !0,
            passive: !0
        }), this.showSlider())
    }, e.prototype.loadLayerImages = function() {
        var t = i.Deferred();
        return this.slider.sliderElement.find(".n2-ss-layers-container").n2imagesLoaded().always(function() {
            t.resolve()
        }), t
    }, e.prototype.showSlider = function() {
        this.slider.stages.done("ResizeFirst", this.stage1.bind(this))
    }, e.prototype.stage1 = function() {
        this.slider.responsive.isReadyToResize = !0, i.when.apply(i, this.slider.widgetDeferreds).done(this.stage2.bind(this))
    }, e.prototype.stage2 = function() {
        this.slider.responsive.doResize(), this.slider.finalizeStarterSlide(), i.when(this.slider.backgrounds.loadDeferred, this.loadLayerImages(), this.slider.stages.get("Fonts").getDeferred()).always(this.stage3.bind(this))
    }, e.prototype.stage3 = function() {
        this.slider.responsive.doResize(), this.slider.initLayerAnimations(), this.slider.stages.resolve("BeforeShow"), this.slider.widgets.onReady(), this.slider.responsive.alignElement.addClass("n2-ss-align-visible"), this.slider.sliderElement.addClass("n2-ss-loaded").removeClass("n2notransition"), this.spinner.find(".n2-ss-spinner-counter").html(""), this.removeSpinner("fadePlaceholder"), this.$placeholder.remove(), this.loadingArea = this.slider.sliderElement, i(window).trigger("scroll"), this.slider.stages.resolve("Show"), this.slider.startVisibilityCheck()
    }, e.prototype.showSpinner = function(t) {
        0 === this.spinnerCouner && this.spinner.appendTo(this.loadingArea).css("display", ""), this.spinnerCouner++
    }, e.prototype.removeSpinner = function(t) {
        this.spinnerCouner--, this.spinnerCouner <= 0 && (this.spinner.detach(), this.spinnerCouner = 0)
    }, e
}), N2D("SmartSliderPlugins", function(t, i) {
    function s(t) {
        this.slider = t, this.plugins = {}
    }
    s.prototype.add = function(t, e) {
        this.plugins[t] = new e(this.slider)
    }, s.prototype.get = function(t) {
        return this.plugins[t] || !1
    };
    var n = {},
        o = [];
    return {
        addPlugin: function(t, e) {
            for (var i = 0; i < o.length; i++) o[i].plugins.add(t, e);
            n[t] = e
        },
        addSlider: function(t) {
            if (t.plugins === i)
                for (var e in t.plugins = new s(t), n) t.plugins.add(e, n[e]);
            o.push(t)
        }
    }
}), N2D("ScrollTracker", function(t, e, i) {
    function s() {
        this.started = !1, this.items = [], this.onScrollCallback = this.onScroll.bind(this)
    }
    return s.prototype.add = function(t, e, i, s) {
        var n = {
            $el: t,
            mode: e,
            onVisible: i,
            onHide: s,
            state: "unknown"
        };
        this.items.push(n), this._onScroll(n, Math.max(document.documentElement.clientHeight, window.innerHeight)), this.started || this.start()
    }, s.prototype.start = function() {
        this.started || (window.addEventListener("scroll", this.onScrollCallback, {
            capture: !0,
            passive: !0
        }), this.started = !0)
    }, s.prototype.onScroll = function(t) {
        for (var e = Math.max(document.documentElement.clientHeight, window.innerHeight), i = 0; i < this.items.length; i++) this._onScroll(this.items[i], e)
    }, s.prototype._onScroll = function(t, e) {
        var i = t.$el[0].getBoundingClientRect(),
            s = i.height > .7 * e,
            n = !0;
        "partly-visible" === t.mode ? (s && (i.bottom < 0 || i.top >= i.height) || !s && (i.bottom - i.height < 0 || 0 <= i.top - e + i.height)) && (n = !1) : "not-visible" === t.mode && (n = i.top - e < 0 && 0 < i.top + i.height), !1 === n ? "hidden" !== t.state && ("function" == typeof t.onHide && t.onHide(), t.state = "hidden") : "visible" !== t.state && ("function" == typeof t.onVisible && t.onVisible(), t.state = "visible")
    }, new s
}), N2D("SmartSliderApi", function(h, o) {
    function t() {
        this.sliders = {}, this.readys = {}, this.eventListeners = {}
    }
    t.prototype.makeReady = function(t, e) {
        if (this.sliders[t] = e, this.readys[t] !== o)
            for (var i = 0; i < this.readys[t].length; i++) this.readys[t][i].call(e, e, e.sliderElement)
    }, t.prototype.ready = function(t, e) {
        this.sliders[t] !== o ? e.call(this.sliders[t], this.sliders[t], this.sliders[t].sliderElement) : (this.readys[t] === o && (this.readys[t] = []), this.readys[t].push(e))
    }, t.prototype.on = function(t, e) {
        this.eventListeners[t] === o && (this.eventListeners[t] = []), this.eventListeners[t].push(e)
    }, t.prototype.off = function(t, e) {
        if (this.eventListeners[t] !== o)
            for (var i = this.eventListeners[t].length - 1; 0 <= i; i--) this.eventListeners[t][i] === e && this.eventListeners[t].splice(i, 1)
    }, t.prototype.dispatch = function(t, e) {
        if (this.eventListeners[t] !== o && this.eventListeners[t].length)
            for (var i = this.eventListeners[t].length - 1; 0 <= i; i--) this.eventListeners[t][i] && this.eventListeners[t][i].call(e, e)
    }, t.prototype.trigger = function(t, e, i) {
        i && i.preventDefault();
        var s = h(t),
            n = e.split(","),
            o = s.closest(".n2-ss-slide,.n2-ss-static-slide"),
            r = o.data("ss-last-event");
        s.data("ss-reset-events") || (s.data("ss-reset-events", 1), o.on("layerAnimationPlayIn.resetCounter", function(t) {
            t.data("ss-last-event", "")
        }.bind(this, o)));
        for (var a = n.length - 1, l = 0; l < n.length; l++) n[l] === r && (a = l);
        e = a === n.length - 1 ? n[0] : n[a + 1], o.data("ss-last-event", e), o.triggerHandler("ss" + e)
    }, t.prototype.applyAction = function(t, e) {
        if (this.isClickAllowed(t)) {
            var i = t.currentTarget,
                s = h(i).closest(".n2-ss-slider").data("ss");
            s[e].apply(s, Array.prototype.slice.call(arguments, 2))
        }
    }, t.prototype.applyActionWithClick = function(t) {
        this.isClickAllowed(t) && (nextend.shouldPreventClick || (t.preventDefault(), this.applyAction.apply(this, arguments)))
    }, t.prototype.isClickAllowed = function(t) {
        return !h.contains(t.currentTarget, h(t.target).closest('a[href!="#"], *[onclick][onclick!=""], *[data-n2click][data-n2click!=""], *[data-n2-lightbox]').get(0))
    }, t.prototype.openUrl = function(t, e) {
        if (this.isClickAllowed(t)) {
            var i = h(t.currentTarget),
                s = i.data("href");
            if (e === o && (e = i.data("target")), "_blank" === e) {
                var n = window.open();
                n.opener = null, n.location = s
            } else n2const.setLocation(s)
        }
    };
    var n = {
        focusOffsetTop: 0,
        to: function(t) {
            var e = document.querySelector("html, body, .n2_iframe_application__content");
            "smooth" === h("html").css("scroll-behavior") ? e.scrollTop = t : n2const._animateScroll(e, t, window.n2ScrollSpeed || 400)
        },
        top: function() {
            n.to(0)
        },
        bottom: function() {
            n.to(h(document).height() - h(window).height())
        },
        before: function(t) {
            n.to(t.offset().top - h(window).height())
        },
        after: function(t) {
            n.to(t.offset().top + t.height() - n.focusOffsetTop)
        },
        next: function(i, t) {
            var e = h(t),
                s = -1;
            e.each(function(t, e) {
                if (h(i).is(e) || h.contains(e, i)) return s = t + 1, !1
            }), -1 !== s && s <= e.length && n.element(e.eq(s))
        },
        previous: function(i, t) {
            var e = h(t),
                s = -1;
            e.each(function(t, e) {
                if (h(i).is(e) || h.contains(e, i)) return s = t - 1, !1
            }), 0 <= s && n.element(e.eq(s))
        },
        element: function(t) {
            n.to(h(t).offset().top - n.focusOffsetTop)
        }
    };
    return t.prototype.scroll = function(t, e) {
        if (this.isClickAllowed(t)) {
            t.preventDefault();
            var i = this.findSliderByElement(t.target);
            i && (n.focusOffsetTop = i.responsive.focusOffsetTop), n[e].apply(window, Array.prototype.slice.call(arguments, 2))
        }
    }, t.prototype.findSliderByElement = function(t) {
        return h(t).closest(".n2-ss-slider").data("ss")
    }, window.n2ss = new t, window.n2ss
}), N2D("SmartSliderAbstract", function($, undefined) {
    function SmartSliderAbstract(t, e) {
        this.editor = null, t instanceof $ && (t = "#" + t.attr("id"));
        var i = t.substr(1);
        if (this.elementID = i, window[i] && window[i] instanceof SmartSliderAbstract && (!window[i].__$sliderElement || $.contains(document.body, window[i].__$sliderElement.get(0)))) {
            if (window[i].sliderElement === undefined) return void console.error("Slider [#" + i + "] inited multiple times");
            if ($.contains(document.body, window[i].sliderElement.get(0))) return void console.error("Slider [#" + i + "] embedded multiple times")
        }
        this.stages = new N2Classes.Stages, N2D(t, function() {
            return this
        }.bind(this)), this.isAdmin = !!e.admin, N2Classes.SmartSliderPlugins.addSlider(this), this.id = parseInt(i.replace("n2-ss-", "")), window[i] = this, e.isDelayed !== undefined && e.isDelayed ? $(window).ready(function() {
            this.waitForExists(i, e)
        }.bind(this)) : this.waitForExists(i, e)
    }
    SmartSliderAbstract.prototype.kill = function() {
        this.killed = !0;
        var e = this.sliderElement.attr("id"),
            t = $("#" + e + "-placeholder");
        t.length ? t.remove() : N2R("documentReady", function(t) {
            t("#" + e + "-placeholder").remove()
        });
        var i = this.sliderElement.closest(".n2-ss-margin");
        i.length ? i.remove() : N2R("documentReady", function(t) {
            this.sliderElement.closest(".n2-ss-margin").remove()
        }.bind(this));
        var s = this.sliderElement.closest(".n2-ss-align");
        s.length ? s.remove() : N2R("documentReady", function(t) {
            this.sliderElement.closest(".n2-ss-align").remove()
        }.bind(this)), n2ss.makeReady(this.id, this)
    }, SmartSliderAbstract.prototype.waitForExists = function(e, t) {
        var i = $.Deferred(),
            s = function() {
                var t = $("#" + e);
                t.length ? i.resolve(t) : setTimeout(s, 500)
            };
        i.done(this.onSliderExists.bind(this, e, t)), s()
    };
    var lazySliders = [];

    function lazySliderLoad(t, e) {
        lazySliders.push({
            element: t.__$sliderElement.parent()[0],
            callback: e
        }), 1 === lazySliders.length && (window.addEventListener("resize", lazySliderCheckScroll, {
            capture: !0
        }), window.addEventListener("scroll", lazySliderCheckScroll, {
            capture: !0,
            passive: !0
        }), N2Classes.SmartSliderApi.on("SliderResize", lazySliderCheckScroll), lazySliderCheckScroll())
    }

    function lazySliderCheckScroll() {
        for (var t = 1.4 * $(window).height(), e = 0; e < lazySliders.length; e++)
            if (lazySliders[e].element.getBoundingClientRect().y < t) {
                var i = lazySliders[e].callback;
                lazySliders.splice(e, 1), e--, i()
            }
        0 === lazySliders.length && (window.removeEventListener("resize", lazySliderCheckScroll, {
            capture: !0
        }), window.removeEventListener("scroll", lazySliderCheckScroll, {
            capture: !0,
            passive: !0
        }), N2Classes.SmartSliderApi.off("SliderResize", lazySliderCheckScroll))
    }
    return SmartSliderAbstract.prototype.onSliderExists = function(t, e, i) {
        if (this.__$sliderElement = i, this.stages.resolve("Exists"), "TEMPLATE" === i.prop("tagName")) {
            var s = i.data("loading-type"),
                n = function() {
                    var t = $(i.html());
                    i.replaceWith(t), this.waitForDimension(t, e), $(window).triggerHandler("n2Rocket", [t])
                }.bind(this);
            "afterOnLoad" === s ? N2R("windowLoad", lazySliderLoad.bind(this, this, n)) : "afterDelay" === s ? setTimeout(n, i.data("loading-delay")) : n()
        } else this.waitForDimension(i, e)
    }, SmartSliderAbstract.prototype.waitForDimension = function(t, e) {
        var i = function() {
            t.is(":visible") ? this.onSliderHasDimension(t, e) : setTimeout(i, 200)
        }.bind(this);
        i()
    }, SmartSliderAbstract.prototype.initCSS = function() {
        this.parameters.css && $('<style type="text/css">' + this.parameters.css + "</style>").appendTo("head")
    }, SmartSliderAbstract.prototype.onSliderHasDimension = function($sliderElement, parameters) {
        this.stages.resolve("HasDimension"), this.killed = !1, this.isVisible = !0, n2const.isIE ? $sliderElement.attr("data-ie", n2const.isIE) : n2const.isEdge && $sliderElement.attr("data-ie", n2const.isEdge), this.responsive = !1, this.mainAnimationLastChangeTime = 0, this.currentSlide = null, this.currentRealSlide = null, this.staticSlides = [], this.slides = [], this.visibleRealSlides = [], this.visibleSlides = [], this.sliderElement = $sliderElement.data("ss", this), this.needBackgroundWrap = !1, this.blockCarousel = !1, this.parameters = $.extend({
            plugins: [],
            admin: !1,
            playWhenVisible: 1,
            playWhenVisibleAt: .5,
            perspective: 1e3,
            callbacks: "",
            autoplay: {},
            blockrightclick: !1,
            maintainSession: 0,
            align: "normal",
            controls: {
                touch: "horizontal",
                keyboard: !1,
                mousewheel: !1,
                blockCarouselInteraction: 1
            },
            hardwareAcceleration: !0,
            layerMode: {
                playOnce: 0,
                playFirstLayer: 1,
                mode: "skippable",
                inAnimation: "mainInEnd"
            },
            parallax: {
                enabled: 0,
                mobile: 0,
                horizontal: "mouse",
                vertical: "mouse",
                origin: "enter"
            },
            load: {},
            mainanimation: {},
            randomize: {
                randomize: 0,
                randomizeFirst: 0
            },
            responsive: {},
            lazyload: {
                enabled: 0
            },
            postBackgroundAnimations: !1,
            initCallbacks: !1,
            dynamicHeight: 0,
            titles: [],
            descriptions: [],
            backgroundParallax: {
                strength: 0,
                tablet: 0,
                mobile: 0
            },
            alias: {
                id: 0,
                smoothScroll: 0,
                slideSwitch: 0
            }
        }, parameters), this.stages.resolve("Parameters"), this.disabled = {
            layerAnimations: !1,
            layerSplitTextAnimations: !1,
            backgroundAnimations: !1,
            postBackgroundAnimations: !1
        }, this.disableLayerAnimations !== undefined && !0 === this.disableLayerAnimations && (this.disabled.layerAnimations = !0), n2const.isSamsungBrowser && (this.disabled.layerSplitTextAnimations = !0, this.disabled.postBackgroundAnimations = !0), this.initCSS();
        try {
            eval(this.parameters.callbacks)
        } catch (t) {
            console.error(t)
        }
        n2ss.makeReady(this.id, this), this.widgetDeferreds = [], this.sliderElement.on("addWidget", this.addWidget.bind(this)), this.isAdmin && (this.changeTo = function() {}), this.load = new N2Classes.SmartSliderLoad(this, this.parameters.load), this.backgrounds = new N2Classes.SmartSliderBackgrounds(this), this.initSlides(), "function" == typeof this.parameters.initCallbacks && this.parameters.initCallbacks.call(this, $), this.stages.done("VisibleSlides", this.onSlidesReady.bind(this)), this.initUI(), navigator.userAgent.match("UCBrowser") && $("html").addClass("n2-ucbrowser")
    }, SmartSliderAbstract.prototype.onSlidesReady = function() {
        this.stages.resolve("SlidesReady")
    }, SmartSliderAbstract.prototype.initUI = function() {
        for (var i = 0; i < this.realSlides.length; i++) this.realSlides[i].setNext(this.realSlides[i + 1 > this.realSlides.length - 1 ? 0 : i + 1]);
        this.widgets = new N2Classes.SmartSliderWidgets(this);
        var isHover = !1,
            hoverTimeout;
        if (this.sliderElement.on({
                universalenter: function(t) {
                    $(t.target).closest(".n2-full-screen-widget").length || (clearTimeout(hoverTimeout), isHover = !0, this.sliderElement.addClass("n2-hover"), this.widgets.setState("hover", !0))
                }.bind(this),
                universalleave: function(t) {
                    t.stopPropagation(), hoverTimeout = setTimeout(function() {
                        isHover = !1, this.sliderElement.removeClass("n2-hover"), this.widgets.setState("hover", !1)
                    }.bind(this), 1e3)
                }.bind(this)
            }), this.parameters.carousel || this.initNotCarousel(), this.initHideArrow(), this.controls = {}, this.initMainAnimationWithLayerAnimation(), this.isAdmin || !this.parameters.parallax.enabled || !this.parameters.parallax.mobile && (this.parameters.parallax.mobile || n2const.isMobile) || this.ready(function() {
                this.parallax = new N2Classes.LayerParallax(this, this.parameters.parallax), this.parallax.start(this.currentSlide), this.sliderElement.off(".parallax").on("SlideWillChange", function(t, e) {
                    this.parallax.start(e)
                }.bind(this))
            }.bind(this)), this.parameters.blockrightclick && this.sliderElement.on("contextmenu", function(t) {
                t.preventDefault()
            }), this.initMainAnimation(), this.initResponsiveMode(), !this.killed) {
            try {
                var removeHoverClassCB = function() {
                    this.sliderElement.removeClass("n2-has-hover"), this.sliderElement[0].removeEventListener("touchstart", removeHoverClassCB, !!window.n2const.passiveEvents && {
                        passive: !0
                    })
                }.bind(this);
                this.sliderElement[0].addEventListener("touchstart", removeHoverClassCB, !!window.n2const.passiveEvents && {
                    passive: !0
                })
            } catch (t) {}
            if (this.initControls(), this.stages.resolve("UIReady"), !this.isAdmin) {
                var eventName = "click";
                this.hasTouch() && (eventName = "n2click"), this.sliderElement.find("[data-n2click]").each(function(i, el) {
                    var el = $(el);
                    el.on(eventName, function(e) {
                        eval(el.data("n2click"))
                    })
                }), this.sliderElement.find("[data-n2middleclick]").on("mousedown", function(e) {
                    var el = $(this);
                    2 != e.which && 4 != e.which || (e.preventDefault(), eval(el.data("n2middleclick")))
                })
            }
            this.load.start(), this.sliderElement.on("keypress", function(t) {
                32 !== t.charCode && 13 !== t.charCode || ($target = $(t.target).filter('[role="button"],[tabindex]').not("a,input,select,textarea"), $target.length && (t.preventDefault(), $(t.target).trigger("click").triggerHandler("n2Activate")))
            }).on("mouseleave", function(t) {
                $(t.currentTarget).trigger("blur")
            })
        }
    }, SmartSliderAbstract.prototype.initSlides = function() {
        for (var t = this.sliderElement.find(".n2-ss-slide"), e = 0; e < t.length; e++) this.slides.push(this.createSlide(t.eq(e), e));
        for (e = 0; e < this.slides.length; e++) this.slides[e].init(), 1 === this.slides[e].$element.data("first") && (this.originalRealStarterSlide = this.slides[e]);
        this.realSlides = this.slides, this.visibleSlides = this.slides, this.initSlidesEnd()
    }, SmartSliderAbstract.prototype.initSlidesEnd = function() {
        this.afterRawSlidesReady(), this.stages.resolve("RawSlides"), this.randomize(this.realSlides), this.stages.resolve("RawSlidesOrdered"), this.initStaticSlides()
    }, SmartSliderAbstract.prototype.initStaticSlides = function() {
        for (var t = this.sliderElement.find(".n2-ss-static-slide"), e = 0; e < t.length; e++) this.staticSlides.push(new N2Classes.FrontendSliderStaticSlide(this, t.eq(e)))
    }, SmartSliderAbstract.prototype.createSlide = function(t, e) {
        return new N2Classes.FrontendSliderSlide(this, t, e)
    }, SmartSliderAbstract.prototype.afterRawSlidesReady = function() {}, SmartSliderAbstract.prototype.trigger = function() {
        this.sliderElement.triggerHandler.apply(this.sliderElement, arguments)
    }, SmartSliderAbstract.prototype.publicTrigger = function() {
        this.trigger.apply(this, arguments), N2Classes.SmartSliderApi.dispatch(arguments[0], this)
    }, SmartSliderAbstract.prototype.getVisibleSlides = function(t) {
        return t === undefined && (t = this.currentSlide), [t]
    }, SmartSliderAbstract.prototype.getActiveSlides = function(t) {
        return this.getVisibleSlides(t)
    }, SmartSliderAbstract.prototype.findSlideBackground = function(t) {
        return t.$element.find(".n2-ss-slide-background")
    }, SmartSliderAbstract.prototype.getRealIndex = function(t) {
        return t
    }, SmartSliderAbstract.prototype.finalizeStarterSlide = function() {
        var t = this.originalRealStarterSlide;
        if (this.isAdmin) this.finalizeStarterSlideComplete(t);
        else if (this.parameters.randomize.randomizeFirst) t = this.visibleRealSlides[Math.floor(Math.random() * this.visibleRealSlides.length)], this.finalizeStarterSlideComplete(t);
        else if (window["ss" + this.id] !== undefined) "object" == typeof window["ss" + this.id] ? window["ss" + this.id].done(this.overrideStarterSlideIndex.bind(this)) : this.overrideStarterSlideIndex(window["ss" + this.id]);
        else if (!this.isAdmin && this.parameters.maintainSession && window.localStorage !== undefined) {
            var e = window.localStorage.getItem("ss-" + this.id);
            this.overrideStarterSlideIndex(e), this.sliderElement.on("mainAnimationComplete", function(t, e, i, s) {
                window.localStorage.setItem("ss-" + this.id, s)
            }.bind(this))
        } else this.finalizeStarterSlideComplete(t)
    }, SmartSliderAbstract.prototype.overrideStarterSlideIndex = function(t) {
        var e;
        null !== t && this.realSlides[t] && (e = this.realSlides[t]), this.finalizeStarterSlideComplete(e)
    }, SmartSliderAbstract.prototype.finalizeStarterSlideComplete = function(t) {
        t !== undefined && t.isVisible || (t = this.visibleRealSlides[0]), t !== undefined ? this.finalizeStarterSlideComplete2(t) : (this.hide(), this.sliderElement.one({
            SliderResize: function() {
                this.finalizeStarterSlideComplete(t)
            }.bind(this)
        }))
    }, SmartSliderAbstract.prototype.finalizeStarterSlideComplete2 = function(t) {
        t !== this.originalRealStarterSlide && this.originalRealStarterSlide !== undefined && this.originalRealStarterSlide.unsetActive(), this.responsive.onStarterSlide(t), this.stages.resolve("StarterSlide")
    }, SmartSliderAbstract.prototype.randomize = function(t) {
        this.parameters.randomize.randomize && this.shuffleSlides(t)
    }, SmartSliderAbstract.prototype.shuffleSlides = function(t) {
        t.sort(function() {
            return .5 - Math.random()
        });
        for (var e = t[0].$element.parent(), i = 0; i < t.length; i++) t[i].$element.appendTo(e), t[i].setIndex(i)
    }, SmartSliderAbstract.prototype.addWidget = function(t, e) {
        this.widgetDeferreds.push(e)
    }, SmartSliderAbstract.prototype.started = function(t) {
        this.stages.done("UIReady", t.bind(this))
    }, SmartSliderAbstract.prototype.ready = function(t) {
        this.stages.done("Show", t.bind(this))
    }, SmartSliderAbstract.prototype.startVisibilityCheck = function() {
        !this.isAdmin && this.parameters.playWhenVisible ? (this.checkIfVisibleCallback = this.checkIfVisible.bind(this), $(window).on("resize.n2-ss-visible" + this.id, this.checkIfVisibleCallback), this.sliderElement.on("mouseover.n2-ss-visible", this._markVisible.bind(this)), window.addEventListener("scroll", this.checkIfVisibleCallback, {
            capture: !0,
            passive: !0
        }), this.checkIfVisible()) : this.stages.resolve("Visible")
    }, SmartSliderAbstract.prototype.checkIfVisible = function() {
        var t = this.parameters.playWhenVisibleAt,
            e = $(window).scrollTop(),
            i = $(window).height(),
            s = $(document).height(),
            n = this.sliderElement[0].getBoundingClientRect(),
            o = i * t / 2,
            r = e + o,
            a = e + i - o;
        e < o && (r *= e / o), s - o < e + i && (a += e + i - s + o);
        var l = e + n.top,
            h = e + n.bottom;
        (this.isAdmin || l <= a && r <= l || r <= h && h <= a || l <= r && a <= h) && this._markVisible()
    }, SmartSliderAbstract.prototype._markVisible = function() {
        this.sliderElement.off(".n2-ss-visible"), $(window).off(".n2-ss-visible" + this.id), window.removeEventListener("scroll", this.checkIfVisibleCallback, {
            capture: !0,
            passive: !0
        }), this.stages.resolve("Visible")
    }, SmartSliderAbstract.prototype.visible = function(t) {
        this.stages.done("Visible", t.bind(this))
    }, SmartSliderAbstract.prototype.isPlaying = function() {
        return "ended" !== this.mainAnimation.getState()
    }, SmartSliderAbstract.prototype.focus = function(t) {
        var e = !1;
        if (this.responsive.parameters.focusUser && !t && (e = !0), e) {
            var i = $(window).scrollTop(),
                s = this.responsive.focusOffsetTop,
                n = this.responsive.focusOffsetBottom,
                o = $(window).height(),
                r = this.sliderElement[0].getBoundingClientRect(),
                a = r.top - s,
                l = o - r.bottom - n,
                h = this.responsive.parameters.focusEdge,
                d = "";
            "top-force" === h ? d = "top" : "bottom-force" === h ? d = "bottom" : a <= 0 && l <= 0 || 0 < a && 0 < l || (a < 0 ? d = "top" === h || "bottom" !== h && -a <= l ? "top" : "bottom" : l < 0 && (d = "top" !== h && ("bottom" === h || -l <= a) ? "bottom" : "top"));
            var c = i;
            if ("top" === d ? c = i - s + r.top : "bottom" === d && (c = i + n + r.bottom - o), c !== i) return this._scrollTo(c, Math.abs(i - c))
        }
        return !0
    }, SmartSliderAbstract.prototype._scrollTo = function(t, e) {
        var i = $.Deferred();
        return window.nextendScrollFocus = !0, n2const._animateScroll(document.scrollingElement, t, e, function() {
            i.resolve(), setTimeout(function() {
                window.nextendScrollFocus = !1
            }, 100)
        }), i
    }, SmartSliderAbstract.prototype.isChangeCarousel = function(t) {
        return "next" === t ? this.currentSlide.index + 1 >= this.slides.length : "previous" === t && this.currentSlide.index - 1 < 0
    }, SmartSliderAbstract.prototype.initNotCarousel = function() {
        this.realSlides[0].setPrevious(!1), this.realSlides[this.realSlides.length - 1].setNext(!1)
    }, SmartSliderAbstract.prototype.initHideArrow = function() {
        var i = function(t) {
            this.widgets.setState("nonCarouselFirst", !this.getUIPreviousSlide(t)), this.widgets.setState("nonCarouselLast", !this.getUINextSlide(t))
        }.bind(this);
        this.stages.done("StarterSlide", function() {
            i(this.currentSlide), this.sliderElement.on("SliderResize", function() {
                i(this.currentSlide)
            }.bind(this))
        }.bind(this)), this.sliderElement.on("SlideWillChange", function(t, e) {
            i(e)
        })
    }, SmartSliderAbstract.prototype.next = function(t, e) {
        var i = this.currentSlide.getNext();
        return !(!i || !this.getUINextSlide(this.currentSlide)) && this.changeTo(i.index, !1, t, e)
    }, SmartSliderAbstract.prototype.previous = function(t, e) {
        var i = this.getUIPreviousSlide(this.currentSlide);
        return !!i && this.changeTo(i.index, !0, t, e)
    }, SmartSliderAbstract.prototype.isChangePossible = function(t) {
        var e = !1;
        if ("next" === t) {
            var i = this.currentSlide.getNext();
            i && (e = i.index)
        } else if ("previous" === t) {
            var s = this.currentSlide.getPrevious();
            s && (e = s.index)
        }
        return !1 !== e && e !== this.currentSlide.index
    }, SmartSliderAbstract.prototype.nextCarousel = function(t, e) {
        return !!this.next(t, e) || this.changeTo(this.getFirstSlide().index, !1, t, e)
    }, SmartSliderAbstract.prototype.getFirstSlide = function() {
        return this.slides[0].isVisible ? this.slides[0] : this.slides[0].getNext()
    }, SmartSliderAbstract.prototype.getSlideCount = function() {
        for (var t = 0, e = 0; e < this.slides.length; e++) this.slides[e].isVisible && t++;
        return t
    }, SmartSliderAbstract.prototype.directionalChangeToReal = function(t) {
        this.directionalChangeTo(t)
    }, SmartSliderAbstract.prototype.directionalChangeTo = function(t) {
        t > this.currentSlide.index ? this.changeTo(t, !1) : this.changeTo(t, !0)
    }, SmartSliderAbstract.prototype.changeTo = function(i, s, n, o) {
        if ((i = parseInt(i)) === this.currentSlide.index) return !1;
        if (!this.slides[i].isVisible) return console.error("this slide is not visible on this device"), !1;
        this.trigger("SlideWillChange", [this.slides[i]]);
        var r = $.now();
        return $.when($.when.apply($, this.backgrounds.preLoadSlides(this.getVisibleSlides(this.slides[i]))), this.focus(n)).done(function() {
            if (i !== this.currentSlide.index && this.mainAnimationLastChangeTime <= r) {
                this.mainAnimationLastChangeTime = r;
                var t = this.mainAnimation.getState();
                if ("ended" === t) {
                    n === undefined && (n = !1);
                    var e = this.mainAnimation;
                    o !== undefined && (e = o), this._changeTo(i, s, n, o), e.changeTo(this.currentSlide, this.slides[i], s, n), this._changeCurrentSlide(i)
                } else "initAnimation" !== t && "playing" !== t || (this.sliderElement.off(".fastChange").one("mainAnimationComplete.fastChange", function() {
                    this.changeTo.call(this, i, s, n, o)
                }.bind(this)), this.mainAnimation.timeScale(2 * this.mainAnimation.timeScale()))
            }
        }.bind(this)), !0
    }, SmartSliderAbstract.prototype.setCurrentRealSlide = function(t) {
        this.currentRealSlide = this.currentSlide = t
    }, SmartSliderAbstract.prototype._changeCurrentSlide = function(t) {
        this.setCurrentRealSlide(this.slides[t]), this.sliderElement.triggerHandler("sliderChangeCurrentSlide")
    }, SmartSliderAbstract.prototype._changeTo = function(t, e, i, s) {}, SmartSliderAbstract.prototype.revertTo = function(t, e) {
        this.slides[e].unsetActive(), this.slides[t].setActive(), this._changeCurrentSlide(t), this.trigger("SlideWillChange", [this.slides[t]])
    }, SmartSliderAbstract.prototype.forceSetActiveSlide = function(t) {
        t.setActive()
    }, SmartSliderAbstract.prototype.forceUnsetActiveSlide = function(t) {
        t.unsetActive()
    }, SmartSliderAbstract.prototype.updateInsideSlides = function(t) {
        for (var e = 0; e < this.slides.length; e++) this.slides[e].setInside(0 <= t.indexOf(this.slides[e]))
    }, SmartSliderAbstract.prototype.playSlide = function(t) {
        t.playIn()
    }, SmartSliderAbstract.prototype.initMainAnimationWithLayerAnimation = function() {
        "forced" === this.parameters.layerMode.mode && this.sliderElement.on("preChangeToPlay", function(t, e, i, s, n) {
            i.handled = !0, s.$element.on("layerAnimationCompleteOut.layers", function() {
                s.$element.off("layerAnimationCompleteOut.layers"), e.resolve()
            }), s.playOut()
        }.bind(this)), this.sliderElement.on({
            mainAnimationStart: this.onMainAnimationStartSyncLayers.bind(this, this.parameters.layerMode),
            reverseModeEnabled: this.onMainAnimationStartSyncLayersReverse.bind(this, this.parameters.layerMode)
        })
    }, SmartSliderAbstract.prototype.onMainAnimationStartSyncLayers = function(t, e, i, s, n) {
        var o = this.slides[n];
        this.slides[s];
        "mainInStart" === t.inAnimation ? o.$element.one("mainAnimationStartIn.layers", function() {
            o.$element.off("mainAnimationStartInCancel.layers"), this.playSlide(o)
        }.bind(this)) : "mainInEnd" === t.inAnimation && o.$element.one("mainAnimationCompleteIn.layers", function() {
            o.$element.off("mainAnimationStartInCancel.layers"), this.playSlide(o)
        }.bind(this)), o.$element.one("mainAnimationStartInCancel.layers", function() {
            o.$element.off("mainAnimationStartIn.layers"), o.$element.off("mainAnimationCompleteIn.layers")
        })
    }, SmartSliderAbstract.prototype.onMainAnimationStartSyncLayersReverse = function(t, e, i) {
        var s = this.slides[i];
        "mainInStart" === t.inAnimation ? s.$element.one("mainAnimationStartIn.layers", function() {
            this.playSlide(s)
        }.bind(this)) : "mainInEnd" === t.inAnimation && s.$element.one("mainAnimationCompleteIn.layers", function() {
            this.sliderElement.off("mainAnimationComplete.layers"), this.playSlide(s)
        }.bind(this)), this.sliderElement.one("mainAnimationComplete.layers", function() {
            s.$element.off("mainAnimationStartIn.layers"), s.$element.off("mainAnimationCompleteIn.layers")
        })
    }, SmartSliderAbstract.prototype.findSlideByElement = function(t) {
        var e;
        for (t = $(t), e = 0; e < this.realSlides.length; e++)
            if (1 === this.realSlides[e].$element.has(t).length) return this.realSlides[e];
        for (e = 0; e < this.staticSlides.length; e++)
            if (1 === this.staticSlides[e].$element.has(t).length) return this.staticSlides[e];
        return !1
    }, SmartSliderAbstract.prototype.findSlideIndexByElement = function(t) {
        var e = this.findSlideByElement(t);
        return e || -1
    }, SmartSliderAbstract.prototype.initMainAnimation = function() {
        this.mainAnimation = !1
    }, SmartSliderAbstract.prototype.initResponsiveMode = function() {}, SmartSliderAbstract.prototype.hasTouch = function() {
        return "0" != this.parameters.controls.touch
    }, SmartSliderAbstract.prototype.initControls = function() {
        if (!this.parameters.admin) {
            if (this.hasTouch()) switch (this.parameters.controls.touch) {
                case "vertical":
                    new N2Classes.SmartSliderControlTouchVertical(this);
                    break;
                case "horizontal":
                    new N2Classes.SmartSliderControlTouchHorizontal(this)
            }
            this.parameters.controls.keyboard && (this.controls.touch !== undefined ? new N2Classes.SmartSliderControlKeyboard(this, this.controls.touch.axis) : new N2Classes.SmartSliderControlKeyboard(this, "horizontal")), this.parameters.controls.mousewheel && new N2Classes.SmartSliderControlMouseWheel(this), this.controlAutoplay = new N2Classes.SmartSliderControlAutoplay(this, this.parameters.autoplay), this.controlFullscreen = new N2Classes.SmartSliderControlFullscreen(this), this.parameters.alias.id && new N2Classes.SmartSliderControlAlias(this, this.parameters.alias)
        }
    }, SmartSliderAbstract.prototype.getSlideIndex = function(t) {
        return t
    }, SmartSliderAbstract.prototype.slideToID = function(t, e, i) {
        for (var s = 0; s < this.realSlides.length; s++)
            if (this.realSlides[s].id === t) return this.slide(this.getSlideIndex(s), e, i);
        var n = $('[data-id="' + t + '"]').closest(".n2-ss-slider");
        return !(!n.length || this.id !== n.data("ss").id) || (n.length ? (n2const._animateScroll(document.scrollingElement, n.offset().top, 400), n.data("ss").slideToID(t, e, !0)) : void 0)
    }, SmartSliderAbstract.prototype.slide = function(t, e, i) {
        return 0 <= t && t < this.slides.length && (e === undefined ? this.parameters.carousel && this.currentSlide.index === this.slides.length - 1 && 0 === t ? this.next(i) : this.currentSlide.index > t ? this.changeTo(t, !0, i) : this.changeTo(t, !1, i) : this.changeTo(t, !e, i))
    }, SmartSliderAbstract.prototype.hide = function() {
        this.isVisible && (this.responsive.alignElement.addClass("n2-ss-slider-has-no-slide"), this.load.$placeholder.addClass("n2-ss-slider-has-no-slide"), this.isVisible = !1)
    }, SmartSliderAbstract.prototype.show = function() {
        this.isVisible || (this.responsive.alignElement.removeClass("n2-ss-slider-has-no-slide"), this.load.$placeholder.removeClass("n2-ss-slider-has-no-slide"), $(window).trigger("scroll"), this.isVisible = !0)
    }, SmartSliderAbstract.prototype.startAutoplay = function() {
        return this.controlAutoplay !== undefined && (this.controlAutoplay.setState("pausedSecondary", 0), !0)
    }, SmartSliderAbstract.prototype.pauseAutoplay = function() {
        return this.controlAutoplay !== undefined && (this.controlAutoplay.setState("pausedSecondary", 1), !0)
    }, SmartSliderAbstract.prototype.initLayerAnimations = function() {
        for (var t = 0; t < this.staticSlides.length; t++) this.staticSlides[t].initLayerAnimations();
        for (var e = 0; e < this.realSlides.length; e++) this.realSlides[e].initLayerAnimations();
        this.sliderElement.on("SliderDeviceOrientation", this._deviceSlides.bind(this)), this.sliderElement.on("SliderResize", this._resizeSlides.bind(this)), this.isAdmin || this.visible(function() {
            this.parameters.layerMode.playFirstLayer ? this.currentSlide.playIn() : this.currentSlide.playSpecialEventOnly()
        }.bind(this))
    }, SmartSliderAbstract.prototype._deviceSlides = function(t, e) {
        for (var i = 0; i < this.staticSlides.length; i++) this.staticSlides[i].setDevice.call(this.staticSlides[i], e.device);
        for (var s = 0; s < this.realSlides.length; s++) this.realSlides[s].setDevice.call(this.realSlides[s], e.device)
    }, SmartSliderAbstract.prototype._resizeSlides = function(t, e, i) {
        for (var s = 0; s < this.staticSlides.length; s++) this.staticSlides[s].resize.apply(this.staticSlides[s], arguments);
        for (var n = 0; n < this.realSlides.length; n++) this.realSlides[n].resize.apply(this.realSlides[n], arguments)
    }, SmartSliderAbstract.prototype.getSlideBackgroundContainer = function() {}, SmartSliderAbstract.prototype.getPerspective = function() {
        return this.parameters.perspective
    }, SmartSliderAbstract.prototype.getAnimationAxis = function() {
        return "horizontal"
    }, SmartSliderAbstract.prototype.getDirectionPrevious = function() {
        return n2const.isRTL() && "horizontal" === this.getAnimationAxis() ? "next" : "previous"
    }, SmartSliderAbstract.prototype.getDirectionNext = function() {
        return n2const.isRTL() && "horizontal" === this.getAnimationAxis() ? "previous" : "next"
    }, SmartSliderAbstract.prototype.previousWithDirection = function() {
        return this[this.getDirectionPrevious()]()
    }, SmartSliderAbstract.prototype.nextWithDirection = function() {
        return this[this.getDirectionNext()]()
    }, SmartSliderAbstract.prototype.getUIPreviousSlide = function(t) {
        return t.getPrevious()
    }, SmartSliderAbstract.prototype.getUINextSlide = function(t) {
        return t.getNext()
    }, SmartSliderAbstract
}), N2D("Stages", function(o, e) {
    function t() {
        this.stages = {}
    }

    function i(t) {
        this.n = t, this.d = o.Deferred()
    }
    return t.prototype.get = function(t) {
        return this.stages[t] === e && (this.stages[t] = new i(t)), this.stages[t]
    }, t.prototype.resolve = function(t) {
        this.get(t).resolve()
    }, t.prototype.done = function(t, e) {
        var i;
        if ("string" == typeof t) i = this.get(t);
        else {
            for (var s = [], n = 0; n < t.length; n++) s.push(this.get(t[n]).getDeferred());
            i = o.when.apply(o, s)
        }
        i.done(e)
    }, t.prototype.resolved = function(t) {
        return this.get(t).resolved()
    }, i.prototype.getDeferred = function() {
        return this.d
    }, i.prototype.resolve = function() {
        this.resolved() || (this.d.resolve(), this.d = !0)
    }, i.prototype.done = function(t) {
        !0 === this.d ? t() : this.d.done(t)
    }, i.prototype.resolved = function() {
        return !0 === this.d || "resolved" === this.d.state()
    }, t
}), N2D("SmartSliderWidget", function(t, e) {
    "use strict";

    function i(t) {
        this.slider = t, this.slider.started(this.register.bind(this))
    }
    return i.prototype.register = function() {
        this.slider.widgets.has(this.key) || (this.slider.widgets.register(this.key, this), this.onStart())
    }, i.prototype.onStart = function() {}, i.prototype.isVisible = function() {
        return this.$widget.is(":visible")
    }, i.prototype.calculateDimensions = function(t) {
        this.isVisible() ? (t[this.key + "width"] = this.$widget.outerWidth(), t[this.key + "height"] = this.$widget.outerHeight()) : (t[this.key + "width"] = 0, t[this.key + "height"] = 0)
    }, i.prototype.filterSliderVerticalCSS = function(t) {}, i
}), N2D("SmartSliderWidgets", function($, undefined) {
    function SmartSliderWidgets(t) {
        this.slider = t, this.sliderElement = t.sliderElement, this.controls = {
            previous: undefined,
            next: undefined,
            bullet: undefined,
            autoplay: undefined,
            indicator: undefined,
            bar: undefined,
            thumbnail: undefined,
            shadow: undefined,
            fullscreen: undefined,
            html: undefined
        }, this.excludedSlides = {}, this.states = {
            hover: !1,
            nonCarouselFirst: !1,
            nonCarouselLast: !1,
            currentSlideIndex: -1,
            singleSlide: !1
        }
    }
    return SmartSliderWidgets.prototype.register = function(t, e) {
        this.controls[t] = e
    }, SmartSliderWidgets.prototype.has = function(t) {
        return this.controls[t] !== undefined
    }, SmartSliderWidgets.prototype.setState = function(t, e) {
        if (this.states[t] != e) {
            this.states[t] = e;
            var i = t.split(".");
            switch (i[0]) {
                case "hide":
                    this.onStateChangeSingle(i[1]);
                    break;
                case "nonCarouselFirst":
                    this.onStateChangeSingle(this.slider.getDirectionPrevious());
                    break;
                case "nonCarouselLast":
                    this.onStateChangeSingle(this.slider.getDirectionNext());
                    break;
                default:
                    this.onStateChangeAll()
            }
        }
    }, SmartSliderWidgets.prototype.onStateChangeAll = function() {
        for (var t in this.controls) this.onStateChangeSingle(t)
    }, SmartSliderWidgets.prototype.onStateChangeSingle = function(t) {
        if (this.controls[t]) {
            var e = !0;
            if (this.controls[t].$widget.hasClass("n2-ss-widget-display-hover") && (e = this.states.hover), e && (t === this.slider.getDirectionPrevious() && this.states.nonCarouselFirst || t === this.slider.getDirectionNext() && this.states.nonCarouselLast) && (e = !1), e) {
                var i = t + "-" + (this.states.currentSlideIndex + 1);
                this.excludedSlides[i] && (e = !1)
            }
            e && this.states["hide." + t] !== undefined && this.states["hide." + t] && (e = !1), e && this.states.singleSlide && ("previous" !== t && "next" !== t && "bullet" !== t && "autoplay" !== t && "indicator" !== t || (e = !1)), this.controls[t].$widget.toggleClass("n2-ss-widget-hidden", !e)
        }
    }, SmartSliderWidgets.prototype.onReady = function() {
        this.slider.sliderElement.on("visibleSlidesChanged", function() {
            this.setState("singleSlide", this.slider.visibleSlides.length <= 1)
        }.bind(this)), this.setState("singleSlide", this.slider.visibleSlides.length <= 1), this.$vertical = this.sliderElement.find('[data-position="above"],[data-position="below"]').not(".nextend-shadow");
        var t = !1;
        for (var e in this.controls)
            if (this.controls[e] !== undefined) {
                var i = this.controls[e].$widget.attr("data-exclude-slides");
                if (i !== undefined) {
                    for (var s = i.split(","), n = s.length - 1; 0 <= n; n--) {
                        var o = s[n].split("-");
                        if (2 === o.length) {
                            var r = parseInt(o[0]),
                                a = parseInt(o[1]);
                            if (r <= a)
                                for (var l = r; l <= a; l++) s.push(l)
                        } else s[n] = parseInt(s[n])
                    }
                    if (0 < s.length) {
                        for (n = 0; n < s.length; n++) this.excludedSlides[e + "-" + s[n]] = !0;
                        t = !0
                    }
                }
            }
        if (t) {
            var h = function(t, e) {
                this.setState("currentSlideIndex", e.index)
            }.bind(this);
            h(null, this.slider.currentRealSlide), this.slider.sliderElement.on("SlideWillChange", h)
        }
        this.variableElements = {
            top: this.sliderElement.find("[data-sstop]"),
            right: this.sliderElement.find("[data-ssright]"),
            bottom: this.sliderElement.find("[data-ssbottom]"),
            left: this.sliderElement.find("[data-ssleft]")
        }, this.slider.responsive.addFilter("SliderVerticalCSS", this.filterSliderVerticalCSS.bind(this)), this.forceLayoutComposition(), this.onStateChangeAll(), this.slider.stages.resolve("WidgetsReady")
    }, SmartSliderWidgets.prototype.calculateDimensions = function() {
        for (var t in this.controls) this.controls[t] !== undefined ? this.controls[t].calculateDimensions(this.slider.responsive.resizeContext) : (this.slider.responsive.resizeContext[t + "width"] = 0, this.slider.responsive.resizeContext[t + "height"] = 0)
    }, SmartSliderWidgets.prototype.getDimensions = function() {
        this.calculateDimensions();
        var t = $.extend(!0, {}, this.slider.responsive.resizeContext);
        return t.width = t.sliderWidth, t.height = t.sliderHeight, t.outerwidth = this.sliderElement.parent().width(), t.outerheight = this.sliderElement.parent().height(), t.canvaswidth = t.slideWidth, t.canvasheight = t.slideHeight, t.paneWidth !== undefined && (t.panewidth = t.paneWidth), t.margintop = t.marginright = t.marginbottom = t.marginleft = 0, t
    }, SmartSliderWidgets.prototype.dimensionsToVariables = function(t) {
        var e = "";
        for (var i in t) {
            var s = t[i];
            "number" == typeof s && (e += "var " + i + " = " + s + ";")
        }
        return e
    }, SmartSliderWidgets.prototype.forceLayoutComposition = function() {
        for (var t = this.filterSliderVerticalCSS([]), e = 0; e < t.length; e++) t[e].flush()
    }, SmartSliderWidgets.prototype.filterSliderVerticalCSS = function(cssData) {
        var temp, dimensions = this.getDimensions();
        for (var k in this.dimensions = dimensions, this.controls) this.controls[k] !== undefined && this.controls[k].filterSliderVerticalCSS(cssData);
        for (var k in eval(this.dimensionsToVariables(dimensions)), this.variableElements)
            for (var i = 0; i < this.variableElements[k].length; i++) {
                var el = this.variableElements[k].eq(i);
                try {
                    var value = eval(el.data("ss" + k));
                    temp = {}, temp[k] = value + "px", cssData.push(new N2Classes.CSSData(el, temp))
                } catch (t) {
                    console.log(el, " position variable: " + t.message + ": ", el.data("ss" + k))
                }
            }
        return cssData
    }, SmartSliderWidgets
}), N2D("SmartSliderPluginLightbox", ["SmartSliderPlugins", "litebox"], function(r, a) {
    function t(t) {
        t.isAdmin || (this.slider = t).stages.done("Visible", this.onVisible.bind(this))
    }
    t.prototype.onVisible = function() {
        if (this.slider.parameters.plugins.lightbox !== a) {
            this.parameters = r.extend({
                label: ""
            }, this.slider.parameters.plugins.lightbox), this.onVisibleRealSlidesChanged(), this.slider.sliderElement.on({
                visibleRealSlidesChanged: this.onVisibleRealSlidesChanged.bind(this)
            });
            var t = "click";
            this.slider.hasTouch() && (t = "n2click");
            for (var e = 0; e < this.slider.realSlides.length; e++) this.slider.realSlides[e].getLightboxImage() && this.slider.realSlides[e].$element.css("cursor", "zoom-in").on(t, function(t, e) {
                n2ss.isClickAllowed(e) && !r(e.target).hasClass("smart-slider-overlay") && setTimeout(function() {
                    "ended" === this.slider.mainAnimation.state && this.openLightbox(t)
                }.bind(this), 10)
            }.bind(this, this.slider.realSlides[e]))
        }
    }, t.prototype.onVisibleRealSlidesChanged = function() {
        this.$lightboxes !== a && this.$lightboxes.remove(), this.$lightboxes = r();
        for (var t = 0, e = 0; t < this.slider.visibleRealSlides.length; t++) {
            var i = this.slider.visibleRealSlides[t],
                s = i.getLightboxImage();
            if (s) {
                var n = {
                    slide: i,
                    index: e
                };
                switch (this.parameters.label) {
                    case "name":
                        n.title = i.getTitle();
                        break;
                    case "namemore":
                        n.title = i.getTitle(), n.description = i.getDescription()
                }
                var o = r('<a href="' + s + '" data-n2-lightbox="" data-litebox-group="' + this.slider.id + '" class="nolightbox no-lightbox" style="display:none;"></a>').data(n).on("click", function(t) {
                    t.stopPropagation()
                }).appendTo(i.$element);
                i.$element.data("$lightbox", o), this.$lightboxes = this.$lightboxes.add(o), e++
            }
        }
        this.$lightboxes.liteBox({
            blockrightclick: this.slider.parameters.blockrightclick,
            callbackBeforeOpen: function(t) {
                this.$element.trigger("mediaStarted", "lightbox")
            },
            callbackAfterClose: function() {
                this.$element.trigger("mediaEnded", "lightbox")
            },
            callbackPrev: function() {
                var t = this.$currentLightboxedImage.data("index") - 1;
                t < 0 && (t = this.$lightboxes.length - 1), this.$currentLightboxedImage = this.$lightboxes.eq(t);
                var e = this.$currentLightboxedImage.data("slide");
                this.slider.directionalChangeTo(e.group.index)
            }.bind(this),
            callbackNext: function() {
                var t = this.$currentLightboxedImage.data("index") + 1;
                t === this.$lightboxes.length && (t = 0), this.$currentLightboxedImage = this.$lightboxes.eq(t);
                var e = this.$currentLightboxedImage.data("slide");
                this.slider.directionalChangeTo(e.group.index)
            }.bind(this)
        })
    }, t.prototype.openLightbox = function(t) {
        this.$currentLightboxedImage = t.$element.data("$lightbox"), this.$currentLightboxedImage.trigger("click")
    }, N2Classes.SmartSliderPlugins.addPlugin("lightbox", t)
}), N2D("SmartSliderPluginParticleJS", ["SmartSliderPlugins", "particlesJS"], function(i, t) {
    function e(t) {
        (this.slider = t).stages.done("Parameters", function() {
            this.slider.parameters.particlejs && t.stages.done("BeforeShow", this.onBeforeShow.bind(this))
        }.bind(this))
    }
    e.prototype.onBeforeShow = function() {
        this.start(this.slider.parameters.particlejs)
    }, e.prototype.start = function(t) {
        if (this.pJS && (this.pJS.pJS.fn.vendors.destroypJS(), this.slider.sliderElement.off(".particleJS")), t) {
            if (!t.mobile && n2const.isPhone) return;
            var e = this.slider.getSlideBackgroundContainer();
            this.pJS = N2Classes.particlesJS(e, i.extend(!0, t, {
                interactivity: {
                    detect_on: this.slider.sliderElement[0]
                }
            })), this.slider.sliderElement.on("SliderResize.particleJS", function() {
                this.pJS.pJS.fn.resize()
            }.bind(this))
        }
    }, N2Classes.SmartSliderPlugins.addPlugin("particleJS", e)
}), N2D("SmartSliderMainAnimationAbstract", function(o, t) {
    function s(t, e) {
        this.state = "ended", this.isTouch = !1, this.isReverseAllowed = !0, this.isReverseEnabled = !1, this.reverseSlideIndex = null, this.isNoAnimation = !1, this.slider = t, this.parameters = o.extend({
            duration: 1500,
            ease: "easeInOutQuint"
        }, e), this.parameters.duration /= 1e3, this.sliderElement = t.sliderElement, this.timeline = new NextendTimeline({
            paused: !0
        }), this.sliderElement.on("mainAnimationStart", function(t, e, i, s) {
            this._revertCurrentSlideIndex = i, this._revertNextSlideIndex = s
        }.bind(this)), this.slider.stages.done("ResponsiveStart", this.init.bind(this))
    }
    return s.prototype.init = function() {
        this.responsive = this.slider.responsive
    }, s.prototype.enableReverseMode = function() {
        this.isReverseEnabled = !0, this.reverseTimeline = new NextendTimeline({
            paused: !0
        }), this.slider.trigger("reverseModeEnabled", this.reverseSlideIndex)
    }, s.prototype.disableReverseMode = function() {
        this.isReverseEnabled = !1
    }, s.prototype.setTouch = function(t) {
        this.isTouch = t
    }, s.prototype.setTouchProgress = function(t) {
        "ended" !== this.state && (this.isReverseEnabled ? 0 === t ? (this.reverseTimeline.progress(0), this.timeline.progress(t, !1)) : 0 <= t && t <= 1 ? (this.reverseTimeline.progress(0), this.timeline.progress(t)) : t < 0 && -1 <= t && (this.timeline.progress(0), this.reverseTimeline.progress(Math.abs(t))) : t <= 0 ? this.timeline.progress(Math.max(t, 1e-6), !1) : 0 <= t && t <= 1 && this.timeline.progress(t))
    }, s.prototype.setTouchEnd = function(t, e, i) {
        "ended" != this.state && (this.isReverseEnabled ? this._setTouchEndWithReverse(t, e, i) : this._setTouchEnd(t, e, i))
    }, s.prototype._setTouchEnd = function(t, e, i) {
        t && 0 < e ? (this.fixTouchDuration(this.timeline, e, i), this.timeline.play()) : (this.revertCB(this.timeline), this.fixTouchDuration(this.timeline, 1 - e, i), this.timeline.reverse(), this.willRevertTo(this._revertCurrentSlideIndex, this._revertNextSlideIndex))
    }, s.prototype._setTouchEndWithReverse = function(t, e, i) {
        t ? e < 0 && 0 < this.reverseTimeline.totalDuration() ? (this.fixTouchDuration(this.reverseTimeline, e, i), this.reverseTimeline.play(), this.willRevertTo(this.reverseSlideIndex, this._revertNextSlideIndex)) : (this.willCleanSlideIndex(this.reverseSlideIndex), this.fixTouchDuration(this.timeline, e, i), this.timeline.play()) : (e < 0 ? (this.revertCB(this.reverseTimeline), this.fixTouchDuration(this.reverseTimeline, 1 - e, i), this.reverseTimeline.reverse()) : (this.revertCB(this.timeline), this.fixTouchDuration(this.timeline, 1 - e, i), this.timeline.reverse()), this.willCleanSlideIndex(this.reverseSlideIndex), this.willRevertTo(this._revertCurrentSlideIndex, this._revertNextSlideIndex))
    }, s.prototype.fixTouchDuration = function(t, e, i) {
        var s = t.totalDuration(),
            n = Math.max(s / 3, Math.min(s, i / Math.abs(e) / 1e3));
        n !== s && t.totalDuration(n)
    }, s.prototype.getState = function() {
        return this.state
    }, s.prototype.timeScale = function() {
        return 0 < arguments.length ? (this.timeline.timeScale(arguments[0]), this) : this.timeline.timeScale()
    }, s.prototype.preChangeToPlay = function(t, e, i) {
        var s = {
            handled: !1
        };
        this.slider.trigger("preChangeToPlay", [t, s, e, i]), s.handled || t.resolve()
    }, s.prototype.changeTo = function(e, i, t, s) {
        if (this.slider.parameters.dynamicHeight && this._dynamicHeightTimeline && this._dynamicHeightTimeline.pause(), this._initAnimation(e, i, t), this.state = "initAnimation", this.timeline.paused(!0), this.timeline.eventCallback("onStart", this.onChangeToStart, [e, i, s], this), this.timeline.eventCallback("onComplete", this.onChangeToComplete, [e, i, s], this), this.timeline.eventCallback("onReverseComplete", null), this.revertCB = function(t) {
                t.eventCallback("onReverseComplete", this.onReverseChangeToComplete, [i, e, s], this)
            }.bind(this), this.isTouch) e.onOutAnimationsPlayed();
        else {
            var n = o.Deferred();
            n.done(function() {
                this.play()
            }.bind(this.timeline)), this.preChangeToPlay(n, e, i)
        }
    }, s.prototype.willRevertTo = function(t, e) {
        this.slider.trigger("mainAnimationWillRevertTo", [t, e]), this.sliderElement.one("mainAnimationComplete", this.revertTo.bind(this, t, e))
    }, s.prototype.revertTo = function(t, e) {
        this.slider.revertTo(t, e), this.slider.slides[e].triggerHandler("mainAnimationStartInCancel")
    }, s.prototype.willCleanSlideIndex = function(t) {
        this.sliderElement.one("mainAnimationComplete", this.cleanSlideIndex.bind(this, t))
    }, s.prototype.cleanSlideIndex = function() {}, s.prototype._initAnimation = function(t, e, i) {
        this.slider.updateInsideSlides([t, e])
    }, s.prototype.onChangeToStart = function(t, e, i) {
        this.state = "playing";
        var s = [this, t.index, e.index, i];
        this.slider.trigger("mainAnimationStart", s), t.triggerHandler("mainAnimationStartOut", s), e.triggerHandler("mainAnimationStartIn", s)
    }, s.prototype.onChangeToComplete = function(t, e, i) {
        var s = [this, t.index, e.index, i];
        this.clearTimelines(), this.disableReverseMode(), t.triggerHandler("mainAnimationCompleteOut", s), e.triggerHandler("mainAnimationCompleteIn", s), this.state = "ended", this.slider.parameters.dynamicHeight && (this._dynamicHeightTimeline = new NextendTimeline, this.slider.responsive.resizeStage2HeightAnimated(this._dynamicHeightTimeline, e, .6), this._dynamicHeightTimeline.eventCallback("onComplete", function() {
            delete this._dynamicHeightTimeline
        }, this)), this.slider.updateInsideSlides([e]), i || e.focus(), this.slider.trigger("mainAnimationComplete", s)
    }, s.prototype.onReverseChangeToComplete = function(t, e, i) {
        s.prototype.onChangeToComplete.apply(this, arguments)
    }, s.prototype.clearTimelines = function() {
        this.revertCB = function() {}, this.timeline.clear(), this.timeline.timeScale(1)
    }, s.prototype.getEase = function() {
        return this.isTouch ? "linear" : this.parameters.ease
    }, s
}), N2D("SmartSliderPostBackgroundAnimation", function(h, d) {
    var c = {
            default: 5,
            superSlow: 20,
            slow: 10,
            normal: 5,
            fast: 3,
            superFast: 1.5
        },
        p = {
            default: 1,
            superSoft: .3,
            soft: .6,
            normal: 1,
            strong: 1.5,
            superStrong: 2
        };

    function t(t, e) {
        this.tween = null, this.lastTween = null, this.slider = t, this.mainAnimation = e, this.isFirst = !0, this.visibleAddedButNotPlayed = !1, this.parameters = h.extend({
            data: 0,
            speed: "default",
            strength: "default"
        }, t.parameters.postBackgroundAnimations), this.ratios = {
            slideW: 1,
            slideH: 1
        }, this.slider.stages.done("StarterSlide", this.init.bind(this))
    }
    return t.prototype.init = function() {
        this.backgrounds = this.slider.backgrounds, this.tweens = [], this.images = this.backgrounds.getBackgroundImages();
        for (var t = 0; t < this.images.length; t++) this.images[t] && this.images[t].hasImage() ? (this.tweens[t] = this.images[t].loadDeferred, this.images[t].loadDeferred.done(function(t) {
            this.tweens[t] = this.getAnimation(t, this.images[t])
        }.bind(this, t))) : this.tweens[t] = !1;
        this.playOnce = this.slider.parameters.layerMode.playOnce, this.playFirst = this.slider.parameters.layerMode.playFirstLayer;
        var e = this.slider.currentSlide.index;
        this.tweens[e] && h.when(this.tweens[e]).done(function() {
            this.tween = this.tweens[e], this.playFirst ? this.addVisiblePlay() : this.tween && this.tween.progress(1, !1)
        }.bind(this)), this.slider.sliderElement.on({
            mainAnimationStart: this.onMainAnimationStart.bind(this),
            mainAnimationComplete: this.stop.bind(this),
            SliderResize: this.onResize.bind(this),
            mainAnimationWillRevertTo: this.onMainAnimationWillRevertTo.bind(this),
            SlideForceChange: function(t, e, i) {
                this.prepareToSwitchSlide(e, i)
            }.bind(this)
        })
    }, t.prototype.addVisiblePlay = function() {
        this.visibleAddedButNotPlayed || (this.visibleAddedButNotPlayed = !0, this.slider.visible(this.play.bind(this)))
    }, t.prototype.onMainAnimationStart = function() {
        this.isFirst = !1, this.mainAnimation.hasBackgroundAnimation() || this.mainAnimation.isTouch ? this.slider.sliderElement.one("mainAnimationComplete", this.play.bind(this)) : this.play()
    }, t.prototype.onMainAnimationWillRevertTo = function(t, e, i) {
        this.lastTween = this.tween, this.tween = !1
    }, t.prototype.onResize = function(t, e) {
        this.ratios = {
            slideW: e.slideW,
            slideH: e.slideH
        };
        for (var i = 0; i < this.tweens.length; i++) {
            var s = this.tweens[i];
            s && s.invalidate && s.invalidate()
        }
    }, t.prototype.getAnimation = function(t, e) {
        if (!e.elements.image) return !1;
        var i = this.parameters.data,
            s = this.parameters.speed,
            n = this.parameters.strength;
        if (this.slider.slides[t].postBackgroundAnimation) {
            var o = this.slider.slides[t].postBackgroundAnimation;
            i = o.data, s = o.speed, n = o.strength
        }
        if (!i) return !1;
        var r = h.extend(!0, {}, i.animations[Math.floor(Math.random() * i.animations.length)]);
        r.from.transformOrigin === d && (r.from.transformOrigin = i.transformOrigin), (n2const.isFirefox || n2const.isIE <= 11) && NextendTween.set(e.elements.image.$background.parent(), {
            rotationZ: "0.001deg"
        }), NextendTween.set(e.elements.image.$background, {
            transformOrigin: r.from.transformOrigin,
            backfaceVisibility: "hidden",
            transformStyle: "flat",
            overflow: "hidden"
        }), r.to.paused = !0;
        for (var a = 0; a < r.strength.length; a++) {
            var l = r.strength[a];
            "scale" === l ? (r.from.scale = 1 + (r.from.scale - 1) * p[n], r.to.scale = 1 + (r.to.scale - 1) * p[n]) : (r.from[l] *= p[n], r.to[l] *= p[n])
        }
        return r.from.x !== d && (r.from.x = function(t) {
            return this.ratios.slideW * t
        }.bind(this, r.from.x)), r.from.y !== d && (r.from.y = function(t) {
            return this.ratios.slideH * t
        }.bind(this, r.from.y)), r.to.x !== d && (r.to.x = function(t) {
            return this.ratios.slideW * t
        }.bind(this, r.to.x)), r.to.y !== d && (r.to.y = function(t) {
            return this.ratios.slideH * t
        }.bind(this, r.to.y)), e.elements.image.$background.css("will-change", "transform"), NextendTween.fromTo(e.elements.image.$background, c[s], r.from, r.to)
    }, t.prototype.prepareToSwitchSlide = function(t, e) {
        t && this.tweens[t.index] ? (this.mainAnimation.hasBackgroundAnimation() && this.tweens[t.index].pause(), this.lastTween = this.tweens[t.index]) : this.lastTween = !1, this.tweens[e.index] ? this.tween = this.tweens[e.index] : this.tween = !1
    }, t.prototype.play = function() {
        this.visibleAddedButNotPlayed = !1, !this.tween || this.playOnce && 0 !== this.tween.progress() || this.tween.play()
    }, t.prototype.stop = function() {
        !this.playOnce && this.lastTween && this.lastTween.pause(0)
    }, t
}), N2D("SmartSliderControlAlias", function(s, e) {
    "use strict";

    function t(t, e) {
        var i = "#" + t.elementID;
        this.elements = {
            sliderSelector: i,
            $slider: s(i),
            $sliderAlign: s(i + "-align")
        }, this.parameters = s.extend({
            slider: t,
            slideCount: t.slides.length,
            alias: s(i).data("alias"),
            href: window.location.href
        }, e), this.parameters.anchor = this.getAnchor(), this.parameters.alias && (this.createElement(this.parameters.alias), this.initSmoothScroll(), this.parameters.slideSwitch && (this.switchOnLoad(), this.switchOnClick()))
    }
    return t.prototype.getAnchor = function() {
        var t = {
                hasAnchor: 0
            },
            e = window.location.hash.substr(1);
        if (e && (e === this.parameters.alias || this.parameters.slideSwitch && -1 < e.indexOf(this.parameters.alias) ? t.hasAnchor = 1 : this.parameters.href = this.parameters.href.replace("#" + e, ""), -1 < e.indexOf("-"))) {
            var i = e.split("-");
            t.number = i[i.length - 1]
        }
        return t
    }, t.prototype.switchOnLoad = function() {
        if (this.createAnchorElements(), this.parameters.anchor.hasAnchor) {
            var t = this.parameters.anchor.number;
            t === e && this.parameters.slideSwitch && (t = this.getParameterNumber()), null !== t && (t--, window["ss" + this.parameters.slider.id] = t, N2R("windowLoad", function(t) {
                this.smoothScrollTo(this.elements.$slider), this.replaceHash()
            }.bind(this)))
        }
    }, t.prototype.switchOnClick = function() {
        N2R("windowLoad", function() {
            s(window).on("hashchange", function() {
                var t = this.getAnchor();
                t.hasAnchor && (this.switchToSlide(t.number - 1), this.replaceHash())
            }.bind(this))
        }.bind(this))
    }, t.prototype.replaceHash = function() {
        var t = "#" + this.parameters.alias;
        history.replaceState ? history.replaceState(null, null, t) : location.hash = t
    }, t.prototype.switchToSlide = function(i) {
        N2R(this.elements.sliderSelector, function(t, e) {
            e.slide(i)
        })
    }, t.prototype.createAnchorElements = function() {
        if (this.parameters.scroll)
            for (var t = 1; t < this.parameters.slideCount + 1; t++) this.createElement(this.parameters.alias + "-" + t)
    }, t.prototype.createElement = function(t) {
        s("<div></div>").attr("id", t).css({
            height: "0",
            lineHeight: "0",
            minHeight: "0",
            margin: "0",
            padding: "0"
        }).insertBefore(this.elements.$sliderAlign)
    }, t.prototype.initSmoothScroll = function() {
        this.parameters.smoothScroll && s("html").css("scroll-behavior", "smooth")
    }, t.prototype.getParameterNumber = function() {
        var s = {};
        return this.parameters.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(t, e, i) {
            s[e] = i
        }), s[this.parameters.alias] !== e ? parseInt(s[this.parameters.alias]) : null
    }, t.prototype.smoothScrollTo = function(t) {
        this.parameters.scroll && this.parameters.smoothScroll && n2const._animateScroll(document.scrollingElement, t.offset().top, this.parameters.scrollSpeed)
    }, t
}), N2D("SmartSliderControlAutoplay", function(i, s) {
    "use strict";

    function t(t, e) {
        this.slider = t, this.state = {
            enabled: 1,
            paused: 1,
            pausedSecondary: 0,
            mainAnimationPlaying: 0,
            wait: 0
        }, this.wait = new N2Classes.SmartSliderControlAutoplayWait(this), this._currentCount = 1, this.autoplayToSlide = 0, this.autoplayToSlideIndex = -1, this.parameters = i.extend({
            enabled: 0,
            start: 1,
            duration: 8e3,
            autoplayLoop: 0,
            allowReStart: 0,
            pause: {
                mouse: "enter",
                click: !0,
                mediaStarted: !0
            },
            resume: {
                click: 0,
                mouse: 0,
                mediaEnded: !0
            },
            interval: 1,
            intervalModifier: "loop",
            intervalSlide: "current"
        }, e), this.clickHandled = !1, (t.controls.autoplay = this).parameters.enabled ? (this.parameters.duration /= 1e3, this.slider.visible(this.onReady.bind(this))) : this.disable()
    }
    return t.prototype.preventClickHandle = function() {
        this.clickHandled = !0, setTimeout(function() {
            this.clickHandled = !1
        }.bind(this), 300)
    }, t.prototype.onReady = function() {
        this.timeline = NextendTween.to({
            _progress: 0
        }, this.getSlideDuration(this.slider.currentSlide.index), {
            _progress: 1,
            paused: !0,
            onComplete: this.next.bind(this)
        }), this.slider.sliderElement.on({
            "BeforeCurrentSlideChange.autoplay": function() {
                this.wait.resolveWeak(), this.setState("mainAnimationPlaying", 1)
            }.bind(this),
            "CurrentSlideChanged.autoplay": function(t, e) {
                this.timeline.duration(this.getSlideDuration(e.index)), this.timeline.pause(0, !1), this.setState("mainAnimationPlaying", 0)
            }.bind(this),
            "mainAnimationStart.autoplay": function() {
                this._currentCount++, this.wait.resolveWeak(), this.setState("mainAnimationPlaying", 1)
            }.bind(this),
            "mainAnimationComplete.autoplay": function(t, e, i, s) {
                this.timeline.duration(this.getSlideDuration(s)), this.timeline.pause(0, !1), this.setState("mainAnimationPlaying", 0)
            }.bind(this),
            "autoplayPause.autoplay": function() {
                this.setState("paused", 1)
            }.bind(this),
            "autoplayResume.autoplay": function(t, e) {
                (this.state.paused || 0 === parseInt(this.parameters.start) && 0 === parseInt(this.state.paused)) && (this._currentCount = 1), this.setState("pausedSecondary", 0), this.setState("paused", 0), e !== s && this.timeline.progress(e)
            }.bind(this)
        }), this.initClick(this.parameters.pause.click, this.parameters.resume.click), this.initHover(this.parameters.pause.mouse, this.parameters.resume.mouse), this.initMedia(this.parameters.pause.mediaStarted, this.parameters.resume.mediaEnded), this.slider.stages.resolve("AutoplayReady"), this.slider.trigger("autoplay", 0), this.parameters.start || this.setState("pausedSecondary", 1), this.setState("paused", 0)
    }, t.prototype.setState = function(t, e) {
        this.state[t] !== e && (this.state[t] = e, this.timeline !== s && (!this.state.enabled || this.state.paused || this.state.pausedSecondary || this.state.wait || this.state.mainAnimationPlaying ? (this.timeline.paused() || this.timeline.pause(), this.state.mainAnimationPlaying || this.isPaused !== s && this.isPaused || (this.isPaused = !0, this.slider.trigger("autoplayPaused"))) : (this.timeline.paused() && this.timeline.play(), this.isPaused !== s && !this.isPaused || (this.isPaused = !1, this.slider.trigger("autoplayStarted")))))
    }, t.prototype.initClick = function(e, i) {
        (e || i) && this.slider.sliderElement.on("universalclick.autoplay", function(t) {
            this.clickHandled || (this.state.pausedSecondary ? i && this.setState("pausedSecondary", 0) : e && this.setState("pausedSecondary", 1))
        }.bind(this))
    }, t.prototype.initHover = function(e, i) {
        if (e || i) {
            var s = !1;
            this.slider.sliderElement.on({
                "touchend.autoplay": function() {
                    s = !0, setTimeout(function() {
                        s = !1
                    }, 300)
                },
                "mouseenter.autoplay": function(t) {
                    this.state.pausedSecondary ? "enter" === i && this.setState("pausedSecondary", 0) : s || "enter" !== e || this.setState("pausedSecondary", 1)
                }.bind(this),
                "mouseleave.autoplay": function(t) {
                    this.state.pausedSecondary ? "leave" === i && this.setState("pausedSecondary", 0) : "leave" === e && this.setState("pausedSecondary", 1)
                }.bind(this)
            })
        }
    }, t.prototype.initMedia = function(t, e) {
        var i = this.slider.sliderElement;
        t ? i.on({
            "mediaStarted.autoplay": function(t, e) {
                this.wait.add(e)
            }.bind(this),
            "mediaEnded.autoplay": function(t, e) {
                this.wait.resolve(e)
            }.bind(this)
        }) : e && i.on({
            "mediaEnded.autoplay": function() {
                this.setState("pausedSecondary", 0)
            }.bind(this)
        })
    }, t.prototype.enableProgress = function() {
        this.timeline && this.timeline.eventCallback("onUpdate", function() {
            this.slider.trigger("autoplay", this.timeline.progress())
        }.bind(this))
    }, t.prototype.next = function() {
        if (this.timeline.pause(), !this.parameters.autoplayLoop) {
            switch (this.parameters.intervalModifier) {
                case "slide":
                    this.slideSwitchingSlideCount();
                    break;
                case "slideindex":
                    this.slideSwitchingIndex();
                    break;
                default:
                    this.slideSwitchingLoop()
            }
            0 < this.autoplayToSlide && this._currentCount >= this.autoplayToSlide && this.limitAutoplay(), 0 <= this.autoplayToSlideIndex && this.slider.slides.length === this.slider.visibleSlides.length && (this.autoplayToSlideIndex === this.slider.currentRealSlide.index + 2 || 1 === this.autoplayToSlideIndex && this.slider.currentRealSlide.index + this.autoplayToSlideIndex === this.slider.slides.length) && this.limitAutoplay()
        }
        this.slider.nextCarousel(!0)
    }, t.prototype.slideSwitchingLoop = function() {
        this.autoplayToSlide = this.parameters.interval * this.slider.visibleSlides.length - 1, "next" === this.parameters.intervalSlide && this.autoplayToSlide++
    }, t.prototype.slideSwitchingSlideCount = function() {
        this.autoplayToSlide = this.parameters.interval
    }, t.prototype.slideSwitchingIndex = function() {
        var t = Math.max(1, this.parameters.interval);
        t > this.slider.slides.length && (t = 1), this.autoplayToSlideIndex = t
    }, t.prototype.limitAutoplay = function() {
        this.parameters.allowReStart ? (this._currentCount = 0, this.setState("paused", 1)) : this.disable()
    }, t.prototype.disable = function() {
        this.setState("enabled", 0), this.slider.sliderElement.off(".autoplay"), this.slider.stages.resolve("AutoplayDestroyed")
    }, t.prototype.getSlideDuration = function(t) {
        var e = this.slider.realSlides[this.slider.getRealIndex(t)],
            i = e.minimumSlideDuration;
        return 0 === parseFloat(e.minimumSlideDuration) && (i = this.parameters.duration), i
    }, t
}), N2D("SmartSliderControlFullscreen", function(n, t) {
    "use strict";

    function e(t, e, i) {
        this.slider = t, this.responsive = this.slider.responsive, this._type = this.responsive.parameters.type, this._forceFull = this.responsive.parameters.forceFull, this.forceFullpage = "auto" == this._type || "fullwidth" == this._type || "fullpage" == this._type, this.forceFullpage && (this._upscale = this.responsive.parameters.upscale), this.isFullScreen = !1, this.fullParent = this.slider.sliderElement.closest(".n2-ss-align"), this.browserSpecific = {};
        var s = this.slider.sliderElement[0];
        s.requestFullscreen ? (this.browserSpecific.requestFullscreen = "requestFullscreen", this.browserSpecific.event = "fullscreenchange") : s.msRequestFullscreen ? (this.browserSpecific.requestFullscreen = "msRequestFullscreen", this.browserSpecific.event = "MSFullscreenChange") : s.mozRequestFullScreen ? (this.browserSpecific.requestFullscreen = "mozRequestFullScreen", this.browserSpecific.event = "mozfullscreenchange") : s.webkitRequestFullscreen ? (this.browserSpecific.requestFullscreen = "webkitRequestFullscreen", this.browserSpecific.event = "webkitfullscreenchange") : (this.browserSpecific.requestFullscreen = "nextendRequestFullscreen", this.browserSpecific.event = "nextendfullscreenchange", this.fullParent[0][this.browserSpecific.requestFullscreen] = function() {
            this.fullParent.css({
                position: "fixed",
                left: "0",
                top: "0",
                width: "100%",
                height: "100%",
                backgroundColor: "#000",
                zIndex: "1000000"
            }), document.fullscreenElement = this.fullParent[0], this.triggerEvent(document, this.browserSpecific.event), n(window).trigger("resize")
        }.bind(this)), document.exitFullscreen ? this.browserSpecific.exitFullscreen = "exitFullscreen" : document.msExitFullscreen ? this.browserSpecific.exitFullscreen = "msExitFullscreen" : document.mozCancelFullScreen ? this.browserSpecific.exitFullscreen = "mozCancelFullScreen" : document.webkitExitFullscreen ? this.browserSpecific.exitFullscreen = "webkitExitFullscreen" : (this.browserSpecific.exitFullscreen = "nextendExitFullscreen", this.fullParent[0][this.browserSpecific.exitFullscreen] = function() {
            this.fullParent.css({
                position: "",
                left: "",
                top: "",
                width: "",
                height: "",
                backgroundColor: "",
                zIndex: ""
            }), document.fullscreenElement = null, this.triggerEvent(document, this.browserSpecific.event)
        }.bind(this)), document.addEventListener(this.browserSpecific.event, this.fullScreenChange.bind(this))
    }
    return e.prototype.switchState = function() {
        this.isFullScreen = !this.isFullScreen, this.isFullScreen ? this._fullScreen() : this._normalScreen()
    }, e.prototype.requestFullscreen = function() {
        return !this.isFullScreen && (this.isFullScreen = !0, this._fullScreen(), !0)
    }, e.prototype.exitFullscreen = function() {
        return !!this.isFullScreen && (this.isFullScreen = !1, this._normalScreen(), !0)
    }, e.prototype.triggerEvent = function(t, e) {
        var i;
        document.createEvent ? (i = document.createEvent("HTMLEvents")).initEvent(e, !0, !0) : document.createEventObject && ((i = document.createEventObject()).eventType = e), i.eventName = e, t.dispatchEvent ? t.dispatchEvent(i) : t.fireEvent && htmlEvents["on" + e] ? t.fireEvent("on" + i.eventType, i) : t[e] ? t[e]() : t["on" + e] && t["on" + e]()
    }, e.prototype._fullScreen = function() {
        this.forceFullpage && (this.responsive.isFullScreen = !0, this.responsive.parameters.type = "fullpage", this.responsive.parameters.upscale = !0, this.responsive.parameters.forceFull = !1, this._marginLeft = this.responsive.containerElement[0].style.marginLeft, this._marginRight = this.responsive.containerElement[0].style.marginRight, this.responsive.containerElement.css({
            marginLeft: "0",
            marginRight: "0"
        })), this.fullParent.css({
            width: "100%",
            height: "100%",
            backgroundColor: n("body").css("background-color")
        }).addClass("n2-ss-in-fullscreen"), this.fullParent.get(0)[this.browserSpecific.requestFullscreen]()
    }, e.prototype._normalScreen = function() {
        document[this.browserSpecific.exitFullscreen] ? document[this.browserSpecific.exitFullscreen]() : this.fullParent[0][this.browserSpecific.exitFullscreen] && this.fullParent[0][this.browserSpecific.exitFullscreen]()
    }, e.prototype.fullScreenChange = function() {
        var t = "",
            e = "";
        this.isDocumentInFullScreenMode() ? (this.slider.trigger("n2FullScreen"), n("html").addClass("n2-in-fullscreen"), this.isFullScreen = !0, n(window).trigger("resize")) : this.forceFullpage && (this.responsive.isFullScreen = !1, this.responsive.parameters.type = this._type, this.responsive.parameters.upscale = this._upscale, this.responsive.parameters.forceFull = this._forceFull, t = this._marginLeft ? this._marginLeft + "px" : this._marginLeft, e = this._marginRight ? this._marginRight + "px" : this._marginRight, this.responsive.containerElement.css({
            marginLeft: t,
            marginRight: e
        }), this.fullParent.css({
            width: "",
            height: "",
            backgroundColor: ""
        }).removeClass("n2-ss-in-fullscreen"), n("html").removeClass("n2-in-fullscreen"), n(window).trigger("resize"), this.isFullScreen = !1, this.slider.trigger("n2ExitFullScreen"))
    }, e.prototype.isDocumentInFullScreenMode = function() {
        return document.fullscreenElement && null !== document.fullscreenElement || document.msFullscreenElement && null !== document.msFullscreenElement || document.mozFullScreen || document.webkitIsFullScreen
    }, e
}), N2D("SmartSliderControlKeyboard", function(s, t) {
    "use strict";
    var n;

    function o() {
        this.controls = [], document.addEventListener("keydown", this.onKeyDown.bind(this)), document.addEventListener("mousemove", this.onMouseMove.bind(this), {
            capture: !0
        })
    }

    function r(t, e, i) {
        this.slider = t, this.parameters = s.extend({}, i), this.parseEvent = "vertical" === e ? r.prototype.parseEventVertical : r.prototype.parseEventHorizontal, (n = n || new o).addControl(this), this.slider.sliderElement.on("SliderKeyDown", this.onKeyDown.bind(this)), t.controls.keyboard = this
    }
    return o.prototype.onMouseMove = function(t) {
        this.mouseEvent = t
    }, o.prototype.addControl = function(t) {
        this.controls.push(t)
    }, o.prototype.onKeyDown = function(t) {
        if (t.target.tagName.match(/BODY|DIV|IMG/) && !t.target.isContentEditable) {
            var e;
            if (this.mouseEvent && (e = this.findSlider(document.elementFromPoint(this.mouseEvent.clientX, this.mouseEvent.clientY)))) return void e.trigger("SliderKeyDown", t);
            if (document.activeElement !== document.body && (e = this.findSlider(document.activeElement))) return void e.trigger("SliderKeyDown", t);
            for (var i = 0; i < this.controls.length; i++) this.controls[i].onKeyDown(!1, t)
        }
    }, o.prototype.findSlider = function(t) {
        var e, i = s(t);
        return !!(e = i.hasClass("n2-ss-slider") ? i : i.closest(".n2-ss-slider")).length && e
    }, r.prototype.isSliderOnScreen = function() {
        var t = this.slider.sliderElement.offset(),
            e = s(window).scrollTop(),
            i = this.slider.sliderElement.height();
        return t.top + .5 * i >= e && t.top - .5 * i <= e + s(window).height()
    }, r.prototype.onKeyDown = function(t, e) {
        !e.defaultPrevented && this.isSliderOnScreen() && this.parseEvent.call(this, e) && e.preventDefault()
    }, r.prototype.parseEventHorizontal = function(t) {
        switch (t.keyCode) {
            case 39:
                return n2const.activeElementBlur(), this.slider[n2const.isRTL() ? "previous" : "next"](), !0;
            case 37:
                return n2const.activeElementBlur(), this.slider[n2const.isRTL() ? "next" : "previous"](), !0;
            default:
                return !1
        }
    }, r.prototype.parseEventVertical = function(t) {
        switch (t.keyCode) {
            case 40:
                return this.slider.isChangeCarousel("next") && this.slider.parameters.controls.blockCarouselInteraction ? !1 : (n2const.activeElementBlur(), this.slider.next(), !0);
            case 38:
                return this.slider.isChangeCarousel("previous") && this.slider.parameters.controls.blockCarouselInteraction ? !1 : (n2const.activeElementBlur(), this.slider.previous(), !0);
            default:
                return !1
        }
    }, r
}), N2D("SmartSliderControlMouseWheel", function(s, t) {
    "use strict";

    function e(t) {
        this.preventScroll = {
            local: !1,
            curve: !1,
            curveGlobal: !1,
            global: !1,
            localTimeout: !1,
            curveTimeout: !1,
            curveGlobalTimeout: !1,
            globalTimeout: !1
        }, this.maxDelta = 0, this.slider = t, document.addEventListener("wheel", this.onGlobalMouseWheel.bind(this), {
            passive: !1
        }), t.controls.mouseWheel = this
    }
    return e.prototype.hasScrollableParentRecursive = function(t, e) {
        if (e === this.slider.sliderElement[0]) return !1;
        if (e.scrollHeight > e.clientHeight) {
            var i = s(e).css("overflow");
            if ("hidden" !== i && "visible" !== i)
                if (t) {
                    if (0 < e.scrollTop) return !0
                } else if (e.scrollTop + e.clientHeight < e.scrollHeight) return !0
        }
        return this.hasScrollableParentRecursive(t, e.parentNode)
    }, e.prototype.onGlobalMouseWheel = function(t) {
        t.target.closest(".n2-ss-slider") && (this.onCurveEvent(t), this.preventScroll.local || this.preventScroll.curve || Math.abs(t.deltaY) < this.maxDelta / 2 ? t.preventDefault() : (this.preventScroll.global && t.preventDefault(), this.slider.sliderElement[0] !== t.target && !s.contains(this.slider.sliderElement[0], t.target) || t.shiftKey || this.hasScrollableParentRecursive(t.deltaY < 0, t.target) || this.onMouseWheel(t)))
    }, e.prototype.onMouseWheel = function(t) {
        t.deltaY < 0 ? this.slider.isChangeCarousel("previous") && this.slider.parameters.controls.blockCarouselInteraction || (this.slider.previous(), t.preventDefault(), this.startCurveWatcher(t), this.local(), this.global()) : this.slider.isChangeCarousel("next") && this.slider.parameters.controls.blockCarouselInteraction || (this.slider.next(), t.preventDefault(), this.startCurveWatcher(t), this.local(), this.global())
    }, e.prototype.startCurveWatcher = function(t) {
        !1 !== this.preventScroll.curve && clearTimeout(this.preventScroll.curveTimeout), this.preventScroll.curveGlobal || (this.dynamicDelta = !1, this.lastDeltaY = t.deltaY, this.preventScroll.curveGlobal = !0, this.preventScroll.curveGlobalTimeout = setTimeout(s.proxy(function() {
            this.preventScroll.curveGlobal = !1, this.maxDelta = 0
        }, this), 500)), this.preventScroll.curve = !0, this.preventScroll.curveTimeout = setTimeout(s.proxy(this.releaseCurveLock, this), 5e3)
    }, e.prototype.onCurveEvent = function(t) {
        if (this.preventScroll.curveGlobal) {
            this.dynamicDelta || this.lastDeltaY === t.deltaY || (this.lastDeltaY = t.deltaY, this.dynamicDelta = !0);
            var e = Math.abs(t.deltaY);
            this.preventScroll.curve && this.maxDelta / 2 > e && this.releaseCurveLock(), this.maxDelta = Math.max(this.maxDelta, e), this.preventScroll.curveGlobalTimeout && clearTimeout(this.preventScroll.curveGlobalTimeout), this.preventScroll.curveGlobalTimeout = setTimeout(s.proxy(function() {
                this.preventScroll.curveGlobal = !1, this.maxDelta = 0
            }, this), 500)
        }
    }, e.prototype.releaseCurveLock = function() {
        this.preventScroll.curve = !1, clearTimeout(this.preventScroll.curveTimeout)
    }, e.prototype.local = function() {
        !1 !== this.preventScroll.local && clearTimeout(this.preventScroll.localTimeout), this.preventScroll.local = !0, this.preventScroll.localTimeout = setTimeout(function() {
            this.preventScroll.local = !1, this.dynamicDelta || this.releaseCurveLock()
        }.bind(this), 1e3)
    }, e.prototype.global = function() {
        !1 !== this.preventScroll.global && clearTimeout(this.preventScroll.globalTimeout), this.preventScroll.global = !0, this.preventScroll.globalTimeout = setTimeout(function() {
            this.preventScroll.global = !1
        }.bind(this), 2e3)
    }, e
}), N2D("SmartSliderControlTouch", function(e, t) {
    "use strict";

    function i(t) {
        this.slider = t, this.minDistance = 10, this.interactiveDrag = !0, this.preventMultipleTap = !1, this._animation = t.mainAnimation, this.swipeElement = this.slider.sliderElement.find("> .n2_ss__touch_element"), this.$window = e(window), t.controls.touch = this, t.stages.done("StarterSlide", this.onStarterSlide.bind(this)), t.sliderElement.on("visibleSlidesChanged", this.onVisibleSlidesChanged.bind(this))
    }
    return i.prototype.onStarterSlide = function() {
        -1 < navigator.userAgent.toLowerCase().indexOf("android") ? "1" !== this.swipeElement.parent().css("opacity") ? this.swipeElement.parent().one("transitionend", this.initTouch.bind(this)) : this.initTouch() : this.initTouch();
        this.slider.sliderElement.on("sliderChangeCurrentSlide", this.updatePanDirections.bind(this))
    }, i.prototype.onVisibleSlidesChanged = function() {
        this.swipeElement.toggleClass("n2-grab", 1 < this.slider.visibleSlides.length)
    }, i.prototype.initTouch = function() {
        this._animation.isNoAnimation && (this.interactiveDrag = !1), this.eventBurrito = N2Classes.EventBurrito(this.swipeElement.get(0), {
            mouse: !0,
            axis: "horizontal" === this.axis ? "x" : "y",
            start: this._start.bind(this),
            move: this._move.bind(this),
            end: this._end.bind(this)
        }), this.updatePanDirections(), this.cancelKineticScroll = function() {
            this.kineticScrollCancelled = !0
        }.bind(this)
    }, i.prototype._start = function(t) {
        this.currentInteraction = {
            type: "pointerdown" === t.type ? "pointer" : "touchstart" === t.type ? "touch" : "mouse",
            state: e.extend({}, this.state),
            action: "unknown",
            distance: [],
            distanceY: [],
            percent: 0,
            progress: 0,
            scrollTop: this.$window.scrollTop(),
            animationStartDirection: "unknown",
            hadDirection: !1
        }, this.logDistance(0, 0)
    }, i.prototype._move = function(t, e, i, s) {
        if (!s || "unknown" !== this.currentInteraction.action) {
            this.currentInteraction.direction = this.measure(i);
            var n = this.get(i);
            if ((this.currentInteraction.hadDirection || Math.abs(n) > this.minDistance || Math.abs(i.y) > this.minDistance) && (this.logDistance(n, i.y), this.currentInteraction.percent < 1 && this.setTouchProgress(n, i.y), "touch" === this.currentInteraction.type && t.cancelable && ("switch" !== this.currentInteraction.action && "hold" !== this.currentInteraction.action || (this.currentInteraction.hadDirection = !0))), "switch" === this.currentInteraction.action) return !0
        }
        return !1
    }, i.prototype._end = function(t, e, i, s) {
        if ("switch" === this.currentInteraction.action) {
            var n = s ? 0 : this.measureRealDirection();
            if (this.interactiveDrag) this._animation.timeline.progress() < 1 && this._animation.setTouchEnd(n, this.currentInteraction.progress, i.time), this._animation.setTouch(!1);
            else n && this.callAction(this.currentInteraction.animationStartDirection);
            this.swipeElement.removeClass("n2-grabbing")
        }
        this.onEnd(), delete this.currentInteraction, Math.abs(i.x) < 10 && Math.abs(i.y) < 10 ? this.onTap(t) : nextend.preventClick()
    }, i.prototype.onEnd = function() {
        if ("scroll" === this.currentInteraction.action && "pointer" === this.currentInteraction.type) {
            var t = this.currentInteraction.distanceY[0],
                e = this.currentInteraction.distanceY[this.currentInteraction.distanceY.length - 1],
                i = (t.d - e.d) / (e.t - t.t) * 10,
                s = Date.now(),
                n = function() {
                    requestAnimationFrame(function() {
                        var t, e;
                        if (!this.kineticScrollCancelled && i && (t = Date.now() - s, 1 < (e = i * Math.exp(-t / 325)) || e < -1)) return this.$window.scrollTop(this.$window.scrollTop() + e), void n();
                        this.onEndKineticScroll()
                    }.bind(this))
                }.bind(this);
            this.kineticScrollCancelled = !1, n(), document.addEventListener("pointerdown", this.cancelKineticScroll)
        }
    }, i.prototype.onEndKineticScroll = function() {
        delete this.kineticScrollCancelled, document.removeEventListener("pointerdown", this.cancelKineticScroll), e("html").css("scroll-behavior", "")
    }, i.prototype.setTouchProgress = function(t, e) {
        this.recognizeSwitchInteraction();
        var i, s = this.getPercent(t);
        if (this.currentInteraction.percent = s, "switch" === this.currentInteraction.action) {
            if (this.interactiveDrag) {
                switch (this.currentInteraction.animationStartDirection) {
                    case "up":
                        i = -1 * s;
                        break;
                    case "down":
                        i = s;
                        break;
                    case "left":
                        i = -1 * s;
                        break;
                    case "right":
                        i = s
                }
                this.currentInteraction.progress = i, this._animation.setTouchProgress(i)
            }
        } else "unknown" !== this.currentInteraction.action && "scroll" !== this.currentInteraction.action || this.startScrollInteraction(e)
    }, i.prototype.startScrollInteraction = function(t) {
        "vertical" !== this.axis && !n2const.isEdge || this.slider.controlFullscreen.isFullScreen || (this.currentInteraction.action = "scroll", "pointer" === this.currentInteraction.type && (e("html").css("scroll-behavior", "auto"), this.$window.scrollTop(Math.max(0, this.currentInteraction.scrollTop - t))))
    }, i.prototype.recognizeSwitchInteraction = function() {
        if ("unknown" === this.currentInteraction.action && 1 < this.slider.visibleSlides.length)
            if ("ended" === this._animation.state) {
                var t = this.currentInteraction.direction;
                if ("unknown" !== t && this.currentInteraction.state[t]) {
                    if (this.currentInteraction.animationStartDirection = t, this.interactiveDrag) {
                        this._animation.setTouch(this.axis);
                        this.callAction(t, !1)
                    }
                    this.currentInteraction.action = "switch", this.swipeElement.addClass("n2-grabbing")
                }
            } else "playing" === this._animation.state && (this.currentInteraction.action = "hold")
    }, i.prototype.logDistance = function(t, e) {
        3 < this.currentInteraction.distance.length && (this.currentInteraction.distance.shift(), this.currentInteraction.distanceY.shift()), this.currentInteraction.distance.push({
            d: t,
            t: Date.now()
        }), this.currentInteraction.distanceY.push({
            d: e,
            t: Date.now()
        })
    }, i.prototype.measureRealDirection = function() {
        var t = this.currentInteraction.distance[0],
            e = this.currentInteraction.distance[this.currentInteraction.distance.length - 1];
        return 0 <= e.d && t.d > e.d || e.d < 0 && t.d < e.d ? 0 : 1
    }, i.prototype.onTap = function(t) {
        this.preventMultipleTap || (e(t.target).trigger("n2click"), this.preventMultipleTap = !0, setTimeout(function() {
            this.preventMultipleTap = !1
        }.bind(this), 500))
    }, i.prototype.updatePanDirections = function() {}, i.prototype.setState = function(t, e) {
        "object" != typeof arguments[0] && ((t = {})[arguments[0]] = arguments[1], e = arguments[2]);
        var i = !1;
        for (var s in t) this.state[s] !== t[s] && (this.state[s] = t[s], i = !0);
        i && e && this.eventBurrito.supportsPointerEvents && this.syncTouchAction()
    }, i
}), N2D("SmartSliderControlTouchHorizontal", "SmartSliderControlTouch", function(t, e) {
    "use strict";

    function i() {
        this.state = {
            left: !1,
            right: !1
        }, this.axis = "horizontal", N2Classes.SmartSliderControlTouch.prototype.constructor.apply(this, arguments)
    }
    return ((i.prototype = Object.create(N2Classes.SmartSliderControlTouch.prototype)).constructor = i).prototype.callAction = function(t, e) {
        switch (t) {
            case "left":
                return this.slider[n2const.isRTL() ? "previous" : "next"].call(this.slider, e);
            case "right":
                return this.slider[n2const.isRTL() ? "next" : "previous"].call(this.slider, e)
        }
        return !1
    }, i.prototype.measure = function(t) {
        return !this.currentInteraction.hadDirection && Math.abs(t.x) < 10 || 0 === t.x || Math.abs(t.x) < Math.abs(t.y) ? "unknown" : t.x < 0 ? "left" : "right"
    }, i.prototype.get = function(t) {
        return t.x
    }, i.prototype.getPercent = function(t) {
        return Math.max(-.99999, Math.min(.99999, t / this.slider.responsive.resizeContext.sliderWidth))
    }, i.prototype.updatePanDirections = function() {
        var t = this.slider.currentSlide.index,
            e = t + 1 < this.slider.slides.length,
            i = 0 <= t - 1;
        this.slider.parameters.carousel && (i = e = !0), n2const.isRTL() && "vertical" !== this.slider.getAnimationAxis() ? this.setState({
            right: e,
            left: i
        }, !0) : this.setState({
            right: i,
            left: e
        }, !0)
    }, i.prototype.syncTouchAction = function() {
        var t = {
            "pan-y": !1,
            none: !1
        };
        n2const.isEdge ? t.none = !0 : (this.state.left && (t["pan-y"] = !0), this.state.right && (t["pan-y"] = !0));
        var e = [];
        for (var i in t) t[i] && e.push(i);
        this.swipeElement.css("touch-action", e.join(" ")), window.PointerEventsPolyfill && this.swipeElement.attr("touch-action", e.join(" "))
    }, i
}), N2D("SmartSliderControlTouchVertical", "SmartSliderControlTouch", function(t, e) {
    "use strict";

    function i() {
        this.state = {
            up: !1,
            down: !1
        }, this.action = {
            up: "next",
            down: "previous"
        }, this.axis = "vertical", N2Classes.SmartSliderControlTouch.prototype.constructor.apply(this, arguments)
    }
    return ((i.prototype = Object.create(N2Classes.SmartSliderControlTouch.prototype)).constructor = i).prototype.callAction = function(t, e) {
        switch (t) {
            case "up":
                return this.slider.next.call(this.slider, e);
            case "down":
                return this.slider.previous.call(this.slider, e)
        }
        return !1
    }, i.prototype.measure = function(t) {
        return !this.currentInteraction.hadDirection && Math.abs(t.y) < 1 || 0 == t.y || Math.abs(t.y) < Math.abs(t.x) ? "unknown" : t.y < 0 ? "up" : "down"
    }, i.prototype.get = function(t) {
        return t.y
    }, i.prototype.getPercent = function(t) {
        return Math.max(-.99999, Math.min(.99999, t / this.slider.responsive.resizeContext.sliderHeight))
    }, i.prototype.updatePanDirections = function() {
        this.setState({
            down: !this.slider.isChangeCarousel("previous") || !this.slider.parameters.controls.blockCarouselInteraction,
            up: !this.slider.isChangeCarousel("next") || !this.slider.parameters.controls.blockCarouselInteraction
        }, !0)
    }, i.prototype.syncTouchAction = function() {
        var t = {
            "pan-x": !1,
            none: !1
        };
        n2const.isEdge ? t.none = !0 : (this.state.up && (t["pan-x"] = !0), this.state.down && (t["pan-x"] = !0));
        var e = [];
        for (var i in t) t[i] && e.push(i);
        this.swipeElement.css("touch-action", e.join(" ")), window.PointerEventsPolyfill && this.swipeElement.attr("touch-action", e.join(" "))
    }, i.prototype._start = function(t) {
        this.slider.blockCarousel = !0, N2Classes.SmartSliderControlTouch.prototype._start.apply(this, arguments)
    }, i.prototype.onEnd = function(t) {
        N2Classes.SmartSliderControlTouch.prototype.onEnd.apply(this, arguments), this.slider.blockCarousel = !1
    }, i
}), N2D("SmartSliderControlAutoplayWait", function(t, e) {
    "use strict";

    function i(t) {
        this.autoplay = t, this.waits = {}
    }
    return i.Strong = ["lightbox"], i.prototype.add = function(t) {
        this.waits[t] = 1, this._refresh()
    }, i.prototype.resolve = function(t) {
        delete this.waits[t], this._refresh()
    }, i.prototype.resolveWeak = function() {
        var t = {};
        for (var e in this.waits) 1 === this.waits[e] && -1 !== i.Strong.indexOf(e) && (t[e] = 1);
        this.waits = t, this._refresh()
    }, i.prototype.resolveAll = function() {
        this.waits = {}, this._refresh()
    }, i.prototype._refresh = function() {
        var t = !1;
        for (var e in this.waits)
            if (this.waits[e]) {
                t = !0;
                break
            }
        this.autoplay.setState("wait", t)
    }, i
}), N2D("SmartSliderSlideBackgroundColor", function(t, e) {
    function i(t, e) {
        this.$el = e
    }
    return i.prototype.getLoadedDeferred = function() {
        return !0
    }, i
}), N2D("SmartSliderSlideBackgroundImage", function(o, n) {
    function t(t, e, i, s) {
        if (this.loadStarted = !1, this.loadAllowed = !1, this.slide = t, this.manager = e, this.background = i, this.deferred = o.Deferred(), this.$background = s, this.blur = s.data("blur"), "blurfit" === i.mode && (window.n2FilterProperty ? (this.$background = this.$background.add(this.$background.clone().insertAfter(this.$background)), this.$background.first().css({
                margin: "-14px",
                padding: "14px"
            }).css(window.n2FilterProperty, "blur(7px)")) : (i.element.attr("data-mode", "fill"), i.mode = "fill")), window.n2FilterProperty && (0 < this.blur ? this.$background.last().css({
                margin: "-" + 2 * this.blur + "px",
                padding: 2 * this.blur + "px"
            }).css(window.n2FilterProperty, "blur(" + this.blur + "px)") : this.$background.last().css({
                margin: "",
                padding: ""
            }).css(window.n2FilterProperty, "")), n2const.isWaybackMachine()) this.mobileSrc = this.tabletSrc = this.desktopSrc = s.data("desktop");
        else if (this.desktopSrc = s.data("desktop") || "", this.tabletSrc = s.data("tablet") || "", this.mobileSrc = s.data("mobile") || "", n2const.isRetina) {
            var n = s.data("desktop-retina");
            n && (this.desktopSrc = n), (n = s.data("tablet-retina")) && (this.tabletSrc = n), (n = s.data("mobile-retina")) && (this.mobileSrc = n)
        }
    }
    return t.prototype.getLoadedDeferred = function() {
        return this.deferred
    }, t.prototype.preLoad = function() {
        this.loadAllowed = !0, this.manager.deviceDeferred.done(function() {
            this.updateBackgroundToDevice(this.manager.device), this.waitForImage()
        }.bind(this))
    }, t.prototype.waitForImage = function() {
        this.$background.n2imagesLoaded({
            background: !0
        }, function(t) {
            if (0 < t.images.length) {
                var e = t.images[0].img;
                switch (this.width = e.naturalWidth, this.height = e.naturalHeight, this.background.mode) {
                    case "tile":
                    case "center":
                        1 < n2const.devicePixelRatio && this.$background.css("background-size", this.width / n2const.devicePixelRatio + "px " + this.height / n2const.devicePixelRatio + "px")
                }
                this.deferred.resolve()
            } else setTimeout(this.waitForImage.bind(this), 100)
        }.bind(this))
    }, t.prototype.updateBackgroundToDevice = function(t) {
        var e = this.desktopSrc;
        "mobilePortrait" === t || "mobileLandscape" === t ? this.mobileSrc ? e = this.mobileSrc : this.tabletSrc && (e = this.tabletSrc) : "tabletPortrait" !== t && "tabletLandscape" !== t || this.tabletSrc && (e = this.tabletSrc), e ? this.setSrc(e) : this.setSrc("")
    }, t.prototype.setSrc = function(t) {
        if (this.loadAllowed && t !== this.currentSrc) {
            "" === t ? this.$background.css("background-image", "") : this.$background.css("background-image", 'url("' + t + '")'), this.currentSrc = t, this.$seo !== n && (this.$seo.remove(), delete this.$seo);
            var e = this.$background.data("alt");
            if (e) {
                var i = {
                        alt: e,
                        src: t
                    },
                    s = this.$background.data("title");
                s && (i.title = s), this.$seo = o('<img style="display:none;">').attr(i).appendTo(this.$background)
            }
        }
    }, t.prototype.fadeOut = function() {
        NextendTween.to(this.$background, .3, {
            opacity: 0
        })
    }, t
}), N2D("SmartSliderSlideBackgroundVideo", function(i, e) {
    var s = 1;

    function t(t, e, i) {
        (t.slider.parameters["background.video.mobile"] || !n2const.isPhone) && n2const.isVideoAutoplayAllowed() ? (this.counter = s++, this.slide = t, this.slider = t.slider, this.background = e, this.isResized = !1, this.$video = i, this.isReady = !1, this.state = {
            ready: !1,
            scroll: !1,
            slide: !1,
            ended: !1
        }, this.promise = !1, e.elements.image ? this.slider.visible(this.load.bind(this)) : this.load()) : i.remove()
    }
    return t.prototype.load = function() {
        if (0 < this.$video[0].videoWidth) this.onReady();
        else {
            this.$video[0].addEventListener("error", this.onError.bind(this), !0), this.$video[0].addEventListener("canplay", this.onReady.bind(this)), this.$video[0].addEventListener("loadedmetadata", this.onReady.bind(this), !1), this.$video[0].loop || this.$video[0].addEventListener("ended", this.onEnded.bind(this), !1);
            var t = function() {
                setTimeout(function() {
                    0 === this.$video[0].networkState && this.onError()
                }.bind(this), 100)
            }.bind(this);
            this.$video[0].n2LoadStarted === e ? this.$video[0].addEventListener("loadstart", t, !0) : t(), this.$video[0].load(), this.safePlay()
        }
    }, t.prototype.getLoadedDeferred = function() {
        return !0
    }, t.prototype.onReady = function(t) {
        if (!this.isReady) {
            this.isReady = !0;
            var e = this.$video;
            this.safePause(), e.data("ratio") || (0 < e[0].videoWidth ? e.data("ratio", e[0].videoWidth / e[0].videoHeight) : e.data("ratio", e[0].offsetWidth / e[0].offsetHeight), e.addClass("n2-active"), this.slider.stages.done("BeforeShow", this.onResize.bind(this)), this.slider.ready(function() {
                this.slider.sliderElement.on("SliderResize", this.onResize.bind(this)), this.isResized || this.onResize(), this.setState("ready", !0, !0)
            }.bind(this))), this.slider.stages.done("BeforeShow", function() {
                this.slide.isActiveWhen() && this.setState("slide", !0, !0)
            }.bind(this)), this.slider.sliderElement.on({
                CurrentSlideChanged: function(t, e) {
                    this.setState("slide", this.slide.isActiveWhen(e), !0)
                }.bind(this),
                mainAnimationStart: function(t, e, i, s) {
                    this.setState("slide", this.slide.isActiveWhen(this.slider.slides[s]), !0)
                }.bind(this),
                mainAnimationComplete: function(t, e, i, s) {
                    this.setState("slide", this.slide.isActiveWhen(this.slider.slides[s]), !0)
                }.bind(this)
            }), e.data("reset-slide-change") && this.slider.sliderElement.on("mainAnimationComplete", function(t, e, i, s, n) {
                0 < this.$video[0].currentTime && -1 === this.slider.getVisibleSlides(this.slider.slides[s]).indexOf(this.slide) && (this.$video[0].currentTime = 0, this.setState("ended", !1, !0))
            }.bind(this)), N2Classes.ScrollTracker.add(this.slide.$element, "not-visible", function() {
                this.setState("scroll", !0, !0)
            }.bind(this), function() {
                this.setState("scroll", !1, !0)
            }.bind(this))
        }
        t && "canplay" !== t.type || this.background.fadeOut()
    }, t.prototype.onError = function() {
        this.$video.remove()
    }, t.prototype.onResize = function() {
        if (!this.isResized) {
            var t = this.$video.data("background");
            t && "" !== t && i('<div class="n2-ss-slide-bg-video-color-overlay" style="position:absolute;left:0;top:0;width:100%;height:100%;z-index:3;' + t + ';"></div>').insertAfter(this.$video), this.isResized = !0
        }
        this.resizeVideo()
    }, t.prototype.resizeVideo = function() {
        var t = this.$video,
            e = t.data("mode"),
            i = t.data("ratio"),
            s = this.slider.responsive.resizeContext.slideOuterWidth / this.slider.responsive.resizeContext.slideOuterHeight;
        "fill" === e ? i < s ? t.css({
            width: "100%",
            height: "auto"
        }) : t.css({
            width: "auto",
            height: "100%"
        }) : "fit" === e ? s < i ? t.css({
            width: "100%",
            height: "auto"
        }) : t.css({
            width: "auto",
            height: "100%"
        }) : t.css({
            width: "",
            height: ""
        }), t.css({
            marginTop: "0",
            marginLeft: "0"
        }), this.center()
    }, t.prototype.center = function() {
        var t = this.$video,
            e = t.parent();
        t.css({
            marginTop: Math.round((e.height() - t.height()) / 2) + "px",
            marginLeft: Math.round((e.width() - t.width()) / 2) + "px"
        })
    }, t.prototype.safeCallback = function(t) {
        this.promise && Promise !== e ? this.promise.then(t).catch(t) : t()
    }, t.prototype.safePlay = function() {
        this.safeCallback(function() {
            this.promise = this.$video[0].play(), this.promise && Promise !== e && this.promise.catch(function(t) {
                if ("NotAllowedError" === t.name) {
                    var e = ".ssBackgroundVideo" + this.counter;
                    i("body").off(e).one("click" + e + " touchend" + e, function() {
                        i("body").off(e), !1 !== this.promise && this.safePlay()
                    }.bind(this))
                }
            }.bind(this))
        }.bind(this))
    }, t.prototype.safePause = function() {
        this.safeCallback(function() {
            this.$video[0].pause(), this.promise = !1
        }.bind(this))
    }, t.prototype.onEnded = function() {
        this.setState("ended", !0, !0)
    }, t.prototype.setState = function(t, e, i) {
        i = i || !1, this.state[t] = e, i && (this.state.ready && !this.state.ended && this.state.slide && this.state.scroll ? (this.safePlay(), this.$video.triggerHandler("n2playvideo")) : this.safePause())
    }, t
}), N2D("SmartSliderSlideBackground", function(d, t) {
    function e(t, e, i) {
        if (this.loadStarted = !1, this.types = this.types || {
                color: "SmartSliderSlideBackgroundColor",
                image: "SmartSliderSlideBackgroundImage",
                video: "SmartSliderSlideBackgroundVideo"
            }, this.width = 0, this.height = 0, this.slide = t, this.element = e, t.slider.needBackgroundWrap) {
            var s = e.find("> *");
            this.$wrapElement = d('<div class="n2-ss-slide-background-wrap n2-ow"></div>').appendTo(e).append(s)
        } else this.$wrapElement = this.element;
        this.manager = i, this.loadDeferred = d.Deferred(), this.elements = {
            color: !1,
            image: !1,
            video: !1
        }, this.currentSrc = "", this.mode = e.data("mode"), this.opacity = e.data("opacity");
        var n = this.element.find(".n2-ss-slide-background-image");
        n.length && (this.elements.image = new N2Classes[this.types.image](t, i, this, n));
        var o = this.element.find(".n2-ss-slide-background-color");
        o.length && (this.elements.color = new N2Classes[this.types.color](this, o));
        var r = this.element.find(".n2-ss-slide-background-video");
        r.length && (this.elements.video = new N2Classes[this.types.video](this.slide, this, r));
        var a = this.slide.slider.parameters.backgroundParallax;
        0 < a.strength && !(n2const.isPhone && !a.mobile || n2const.isTablet && !a.tablet) && (n2const.isEdge || n2const.isIE || this.hasBackground() && (this.slide.slider.stages.done("BeforeShow", function() {
            this.startFixed(a)
        }.bind(this)), this.manager.hasFixed = !0));
        var l = [];
        for (var h in this.elements) this.elements[h] && l.push(this.elements[h].getLoadedDeferred());
        d.when.apply(d, l).then(function() {
            this.loadDeferred.resolve()
        }.bind(this))
    }
    return e.prototype.preLoad = function() {
        return this.loadStarted || (this.slide.$element.find("[data-lazysrc]").each(function() {
            var t = d(this);
            t.attr("src", t.data("lazysrc"))
        }), this.loadStarted = !0), "pending" === this.loadDeferred.state() && this.elements.image && this.elements.image.preLoad(), this.loadDeferred
    }, e.prototype.fadeOut = function() {
        this.elements.image && this.elements.image.fadeOut()
    }, e.prototype.hack = function() {
        NextendTween.set(this.element, {
            rotation: 1e-4
        })
    }, e.prototype.hasColor = function() {
        return this.elements.color
    }, e.prototype.hasImage = function() {
        return this.elements.image
    }, e.prototype.hasVideo = function() {
        return this.elements.video
    }, e.prototype.hasBackground = function() {
        return this.elements.color || this.elements.image || this.elements.video
    }, e.prototype.updateBackgroundToDevice = function(t) {
        this.hasImage() && this.elements.image.updateBackgroundToDevice(t)
    }, e.prototype.startFixed = function(t) {
        this.slide.slider.started(function() {
            navigator.userAgent.match(/^((?!chrome|android).)*safari/i) || N2Classes.FixedBackground.addElement(this.$wrapElement, t)
        }.bind(this))
    }, e
}), N2D("FrontendComponentCommon", ["FrontendComponent"], function(s, n) {
    function t(t, e, i, s) {
        this.wraps = {}, this.skipSelfAnimation = !1, N2Classes.FrontendComponent.prototype.constructor.apply(this, arguments)
    }
    return ((t.prototype = Object.create(N2Classes.FrontendComponent.prototype)).constructor = t).prototype.init = function(t) {
        this.stateCBs = [], this.state = {
            InComplete: !1
        };
        var e = this.$layer.find("> .n2-ss-layer-mask");
        e.length && (this.wraps.mask = e);
        var i = this.$layer.find("> .n2-ss-layer-parallax");
        switch (i.length && (this.wraps.parallax = i), this.$layer.data("pm")) {
            case "absolute":
                this.placement = new N2Classes.FrontendPlacementAbsolute(this);
                break;
            case "normal":
                this.placement = new N2Classes.FrontendPlacementNormal(this);
                break;
            case "content":
                this.placement = new N2Classes.FrontendPlacementContent(this);
                break;
            default:
                this.placement = new N2Classes.FrontendPlacementDefault(this)
        }
        this.animations = this.$layer.data("animv2"), this.parallax = this.$layer.data("parallax"), this.baseSize = this.baseSize || 100, this.isAdaptiveFont = this.isAdaptiveFont || this.parent.isAdaptiveFont || this.get("adaptivefont"), this.refreshBaseSize(this.getDevice("fontsize", 100)), N2Classes.FrontendComponent.prototype.init.call(this, t)
    }, t.prototype.setState = function(t, e) {
        this.state[t] = e;
        for (var i = 0; i < this.stateCBs.length; i++) this.stateCBs[i].call(this, this.state)
    }, t.prototype.addStateCallback = function(t) {
        this.stateCBs.push(t), t.call(this, this.state)
    }, t.prototype.refreshBaseSize = function(t) {
        this.isAdaptiveFont ? this.baseSize = 16 * t / 100 : this.baseSize = this.parent.baseSize * t / 100
    }, t.prototype.start = function() {
        this.placement.start(), N2Classes.FrontendComponent.prototype.start.call(this);
        var t = this.get("rotation") || 0;
        if (t / 360 != 0) {
            var e = this.addWrap("rotation", "<div class='n2-ss-layer-rotation'></div>");
            NextendTween.set(e[0], {
                rotationZ: t
            })
        }
    }, t.prototype.onDeviceChange = function(t) {
        N2Classes.FrontendComponent.prototype.onDeviceChange.call(this, t);
        var e = this.isVisible;
        if (this.isVisible = this.getDevice("") && this.parent.isVisible, this.isVisible === n && (this.isVisible = 1), e && !this.isVisible ? (this.$layer.data("shows", 0), this.$layer.css("display", "none"), this.$layer.triggerHandler("visibilityChange", [0])) : !e && this.isVisible && (this.$layer.data("shows", 1), this.$layer.css("display", ""), this.$layer.triggerHandler("visibilityChange", [1])), this.isVisible) {
            var i = this.getDevice("fontsize", 100);
            this.refreshBaseSize(i), !this.parent.isAdaptiveFont && this.isAdaptiveFont ? this.$layer.css("font-size", N2Classes.FontSize.toRem(16 * i / 100)) : this.$layer.css("font-size", i + "%");
            for (var s = 0; s < this.children.length; s++) this.children[s].onDeviceChange(t);
            this.placement.onDeviceChange(t), this.onAfterDeviceChange(t)
        } else
            for (s = 0; s < this.children.length; s++) this.children[s].onDeviceChange(t)
    }, t.prototype.onAfterDeviceChange = function(t) {}, t.prototype.onResize = function(t, e) {
        if (this.isVisible || this.placement.alwaysResize) {
            if (!this.parent.isAdaptiveFont && this.isAdaptiveFont) {
                var i = this.getDevice("fontsize", 100);
                this.$layer.css("font-size", N2Classes.FontSize.toRem(16 * i / 100))
            }
            N2Classes.FrontendComponent.prototype.onResize.apply(this, arguments), this.placement.onResize(t, e), this.animationManager && this.animationManager.onResize()
        }
    }, t.prototype.hasLayerAnimation = function() {
        return this.animationManager !== n
    }, t.prototype.createLayerAnimations = function(t, e) {
        var i = [];
        if (!n2const.isBot) {
            if (!this.skipSelfAnimation) {
                var s = new N2Classes.FrontendLayerAnimationManager(this, this.$layer, this.slide.getPerspective());
                s.setEventBased(this.slide.realSlide, t, e), s.hasAnimation() ? (this.animationManager = s, i.push(s)) : this.setState("InComplete", !0)
            }
            i.push.apply(i, N2Classes.FrontendComponent.prototype.createLayerAnimations.call(this, t, e))
        }
        return i
    }, t.prototype.getParallaxNodes = function() {
        var t = [];
        return this.isVisible && (this.parallax && t.push(this.$layer[0]), t.push.apply(t, N2Classes.FrontendComponent.prototype.getParallaxNodes.call(this))), t
    }, t.prototype.addWrap = function(t, e) {
        if (this.wraps[t] === n) {
            var i = s(e);
            switch (t) {
                case "rotation":
                    this.wraps.mask !== n ? i.appendTo(this.wraps.mask) : this.wraps.parallax !== n ? i.appendTo(this.wraps.parallax) : i.appendTo(this.$layer), i.append(this.getContents())
            }
            this.wraps[t] = i
        }
        return i
    }, t.prototype.getContents = function() {
        return !1
    }, t
}), N2D("FrontendComponent", function($, undefined) {
    function FrontendComponent(t, e, i, s) {
        this.device = "", this.children = [], this.slide = t, this.parent = e, this.$layer = i.data("layer", this), this.isVisible = !0, this.init(s)
    }
    return FrontendComponent.prototype.init = function(t) {
        if (t)
            for (var e = 0; e < t.length; e++) switch (t.eq(e).data("sstype")) {
                case "content":
                    this.children.push(new N2Classes.FrontendComponentContent(this.slide, this, t.eq(e)));
                    break;
                case "row":
                    this.children.push(new N2Classes.FrontendComponentRow(this.slide, this, t.eq(e)));
                    break;
                case "col":
                    this.children.push(new N2Classes.FrontendComponentCol(this.slide, this, t.eq(e)));
                    break;
                default:
                    this.children.push(new N2Classes.FrontendComponentLayer(this.slide, this, t.eq(e)))
            }
        this.slide.slider.isAdmin || this.initEvents()
    }, FrontendComponent.prototype.start = function() {
        for (var t = 0; t < this.children.length; t++) this.children[t].start()
    }, FrontendComponent.prototype.onDeviceChange = function(t) {
        this.device = t
    }, FrontendComponent.prototype.onResize = function(t, e) {
        for (var i = 0; i < this.children.length; i++) this.children[i].onResize(t, e)
    }, FrontendComponent.prototype.getDevice = function(t, e) {
        var i = this.$layer.data(this.device + t);
        return i !== undefined ? i : "desktopportrait" !== this.device ? this.$layer.data("desktopportrait" + t) : e !== undefined ? e : 0
    }, FrontendComponent.prototype.get = function(t) {
        return this.$layer.data(t)
    }, FrontendComponent.prototype.initEvents = function() {
        this.initEvent("click", "click"), this.initEvent("mouseenter", "mouseenter"), this.initEvent("mouseleave", "mouseleave"), this.initEvent("play", "n2play"), this.initEvent("pause", "n2pause"), this.initEvent("stop", "n2stop")
    }, FrontendComponent.prototype.initEvent = function(name, event) {
        var value = this.$layer.data(name);
        if (value) {
            var $el = this.$layer,
                selector = $el.data("animatableselector");
            selector && ($el = $el.find(selector)), $el.on(event, function(value, e) {
                eval(value)
            }.bind(this, value)), "click" === event && $el.css("cursor", "pointer")
        }
    }, FrontendComponent.prototype.createLayerAnimations = function(t, e) {
        for (var i = [], s = 0; s < this.children.length; s++) i.push.apply(i, this.children[s].createLayerAnimations(t, e));
        return i
    }, FrontendComponent.prototype.getParallaxNodes = function() {
        for (var t = [], e = 0; e < this.children.length; e++) t.push.apply(t, this.children[e].getParallaxNodes());
        return t
    }, FrontendComponent
}), N2D("FrontendSlideControls", function(i, t) {
    function e(t, e) {
        this.slider = t, this.$element = e.data("slide", this), this.status = new N2Classes.SlideStatus
    }
    return e.prototype.isCurrentlyEdited = function() {
        return this._isCurrentlyEdited
    }, e.prototype.is = function(t) {
        return this === t
    }, e.prototype.triggerHandler = function() {
        return this.$element.triggerHandler.apply(this.$element, arguments)
    }, e.prototype.isVisibleWhen = function(t) {
        return !0
    }, e.prototype.isActiveWhen = function(t) {
        return !0
    }, e.prototype.isStatic = function() {
        return !1
    }, e.prototype.initLayerAnimations = function() {
        this.isCurrentlyEdited() || (this.status.set("INITIALIZED"), this.playOnce = !this.slider.isAdmin && this.slider.parameters.layerMode.playOnce, this.refreshTimelines(), this.isStatic() ? this.slider.visible(function() {
            this.playIn()
        }.bind(this)) : this.playOnce || this.$element.on("mainAnimationStartInCancel", this.reset.bind(this)))
    }, e.prototype.setDevice = function(t) {
        if (!this.isCurrentlyEdited())
            for (var e = 0; e < this.layerAnimations.length; e++) this.layerAnimations[e].setDevice(t)
    }, e.prototype.resize = function(t, e, i) {
        this.isCurrentlyEdited() || this.animationsRefreshRatios(e)
    }, e.prototype.animationsRefreshRatios = function(t) {
        for (var e = 0; e < this.layerAnimations.length; e++) this.layerAnimations[e].refreshRatio(t.slideW, t.slideH)
    }, e.prototype.refreshTimelines = function() {
        this.slider.isAdmin || !1 === this.slider.disabled.layerAnimations ? this.layerAnimations = this.component.createLayerAnimations(this.slider.responsive.ratios.slideW, this.slider.responsive.ratios.slideH) : this.layerAnimations = []
    }, e.prototype.playIn = function() {
        if (this.status.is("INITIALIZED")) {
            this.status.set("PLAYING"), this.onPlay();
            for (var t = 0; t < this.layerAnimations.length; t++) this.layerAnimations[t].play();
            this.$element.trigger("layerAnimationPlayIn")
        } else this.status.is("SUSPENDED") && this.unsuspend()
    }, e.prototype.onPlay = function() {}, e.prototype.playSpecialEventOnly = function() {
        if (this.status.is("INITIALIZED")) {
            this.status.set("PLAYING");
            for (var t = 0; t < this.layerAnimations.length; t++) this.layerAnimations[t].playSpecialEventOnly();
            this.$element.trigger("layerAnimationPlayIn")
        }
    }, e.prototype.playOut = function() {
        if (this.status.is("PLAYING")) {
            for (var t = [], e = 0; e < this.layerAnimations.length; e++) this.layerAnimations[e].beforeMainSwitch(t);
            i.when.apply(i, t).done(function() {
                this.onOutAnimationsPlayed()
            }.bind(this))
        } else this.onOutAnimationsPlayed()
    }, e.prototype.onOutAnimationsPlayed = function() {
        this.playOnce ? this.status.set("ENDED") : this.status.set("INITIALIZED"), this.$element.trigger("layerAnimationCompleteOut")
    }, e.prototype.suspend = function() {
        for (var t = 0; t < this.layerAnimations.length; t++) this.layerAnimations[t].suspend();
        this.status.set("SUSPENDED")
    }, e.prototype.unsuspend = function() {
        if (this.status.is("SUSPENDED")) {
            for (var t = 0; t < this.layerAnimations.length; t++) this.layerAnimations[t].unsuspend();
            this.status.set("PLAYING")
        }
    }, e.prototype.reset = function() {
        if (this.layerAnimations) {
            for (var t = 0; t < this.layerAnimations.length; t++) this.layerAnimations[t].reset();
            this.status.set("INITIALIZED")
        }
    }, e.prototype.getPerspective = function() {
        return this.slider.getPerspective()
    }, e
}), N2D("FixedBackground", function(t, e) {
    var s = function() {
        if (!navigator.userAgent.match(/iphone|ipod|ipad|android/i)) return (s = function() {
            return window.innerHeight
        })();
        var t, e = Math.abs(window.orientation),
            i = {
                w: 0,
                h: 0
            };
        return (t = document.createElement("div")).style.position = "fixed", t.style.height = "100vh", t.style.width = 0, t.style.top = 0, document.documentElement.appendChild(t), i.w = 90 === e ? t.offsetHeight : window.innerWidth, i.h = 90 === e ? window.innerWidth : t.offsetHeight, document.documentElement.removeChild(t), t = null, (s = function() {
            return 90 !== Math.abs(window.orientation) ? i.h : i.w
        })()
    };
    return {
        _windowHeight: 0,
        $window: null,
        isStarted: !1,
        elements: [],
        start: function() {
            return !this.isStarted && (this.$window = t(window), navigator.userAgent.match(/iphone|ipod|ipad/i) && (this.setY = this.setYRAF), this.resize(), this.$window.on({
                "load.n2-ss-bg-parallax": this.resize.bind(this),
                "resize.n2-ss-bg-parallax": this.resize.bind(this),
                "orientationchange.n2-ss-bg-parallax": this.resize.bind(this)
            }), this.onScroll = this.render.bind(this), document.addEventListener("scroll", this.onScroll, {
                capture: !0,
                passive: !0
            }), this.isStarted = !0)
        },
        end: function() {
            this.isStarted && (this.$window.off(".n2-ss-bg-parallax"), document.removeEventListener("scroll", this.onScroll, {
                capture: !0,
                passive: !0
            }), this.isStarted = !1)
        },
        addElement: function(t, e) {
            var i = {
                $animated: t,
                $parent: t.parent(),
                data: e,
                y: 0
            };
            this.elements.push(i), NextendTween.set(t, {
                backfaceVisibility: "hidden",
                force3D: "true",
                "will-change": "transform"
            }), this.start() || this.renderElement(i)
        },
        removeElement: function(t) {
            for (var e = 0; e < this.elements.length; e++)
                if (this.elements[e].$animated === t) {
                    this.elements.splice(e, 1);
                    break
                }
            0 === this.elements.length && this.end()
        },
        resize: function() {
            this.windowHeight = s(), this.render()
        },
        render: function() {
            for (var t = 0; t < this.elements.length; t++) this.renderElement(this.elements[t])
        },
        renderElement: function(t) {
            var e = t.$parent[0].getBoundingClientRect(),
                i = 0;
            if (e.top < 0 || e.height > this.windowHeight ? i = e.top / e.height : e.bottom > this.windowHeight && (i = (e.bottom - this.windowHeight) / e.height), i <= 1 && -1 <= i) {
                var s = Math.round(i * (-t.data.strength * e.height)) || 0;
                t.y !== s && (this.setY(t.$animated, s), t.y = s)
            }
        },
        setY: function(t, e) {
            NextendTween.to(t, 0, {
                y: e + "px"
            })
        },
        setYRAF: function(t, e) {
            window.requestAnimationFrame(function() {
                t.css("transform", "translate3D(0," + e + "px,0)")
            })
        }
    }
}), N2D("LayerParallax", function(o, i) {
    var t, s, n = (t = Element.prototype, s = t.matches || t.webkitMatchesSelector || t.mozMatchesSelector || t.msMatchesSelector, function(t, e) {
        return s.call(t, e)
    });

    function e(t, e) {
        this.ticking = !1, this.active = !1, this.mouseOrigin = !1, this.parallaxedNodes = null, this.parallaxedStaticSlideNodes = [], this.parallaxedSlideNodes = null, this._scrollCallback = !1, this.firstStart = !0, this.parameters = o.extend({
            mode: "scroll",
            origin: "slider",
            is3D: !1,
            animate: !0,
            scrollmove: "both"
        }, e), /^((?!chrome|android).)*safari/i.test(navigator.userAgent) && (this.parameters.is3D = !1, t.sliderElement.find(".n2-ss-layers-container").css({
            perspective: "none"
        })), this.x = this.y = 0, this.levels = {
            1: .01,
            2: .02,
            3: .05,
            4: .1,
            5: .2,
            6: .3,
            7: .4,
            8: .5,
            9: .6,
            10: .7
        }, this.parameters.is3D && (this.rotationX = this.rotationY = 0, this.levelsDeg = {
            1: 2,
            2: 6,
            3: 10,
            4: 15,
            5: 20,
            6: 25,
            7: 30,
            8: 35,
            9: 40,
            10: 45
        }), this.parameters.animate && (this.render = this.animateRender), this.window = o(window), this.slider = t, this.sliderElement = t.sliderElement
    }
    return e.prototype.resize = function() {
        this.refreshSliderDimension()
    }, e.prototype.refreshSliderDimension = function() {
        var t = this.sliderElement[0].getBoundingClientRect();
        this.dimensions = {
            w2: t.width / 2,
            h2: t.height / 2,
            x: (t.x || t.left) + t.width / 2,
            y: (t.y || t.top) + t.height / 2
        }
    }, e.prototype.enable = function() {
        this.active = !0, this.resize(), this.sliderElement.on({
            "SliderResize.n2-ss-parallax": this.resize.bind(this)
        });
        var t = -1,
            e = -1;
        switch (this.mouseX = !1, this.mouseY = !1, this.scrollY = !1, this.parameters.horizontal) {
            case "mouse":
                this.mouseX = !0;
                break;
            case "mouse-invert":
                this.mouseX = !0, t = 1
        }
        switch (this.parameters.vertical) {
            case "mouse":
                this.mouseY = !0;
                break;
            case "mouse-invert":
                this.mouseY = !0, e = 1;
                break;
            case "scroll":
                this.scrollY = !0, e = 1;
                break;
            case "scroll-invert":
                this.scrollY = !0, e = -1
        }
        if ((this.mouseX || this.mouseY) && (this.sliderElement.on({
                "mouseenter.n2-ss-parallax": this.mouseEnter.bind(this),
                "mousemove.n2-ss-parallax": this.mouseMove.bind(this, t, e),
                "mouseleave.n2-ss-parallax": this.mouseLeave.bind(this, !1)
            }), n(this.sliderElement[0], ":hover") && this.mouseEnter(!1)), this.scrollY) {
            var i = -1,
                s = 1;
            switch (this.parameters.scrollmove) {
                case "bottom":
                    0 < e ? s = 0 : i = 0;
                    break;
                case "top":
                    0 < e ? i = 0 : s = 0
            }
            this._scrollCallback = this.scroll.bind(this, e, i, s), window.addEventListener("scroll", this._scrollCallback, {
                capture: !0,
                passive: !0
            }), this.window.on({
                "resize.n2-ss-parallax": this._scrollCallback
            })
        }
    }, e.prototype.disable = function() {
        this.sliderElement.off(".n2-ss-parallax"), this._scrollCallback && (window.removeEventListener("scroll", this._scrollCallback, {
            capture: !0,
            passive: !0
        }), this.window.off("resize.n2-ss-parallax", this._scrollCallback)), this.active = !1
    }, e.prototype.start = function(t) {
        if (null !== this.parallaxedSlideNodes && this.end(), this.firstStart) {
            if (this.slider.staticSlides) {
                this.parallaxedStaticSlideNodes = o();
                for (var e = 0; e < this.slider.staticSlides.length; e++) this.parallaxedStaticSlideNodes = this.parallaxedStaticSlideNodes.add(this.slider.staticSlides[e].getParallaxNodes())
            }
            this.firstStart = !1
        }
        if (this.parallaxedSlideNodes = t.getParallaxNodes(), this.parallaxedNodes = o.merge(o.merge([], this.parallaxedSlideNodes), this.parallaxedStaticSlideNodes), this.parallaxedNodes.length) {
            if (this.parameters.is3D) {
                var i = this.slider.getPerspective();
                o.each(this.parallaxedNodes, function(t, e) {
                    0 < i && (n2const.isEdge ? NextendTween.set(e.parentElement, {
                        transformPerspective: i
                    }) : NextendTween.set(e.parentElement, {
                        perspective: i
                    }))
                }.bind(this))
            }
            this.active || this.enable(), this._scrollCallback && this._scrollCallback()
        } else this.parallaxedNodes = null, this.parallaxedSlideNodes = null, this.active && this.disable()
    }, e.prototype.end = function() {
        switch (this.parameters.mode) {
            case "mouse-scroll":
                this.mouseLeave(null, !0);
                break;
            case "scroll":
                break;
            default:
                this.mouseLeave(null, !0)
        }
        this.parallaxedNodes = null
    }, e.prototype.mouseEnter = function(t) {
        this.ticking || (NextendTween.ticker.addEventListener("tick", this.draw, this), this.ticking = !0), this.refreshSliderDimension(), t && "enter" === this.parameters.origin ? this.mouseOrigin = {
            x: t.clientX,
            y: t.clientY
        } : this.mouseOrigin = this.dimensions
    }, e.prototype.mouseMove = function(t, e, i) {
        !1 !== this.mouseOrigin && (this.mouseX && (this.x = t * (i.clientX - this.mouseOrigin.x), this.parameters.is3D && (this.rotationY = -this.x / this.dimensions.w2)), this.mouseY && (this.y = e * (i.clientY - this.mouseOrigin.y), this.parameters.is3D && (this.rotationX = this.y / this.dimensions.h2)))
    }, e.prototype.mouseLeave = function(t, e) {
        this.ticking && (NextendTween.ticker.removeEventListener("tick", this.draw, this), this.ticking = !1);
        var i = {};
        this.mouseX && (i.x = 0), this.mouseY && (i.y = 0), this.parameters.is3D && (i.rotationX = i.rotationY = 0), NextendTween.to(e ? this.parallaxedSlideNodes : this.parallaxedNodes, 2, i)
    }, e.prototype.getScrollTopRecursive = function(t, e) {
        return null === t || t.scrollTop === i ? e : (e += t.scrollTop, this.getScrollTopRecursive(t.parentNode, e))
    }, e.prototype.scroll = function(t, e, i) {
        this.refreshSliderDimension();
        var s = this.window.height(),
            n = this.getScrollTopRecursive(this.sliderElement[0], 0);
        0 < this.dimensions.y + this.dimensions.h2 && s > this.dimensions.y - this.dimensions.h2 && (this.y = Math.max(e, Math.min(i, 2 * (this.dimensions.y + this.dimensions.h2) / (s + 2 * this.dimensions.h2) - 1)), this.dimensions.y + n < s && (this.y = Math.min(0, this.y)), this.y *= -t * this.dimensions.h2 * 4, this.parameters.is3D && (this.rotationX = this.y / this.dimensions.h2), this.draw())
    }, e.prototype.draw = function() {
        if (this.parallaxedNodes)
            for (var t = 0; t < this.parallaxedNodes.length; t++) {
                var e = o(this.parallaxedNodes[t]).data("parallax"),
                    i = this.levels[e],
                    s = {};
                if (this.parameters.is3D) {
                    var n = this.levelsDeg[e];
                    s.rotationX = this.rotationX * n, s.rotationY = this.rotationY * n
                }
                s.x = Math.round(this.x * i), s.y = Math.round(this.y * i), this.render(this.parallaxedNodes[t], s)
            }
    }, e.prototype.render = function(t, e) {
        NextendTween.set(t, e)
    }, e.prototype.animateRender = function(t, e) {
        NextendTween.to(t, .6, e)
    }, e
}), N2D("FrontendPlacement", function(t, e) {
    function i(t) {
        this.layer = t, this.alwaysResize = !1, this.linked = []
    }
    return i.prototype.start = function() {}, i.prototype.onDeviceChange = function(t) {}, i.prototype.onResize = function(t, e) {
        for (var i = 0; i < this.linked.length; i++) this.linked[i].onResizeLinked(t, e)
    }, i.prototype.addLinked = function(t) {
        this.linked.push(t), this.alwaysResize = !0
    }, i
}), N2D("FrontendSliderSlide", ["FrontendSliderSlideAbstract"], function(n, o) {
    function t(t, e, i) {
        this.slides = [this], this.playCount = 0, N2Classes.FrontendSliderSlideAbstract.prototype.constructor.apply(this, arguments), this.id = this.$element.data("id");
        var s = "";
        this.$element.data("title") !== o && (s = this.$element.data("title")), this.$slideFocus = n('<div tabindex="-1" class="n2-ss-slide--focus" role="note">' + s + "</div>").prependTo(this.$element), this.$focusableElements = this.$element.find('a[href]:not([href=""]),link,button,input:not([type="hidden"]),select,textarea,audio[controls],video[controls],[tabindex]:not([tabindex="-1"])'), this.disableFocus(), this.background = !1, t.parameters.admin ? this.minimumSlideDuration = 0 : (this.minimumSlideDuration = parseFloat(e.data("slide-duration")), isFinite(this.minimumSlideDuration) || (this.minimumSlideDuration = 0)), this._isCurrentlyEdited = this.slider.parameters.admin && this.$element.hasClass("n2-ss-currently-edited-slide"), this.isCurrentlyEdited() ? (this.$layer = e.find('.n2-ss-layer[data-sstype="slide"]'), t.sliderElement.on({
            SliderDeviceOrientation: function() {
                this.slider.visibleRealSlides.push(this), this.isVisible = !0, this.slider.responsive.visibleRealSlidesChanged = !0, this.triggerHandler("Visible")
            }.bind(this)
        })) : (this.component = new N2Classes.FrontendComponentSectionSlide(this, t, e.find('.n2-ss-layer[data-sstype="slide"]')), this.$layer = this.component.$layer)
    }
    var e = !(((t.prototype = Object.create(N2Classes.FrontendSliderSlideAbstract.prototype)).constructor = t).prototype._setInside = function(t) {
        this.isInside !== t && (this.isInside = t, this.isCurrentlyEdited() || (t ? this.status.is("SUSPENDED") && this.unsuspend() : !this.slider.parameters.layerMode.playOnce || this.playCount < 1 ? this.reset() : "skippable" === this.slider.parameters.layerMode.mode && this.suspend()))
    });
    try {
        document.createElement("div").focus(Object.defineProperty({}, "preventScroll", {
            get: function() {
                e = !0
            }
        }))
    } catch (t) {}
    return t.prototype.focus = function() {
        e && this.$slideFocus[0].focus({
            preventScroll: !0
        })
    }, t.prototype.allowFocus = function() {
        this.$focusableElements.attr("tabindex", "0"), this.$element.removeAttr("aria-hidden")
    }, t.prototype.disableFocus = function() {
        this.$focusableElements.attr("tabindex", "-1"), this.$element.attr("aria-hidden", !0)
    }, t.prototype.init = function() {
        if (!this.isCurrentlyEdited()) {
            var n = this.$element.find('[data-device="1"]');
            this.slider.sliderElement.on("SliderDeviceOrientation", function(t, e) {
                for (var i = 0; i < n.length; i++) {
                    var s = n.eq(i);
                    s.attr("src", s.data(e.group))
                }
            }.bind(this))
        }
        var t = this.slider.findSlideBackground(this);
        0 < t.length && (this.slider.isAdmin ? this.background = new N2Classes.SmartSliderSlideBackgroundAdmin(this, t, this.slider.backgrounds) : this.background = new N2Classes.SmartSliderSlideBackground(this, t, this.slider.backgrounds)), this.$element.data("slideBackground", this.background)
    }, t.prototype.onDeviceChange = function(t) {
        this.$element.data("hide-" + t) ? !1 !== this.isVisible && (this.isVisible = !1, this.slider.responsive.visibleRealSlidesChanged = !0, this.triggerHandler("Hidden")) : (this.slider.visibleRealSlides.push(this), !0 !== this.isVisible && (this.isVisible = !0, this.slider.responsive.visibleRealSlidesChanged = !0, this.triggerHandler("Visible")))
    }, t.prototype.hasLayers = function() {
        return 0 < this.component.children.length
    }, t.prototype.getParallaxNodes = function() {
        return this.component.getParallaxNodes()
    }, t.prototype.hasBackgroundVideo = function() {
        return this.background.hasVideo()
    }, t.prototype.getThumbnailType = function() {
        return this.$element.data("thumbnail-type")
    }, t.prototype.hasLink = function() {
        return !!this.$element.data("haslink")
    }, t.prototype.getLightboxImage = function() {
        return this.$element.data("lightbox-image")
    }, t.prototype.onPlay = function() {
        this.playCount++
    }, t
}), N2D("FrontendSliderSlideAbstract", ["FrontendSlideControls"], function(i, t) {
    function e(t, e, i) {
        N2Classes.FrontendSlideControls.prototype.constructor.call(this, t, e), this.slides = this.slides || [], (this.group = this).originalIndex = i, this.index = i, this.localIndex = i, this.groupIndex = 0, this.isVisible = !0, this.isInside = -1
    }
    for (var s in N2Classes.FrontendSlideControls.prototype) e.prototype[s] = N2Classes.FrontendSlideControls.prototype[s];
    return e.prototype.setIndex = function(t) {
        for (var e = 0; e < this.slides.length; e++) this.slides[e]._setIndex(t)
    }, e.prototype._setIndex = function(t) {
        this.localIndex = this.index = t
    }, e.prototype.preLoad = function() {
        for (var t = [], e = 0; e < this.slides.length; e++) t.push(this.slides[e]._preLoad());
        return i.when.apply(i, t)
    }, e.prototype._preLoad = function() {
        return !this.background || this.background.preLoad()
    }, e.prototype.setPrevious = function(t) {
        this.previousSlide = t
    }, e.prototype.getPrevious = function() {
        for (var t = this;
            (t = t.previousSlide) && t !== this && !t.isVisible;);
        return t
    }, e.prototype.setNext = function(t) {
        (this.nextSlide = t) && t.setPrevious(this)
    }, e.prototype.getNext = function() {
        for (var t = this;
            (t = t.nextSlide) && t !== this && !t.isVisible;);
        return t
    }, e.prototype.getTitle = function() {
        return this.slides[0].$element.data("title")
    }, e.prototype.getDescription = function() {
        return this.slides[0].$element.data("description")
    }, e.prototype.getThumbnail = function() {
        return this.slides[0].$element.data("thumbnail")
    }, e.prototype.hasLink = function() {
        return !1
    }, e.prototype.setActive = function() {
        this.allowFocus(), this.$element.addClass("n2-ss-slide-active")
    }, e.prototype.unsetActive = function() {
        this.disableFocus(), this.$element.removeClass("n2-ss-slide-active")
    }, e.prototype.setInside = function(t) {
        for (var e = 0; e < this.slides.length; e++) this.slides[e]._setInside(t)
    }, e.prototype._setInside = function(t) {}, e.prototype.focus = function() {}, e.prototype.allowFocus = function() {}, e.prototype.disableFocus = function() {}, e.prototype.isVisibleWhen = function(t) {
        return -1 !== this.slider.getVisibleSlides(t).indexOf(this)
    }, e.prototype.isActiveWhen = function(t) {
        return -1 !== this.slider.getActiveSlides(t).indexOf(this)
    }, e
}), N2D("SlideStatus", function(t, e) {
    var i = {
        NOT_INITIALIZED: -1,
        INITIALIZED: 0,
        READY_TO_START: 1,
        PLAYING: 2,
        ENDED: 3,
        SUSPENDED: 4
    };

    function s() {
        this.status = i.NOT_INITIALIZED
    }
    return s.prototype.set = function(t) {
        this.status = i[t]
    }, s.prototype.is = function(t) {
        return this.status === i[t]
    }, s
}), N2D("FrontendSliderStaticSlide", ["FrontendSlideControls"], function(t, e) {
    function i(t, e) {
        N2Classes.FrontendSlideControls.prototype.constructor.call(this, t, e), this.slides = [this], this.isVisible = !0, this._isCurrentlyEdited = this.slider.parameters.admin && this.$element.hasClass("n2-ss-currently-edited-slide"), this.isCurrentlyEdited() ? this.$layer = this.$element.find('.n2-ss-layer[data-sstype="slide"]') : (this.component = new N2Classes.FrontendComponentSectionSlide(this, t, e.find('.n2-ss-layer[data-sstype="slide"]')), this.$layer = this.component.$layer), this.init()
    }
    for (var s in N2Classes.FrontendSlideControls.prototype) i.prototype[s] = N2Classes.FrontendSlideControls.prototype[s];
    return i.prototype.isStatic = function() {
        return !0
    }, i.prototype.init = function() {
        if (!this.isCurrentlyEdited()) {
            this.slider.stages.done("BeforeShow", function() {
                this.initLayerAnimations(), this.slider.visible(function() {
                    this.isVisible && this.playIn()
                }.bind(this))
            }.bind(this));
            var n = this.$element.find('[data-device="1"]');
            this.slider.sliderElement.on("SliderDeviceOrientation", function(t, e) {
                for (var i = 0; i < n.length; i++) {
                    var s = n.eq(i);
                    s.attr("src", s.data(e.group))
                }
            }.bind(this))
        }
    }, i.prototype.getParallaxNodes = function() {
        return this.component.getParallaxNodes()
    }, i.prototype.onDeviceChange = function(t) {
        this.$element.data("hide-" + t) ? !1 !== this.isVisible && (this.isVisible = !1, this.triggerHandler("Hidden")) : !0 !== this.isVisible && (this.isVisible = !0, this.status.is("INITIALIZED") && this.playIn(), this.triggerHandler("Visible"))
    }, i
}), N2D("FrontendPlacementAbsolute", ["FrontendPlacement"], function(e, t) {
    function i(t) {
        this.parentLayer = !1, this.$parent = !1, N2Classes.FrontendPlacement.prototype.constructor.apply(this, arguments)
    }
    return ((i.prototype = Object.create(N2Classes.FrontendPlacement.prototype)).constructor = i).prototype.start = function() {
        var t = this.layer.get("parentid");
        t && (this.$parent = e("#" + t), 0 === this.$parent.length ? this.$parent = !1 : (this.parentLayer = this.$parent.data("layer"), this.parentLayer.placement.addLinked(this), this.onResize = function() {}))
    }, i.prototype.isSingleAxis = function() {
        if (this.layer.parent instanceof N2Classes.FrontendComponentSectionSlide) {
            if (!this.parentLayer) return !1;
            if (this.parentLayer.placement instanceof N2Classes.FrontendPlacementAbsolute) return !1
        }
        return !0
    }, i.prototype.onResize = i.prototype.onResizeLinked = function(t, e) {
        var i = this.layer.$layer,
            s = t.slideW,
            n = t.slideH;
        this.isSingleAxis() && (n = s);
        var o = s,
            r = n;
        parseInt(this.layer.get("responsivesize")) || (o = r = 1), i.css("width", this.getWidth(o)), i.css("height", this.getHeight(r)), parseInt(this.layer.get("responsiveposition")) || (s = n = 1);
        var a, l = this.layer.getDevice("left") * s,
            h = this.layer.getDevice("top") * n,
            d = this.layer.getDevice("align"),
            c = this.layer.getDevice("valign"),
            p = {
                left: "auto",
                top: "auto",
                right: "auto",
                bottom: "auto"
            };
        if (this.$parent && this.$parent.data("layer").isVisible) {
            var u = {
                    left: (a = this.$parent).prop("offsetLeft"),
                    top: a.prop("offsetTop")
                },
                m = {
                    left: 0,
                    top: 0
                };
            switch (this.layer.getDevice("parentalign")) {
                case "right":
                    m.left = u.left + this.$parent.width();
                    break;
                case "center":
                    m.left = u.left + this.$parent.width() / 2;
                    break;
                default:
                    m.left = u.left
            }
            switch (d) {
                case "right":
                    p.right = i.parent()[0].offsetWidth - m.left - l + "px";
                    break;
                case "center":
                    p.left = m.left + l - i.width() / 2 + "px";
                    break;
                default:
                    p.left = m.left + l + "px"
            }
            switch (this.layer.getDevice("parentvalign")) {
                case "bottom":
                    m.top = u.top + this.$parent.height();
                    break;
                case "middle":
                    m.top = u.top + this.$parent.height() / 2;
                    break;
                default:
                    m.top = u.top
            }
            switch (c) {
                case "bottom":
                    p.bottom = i.parent()[0].offsetHeight - m.top - h + "px";
                    break;
                case "middle":
                    p.top = m.top + h - i.height() / 2 + "px";
                    break;
                default:
                    p.top = m.top + h + "px"
            }
        } else {
            switch (d) {
                case "right":
                    p.right = -l + "px";
                    break;
                case "center":
                    var f;
                    f = !this.layer.slide.isStatic && this.layer.parent instanceof N2Classes.FrontendComponentSectionSlide ? e.slideWidth : i.parent()[0].offsetWidth, p.left = Math.round(f / 2 + l - i.width() / 2) + "px";
                    break;
                default:
                    p.left = l + "px"
            }
            switch (c) {
                case "bottom":
                    p.bottom = -h + "px";
                    break;
                case "middle":
                    var y;
                    y = !this.layer.slide.isStatic && this.layer.parent instanceof N2Classes.FrontendComponentSectionSlide ? e.slideHeight : i.parent()[0].offsetHeight, p.top = Math.round(y / 2 + h - i.height() / 2) + "px";
                    break;
                default:
                    p.top = h + "px"
            }
        }
        i.css(p);
        for (var g = 0; g < this.linked.length; g++) this.linked[g].onResizeLinked(t, e)
    }, i.prototype.getWidth = function(t) {
        var e = this.layer.getDevice("width");
        return this.isDimensionPropertyAccepted(e) ? e : e * t + "px"
    }, i.prototype.getHeight = function(t) {
        var e = this.layer.getDevice("height");
        return this.isDimensionPropertyAccepted(e) ? e : e * t + "px"
    }, i.prototype.isDimensionPropertyAccepted = function(t) {
        return !(!(t + "").match(/[0-9]+%/) && "auto" != t)
    }, i
}), N2D("FrontendPlacementContent", ["FrontendPlacement"], function(t, e) {
    function i(t) {
        N2Classes.FrontendPlacement.prototype.constructor.apply(this, arguments)
    }
    return (i.prototype = Object.create(N2Classes.FrontendPlacement.prototype)).constructor = i
}), N2D("FrontendPlacementDefault", ["FrontendPlacement"], function(t, e) {
    function i(t) {
        N2Classes.FrontendPlacement.prototype.constructor.apply(this, arguments)
    }
    return (i.prototype = Object.create(N2Classes.FrontendPlacement.prototype)).constructor = i
}), N2D("FrontendPlacementNormal", ["FrontendPlacement"], function(t, e) {
    function i(t) {
        N2Classes.FrontendPlacement.prototype.constructor.apply(this, arguments)
    }
    return ((i.prototype = Object.create(N2Classes.FrontendPlacement.prototype)).constructor = i).prototype.onDeviceChange = function() {
        this.updateMargin(), this.updateHeight(), this.updateMaxWidth(), this.updateSelfAlign()
    }, i.prototype.updateMargin = function() {
        var t = this.layer.getDevice("margin").split("|*|"),
            e = t.pop(),
            i = this.layer.baseSize;
        if ("px+" == e && 0 < i) {
            e = "em";
            for (var s = 0; s < t.length; s++) t[s] = parseInt(t[s]) / i
        }
        this.layer.$layer.css("margin", t.join(e + " ") + e)
    }, i.prototype.updateHeight = function() {
        var t = this.layer.getDevice("height"),
            e = "px";
        if (0 < t) {
            var i = this.layer.baseSize;
            0 < i && (e = "em", t = parseInt(t) / i), this.layer.$layer.css("height", t + e).attr("data-custom-height", 1)
        } else this.layer.$layer.css("height", "").removeAttr("data-custom-height")
    }, i.prototype.updateMaxWidth = function() {
        var t = parseInt(this.layer.getDevice("maxwidth"));
        t <= 0 || isNaN(t) ? this.layer.$layer.css("maxWidth", "").attr("data-has-maxwidth", "0") : this.layer.$layer.css("maxWidth", t + "px").attr("data-has-maxwidth", "1")
    }, i.prototype.updateSelfAlign = function() {
        this.layer.$layer.attr("data-cssselfalign", this.layer.getDevice("selfalign"))
    }, i
}), N2D("FrontendComponentCol", ["FrontendComponentCommon"], function(t, e) {
    function i(t, e, i) {
        this.$content = i.find(".n2-ss-layer-col:first"), N2Classes.FrontendComponentCommon.prototype.constructor.call(this, t, e, i, this.$content.find("> .n2-ss-layer"))
    }
    return ((i.prototype = Object.create(N2Classes.FrontendComponentCommon.prototype)).constructor = i).prototype.onDeviceChange = function(t) {
        N2Classes.FrontendComponentCommon.prototype.onDeviceChange.apply(this, arguments), this.updateOrder(), this.updatePadding(), this.updateVerticalAlign(), this.updateInnerAlign(), this.updateMaxWidth()
    }, i.prototype.updatePadding = function() {
        var t = this.getDevice("padding").split("|*|"),
            e = t.pop(),
            i = this.baseSize;
        if ("px+" === e && 0 < i) {
            e = "em";
            for (var s = 0; s < t.length; s++) t[s] = parseInt(t[s]) / i
        }
        this.$content.css("padding", t.join(e + " ") + e)
    }, i.prototype.updateVerticalAlign = function() {
        this.$content.attr("data-verticalalign", this.getDevice("verticalalign"))
    }, i.prototype.updateInnerAlign = function() {
        this.$layer.attr("data-csstextalign", this.getDevice("inneralign"))
    }, i.prototype.updateMaxWidth = function() {
        var t = parseInt(this.getDevice("maxwidth"));
        t <= 0 || isNaN(t) ? this.$layer.css("maxWidth", "").attr("data-has-maxwidth", "0") : this.$layer.css("maxWidth", t + "px").attr("data-has-maxwidth", "1")
    }, i.prototype.getWidthPercentage = function() {
        return parseFloat(this.$layer.data("colwidthpercent"))
    }, i.prototype.getRealOrder = function() {
        var t = this.getDevice("order");
        return 0 == t ? 10 : t
    }, i.prototype.updateOrder = function() {
        var t = this.getDevice("order");
        0 == t ? this.$layer.css("order", "") : this.$layer.css("order", "" + t)
    }, i.prototype.getContents = function() {
        return this.$content
    }, i
}), N2D("FrontendComponentContent", ["FrontendComponentCommon"], function(t, e) {
    function i(t, e, i) {
        this.$content = i.find(".n2-ss-section-main-content:first"), N2Classes.FrontendComponentCommon.prototype.constructor.call(this, t, e, i, this.$content.find("> .n2-ss-layer"))
    }
    return ((i.prototype = Object.create(N2Classes.FrontendComponentCommon.prototype)).constructor = i).prototype.onDeviceChange = function(t) {
        N2Classes.FrontendComponentCommon.prototype.onDeviceChange.apply(this, arguments), this.updatePadding(), this.updateVerticalAlign(), this.updateInnerAlign(), this.updateMaxWidth(), this.updateSelfAlign()
    }, i.prototype.updatePadding = function() {
        var t = this.getDevice("padding").split("|*|"),
            e = t.pop(),
            i = this.baseSize;
        if ("px+" == e && 0 < i) {
            e = "em";
            for (var s = 0; s < t.length; s++) t[s] = parseInt(t[s]) / i
        }
        this.$content.css("padding", t.join(e + " ") + e)
    }, i.prototype.updateVerticalAlign = function() {
        this.$content.attr("data-verticalalign", this.getDevice("verticalalign"))
    }, i.prototype.updateInnerAlign = function() {
        this.$layer.attr("data-csstextalign", this.getDevice("inneralign"))
    }, i.prototype.updateMaxWidth = function() {
        var t = parseInt(this.getDevice("maxwidth"));
        t <= 0 || isNaN(t) ? this.$layer.css("maxWidth", "").attr("data-has-maxwidth", "0") : this.$layer.css("maxWidth", t + "px").attr("data-has-maxwidth", "1")
    }, i.prototype.updateSelfAlign = function() {
        this.$layer.attr("data-cssselfalign", this.getDevice("selfalign"))
    }, i.prototype.getContents = function() {
        return this.$content
    }, i
}), N2D("FrontendComponentLayer", ["FrontendComponentCommon"], function(t, s) {
    function e(t, e, i) {
        N2Classes.FrontendComponentCommon.prototype.constructor.call(this, t, e, i), this.wraps.mask !== s ? this.$item = this.wraps.mask.children() : this.wraps.parallax !== s ? this.$item = this.wraps.parallax.children() : this.$item = i.children()
    }
    return ((e.prototype = Object.create(N2Classes.FrontendComponentCommon.prototype)).constructor = e).prototype.getContents = function() {
        return this.$item
    }, e
}), N2D("FrontendComponentRow", ["FrontendComponentCommon"], function(i, c) {
    function t(t, e, i) {
        this.$row = i.find(".n2-ss-layer-row:first"), this.$rowInner = this.$row.find(".n2-ss-layer-row-inner:first"), this.columns = [], N2Classes.FrontendComponentCommon.prototype.constructor.call(this, t, e, i, this.$rowInner.find("> .n2-ss-layer"))
    }
    return ((t.prototype = Object.create(N2Classes.FrontendComponentCommon.prototype)).constructor = t).prototype.init = function(t) {
        N2Classes.FrontendComponentCommon.prototype.init.call(this, t);
        for (var e = 0; e < this.children.length; e++) this.children[e] instanceof N2Classes.FrontendComponentCol && this.columns.push(this.children[e])
    }, t.prototype.onDeviceChange = function(t) {
        N2Classes.FrontendComponentCommon.prototype.onDeviceChange.apply(this, arguments), this.updatePadding(), this.updateGutter(), this.updateInnerAlign()
    }, t.prototype.onAfterDeviceChange = function(t) {
        this.updateWrapAfter()
    }, t.prototype.updatePadding = function() {
        var t = this.getDevice("padding").split("|*|"),
            e = t.pop(),
            i = this.baseSize;
        if ("px+" === e && 0 < i) {
            e = "em";
            for (var s = 0; s < t.length; s++) t[s] = parseInt(t[s]) / i
        }
        this.$row.css("padding", t.join(e + " ") + e)
    }, t.prototype.updateInnerAlign = function() {
        this.$layer.attr("data-csstextalign", this.getDevice("inneralign"))
    }, t.prototype.updateGutter = function() {
        var t = this.getDevice("gutter"),
            e = t / 2;
        if (0 < this.columns.length)
            for (var i = this.columns.length - 1; 0 <= i; i--) this.columns[i].$layer.css("margin", e + "px");
        this.$rowInner.css({
            width: "calc(100% + " + (t + 1) + "px)",
            margin: -e + "px"
        })
    }, t.prototype.getSortedColumns = function() {
        for (var t = i.extend([], this.columns).sort(function(t, e) {
                return t.getRealOrder() - e.getRealOrder()
            }), e = t.length - 1; 0 <= e; e--) t[e].isVisible || t.splice(e, 1);
        return t
    }, t.prototype.updateWrapAfter = function() {
        var t, e = parseInt(this.getDevice("wrapafter")),
            i = this.getSortedColumns(),
            s = i.length,
            n = !1;
        if (0 === s) return !1;
        if (0 < e && e < s && (n = !0), this.$row.attr("row-wrapped", n ? 1 : 0), n) {
            var o = [];
            for (t = 0; t < s; t++) {
                var r = Math.floor(t / e);
                o[r] === c && (o[r] = []), o[r].push(i[t]), i[t].$layer.attr("data-r", r).toggleClass("n2-ss-last-in-row", (t + 1) % e == 0 || t === s - 1)
            }
            var a = this.getDevice("gutter");
            for (t = 0; t < o.length; t++) {
                var l, h = o[t],
                    d = 0;
                for (l = 0; l < h.length; l++) d += h[l].getWidthPercentage();
                for (l = 0; l < h.length; l++) h[l].$layer.css("width", "calc(" + h[l].getWidthPercentage() / d * 100 + "% - " + (n2const.isIE || n2const.isEdge ? a + 1 : a) + "px)")
            }
        } else {
            d = 0;
            for (t = 0; t < s; t++) d += i[t].getWidthPercentage();
            for (t = 0; t < s; t++) i[t].$layer.css("width", i[t].getWidthPercentage() / d * 100 + "%").removeClass("n2-ss-last-in-row").attr("data-r", 0);
            i[s - 1].$layer.addClass("n2-ss-last-in-row")
        }
    }, t.prototype.getContents = function() {
        return this.$row
    }, t
}), N2D("FrontendComponentSectionSlide", ["FrontendComponent"], function(t, e) {
    function i(t, e, i) {
        this.realSlide = t, this.slider = e, this.$element = t.$element, this.$layer = i, this.baseSize = 16, this.isStatic = t.isStatic(), N2Classes.FrontendComponent.prototype.constructor.call(this, this, this, i, i.find("> .n2-ss-layer")), e.sliderElement.on({
            SliderDeviceOrientation: function(t, e) {
                this.onDeviceChange(e.device.toLowerCase())
            }.bind(this),
            SliderResize: function(t, e, i) {
                this.onResize(e, i.resizeContext)
            }.bind(this)
        }), this.start()
    }
    return ((i.prototype = Object.create(N2Classes.FrontendComponent.prototype)).constructor = i).prototype.onDeviceChange = function(t) {
        N2Classes.FrontendComponent.prototype.onDeviceChange.call(this, t);
        for (var e = 0; e < this.children.length; e++) this.children[e].onDeviceChange(t);
        this.realSlide.onDeviceChange(t), this.updatePadding()
    }, i.prototype.updatePadding = function() {
        var t = this.getDevice("padding").split("|*|");
        this.$layer.css("padding", t.join("px ") + "px")
    }, i.prototype.getPerspective = function() {
        return this.slider.getPerspective()
    }, i
}), N2D("FrontendLayerAnimationManager", function(i, n) {
    function r(t, e, i) {
        this.status = new N2Classes.AnimationStatus, this.inStatus = !1, this.loopStatus = !1, this.outStatus = !1, this.namespace = "n2-ss-animations-" + r.index++, this.hasSpecialEvent = !1, this.linear = !1, this.layer = t, this.$layer = e, this.options = {
            repeatable: 0,
            startDelay: 0,
            endDelay: 0,
            loopRepeatSelfOnly: 0,
            inPlayEvent: "",
            loopPlayEvent: "",
            loopPauseEvent: "",
            loopStopEvent: "",
            outPlayEvent: ""
        }, this.promises = { in: new N2Classes.AnimationPromise(this, "IN"),
            loop: new N2Classes.AnimationPromise(this, "LOOP"),
            out: new N2Classes.AnimationPromise(this, "OUT"),
            reset: function() {
                this.in.reset(), this.loop.reset(), this.out.reset()
            }
        };
        var s = (this.$animatableElement = e).data("animatableselector");
        s && (this.$animatableElement = e.find(s), this.$animatableElement.on("n2AutoAlphaVisibility", function(t) {
            (t = t.originalEvent || t).detail.visibility ? this.$layer.removeAttr("data-force-hidden") : this.$layer.attr("data-force-hidden", "")
        }.bind(this))), this.perspective = i, e.data("LayerAnimation", this), 0 < this.perspective && (n2const.isEdge ? NextendTween.set(this.$layer.parent(), {
            transformPerspective: this.perspective
        }) : NextendTween.set(this.$layer.parent(), {
            perspective: this.perspective
        })), this.plugins = new o
    }

    function o() {
        this.keys = ["basic", "reveal"], this.basic = n, this.reveal = n
    }
    return r.index = 1, r.optimize = function(t) {
        return t.opacity !== n && (t.n2AutoAlpha = t.opacity, delete t.opacity), t
    }, r.optimizeTweenTo = function(t, e, i) {
        NextendTween.to(t, e, r.optimize(i))
    }, r.optimizeTo = function(t, e, i, s, n) {
        t.to(e, i, r.optimize(s), n)
    }, r.optimizeFromTo = function(t, e, i, s, n, o) {
        t.fromTo(e, i, r.optimize(s), r.optimize(n), o)
    }, r.prototype.hasAnimation = function() {
        return this.inStatus || this.loopStatus || this.outStatus
    }, r.prototype.collectRelatedAnimations = function() {
        this.relatedAnimations = {
            needInvalidate: !1,
            setDevice: [],
            updateRatios: [],
            in: [],
            loop: [],
            out: []
        };
        for (var t = 0; t < o.keys.length; t++) {
            var e = o.keys[t];
            this.options[e] && (this.plugins[e] || this.plugins.initPlugin(e, this.$layer, this.$animatableElement), this.plugins[e].collectRelatedAnimations(this.relatedAnimations, this, this.options[e]))
        }
        this.$layer.triggerHandler("collectRelatedAnimations", [this.relatedAnimations, this])
    }, r.prototype.needInvalidate = function() {
        this.relatedAnimations.needInvalidate = !0
    }, r.prototype.onStageReached = function(t) {
        "loop" === t && this.loopStatus && this.loop.play(), this.$layer.triggerHandler(t.charAt(0).toUpperCase() + t.slice(1) + "Started")
    }, r.prototype.setEventBased = function(t, e, i) {
        this.slide = t, this.horizontalRatio = e, this.verticalRatio = i;
        var s = this.$layer.data("animv2");
        s && ("object" != typeof s ? this.setOptions(JSON.parse(s)) : this.setOptions(s)), this.device = this.slide.slider.responsive.getDeviceMode(), this.collectRelatedAnimations(), this.options.repeatable && "" === this.options.inPlayEvent && (this.options.inPlayEvent = "layerAnimationPlayIn,OutComplete", "" === this.options.loopPlayEvent && (this.options.loopPlayEvent = "InComplete"), "" === this.options.outPlayEvent && (this.options.outPlayEvent = "LoopComplete")), "" === this.options.outPlayEvent ? "forced" === this.slide.slider.parameters.layerMode.mode ? this.options.outPlayEvent = "OutForced" : this.options.outPlayEvent = "LoopComplete" : this.options.outPlayEvent.match(/OutForced/) ? this.options.outPlayEvent = "OutForced" : this.options.outPlayEvent.match(/^(.*?,|.*? )?InstantOut(,.*?| .*?)?$/) && (this.options.outPlayEvent = "LoopComplete"), "" === this.options.inPlayEvent && (this.options.inPlayEvent = "layerAnimationPlayIn"), "" === this.options.loopPlayEvent && (this.options.loopPlayEvent = "InComplete"), this.buildTimeline(), this.updateRatios(e, i), this.inStatus ? (this.hasSpecialEvent || this.options.inPlayEvent.match("layerAnimationPlayIn") || (this.hasSpecialEvent = !0), this.options.inPlayEvent.match("OutComplete") ? this.promises.in.forceResolve() : this.subscribeEvent(this.options.inPlayEvent, function() {
            this.status.suspended() || (this.status.is("INITIALIZED_PLAYING") || this.status.is("IN_WAIT") ? (this.promises.in.resolveAndCheck(), delete this.targetStage) : (this.status.isLoop() || this.status.isOut() || this.targetStage !== n && "in" !== this.targetStage) && (this.status.isIn() ? delete this.targetStage : this.targetStage = "in"))
        }.bind(this))) : (this.promises.in.forceResolve(), setTimeout(function() {
            this.$layer.triggerHandler("layerAnimationPlayLoop")
        }.bind(this), 1)), this.loopStatus ? (this.options.loopPlayEvent.match("InComplete") ? this.promises.loop.forceResolve() : (this.hasSpecialEvent || (this.hasSpecialEvent = !0), this.subscribeEvent(this.options.loopPlayEvent, function() {
            this.status.suspended() || (this.status.is("LOOP_WAIT") ? this.promises.loop.resolveAndCheck() : this.status.is("LOOP_PAUSED") && this.loop.resume())
        }.bind(this))), "" !== this.options.loopPauseEvent && this.subscribeEvent(this.options.loopPauseEvent + ".n2-ss-loop", this.loop.pause.bind(this.loop)), "" !== this.options.loopStopEvent && this.subscribeEvent(this.options.loopStopEvent + ".n2-ss-loop", this.loop.requestEnd.bind(this.loop, !1))) : (this.promises.loop.forceResolve(), this.subscribeEvent("InComplete", this.loopComplete.bind(this))), !this.outStatus || this.options.outPlayEvent.match("LoopComplete") ? this.promises.out.forceResolve() : "OutForced" === this.options.outPlayEvent || (this.hasSpecialEvent = !0, this.subscribeEvent(this.options.outPlayEvent, function() {
            this.status.suspended() || (this.status.is("OUT_WAIT") ? (this.promises.out.resolveAndCheck(), delete this.targetStage) : this.status.is("LOOP_WAIT") ? (this.promises.loop.resolve(), this.promises.out.resolve(), this.status.set("OUT_WAIT"), this.timeline.seek("OUT").play()) : this.status.is("LOOP_PLAYING") || this.status.is("LOOP_PAUSED") ? (this.promises.out.resolve(), this.loop.requestEnd(!0)) : (this.status.isIn() || this.status.isLoop() || this.targetStage !== n && "out" !== this.targetStage) && (this.status.isOut() ? delete this.targetStage : this.targetStage = "out"))
        }.bind(this))), this.status.set("INITIALIZED")
    }, r.prototype.play = function() {
        !this.status.suspended() && this.status.is("INITIALIZED") && this.status.set("INITIALIZED_PLAYING"), this.timeline.play()
    }, r.prototype.playSpecialEventOnly = function() {
        this.hasSpecialEvent ? this.play() : "OutForced" === this.options.outPlayEvent ? (this.status.set("LOOP_WAIT"), this.timeline.seek("ZERO", !0)) : (this.status.set("DISABLED"), this.timeline.progress(1, !0))
    }, r.prototype.setOptions = function(t) {
        this.options = i.extend(this.options, t)
    }, r.prototype.buildTimeline = function() {
        var t;
        this.timeline = new NextendTimeline({
            paused: !0
        });
        var e = this.options.repeatable ? this.options.startDelay : 0;
        this.timeline.addLabel("IN", e), this.linear ? this.timeline.set({}, {}, e) : (this.timeline.addPause("+=" + (.001 + e), this.promises.in.wait.bind(this.promises.in)), this.promises.in.addPauseTween(this.timeline.recent()));
        var i = new NextendTimeline;
        for (t = 0; t < this.relatedAnimations.in.length; t++) this.relatedAnimations.in[t].extendTimeline(i);
        i.totalDuration() ? (this.linear || i.eventCallback("onComplete", this.inComplete, null, this), this.inStatus = !0, this.timeline.add(i)) : (i.kill(), this.inStatus = !1), this.timeline.addLabel("ZERO", "+=0.001"), this.loop = new N2Classes.AnimationsControllerLoop(this, this.$layer), this.loopStatus = this.loop.buildTimeline(this.timeline);
        var s = new NextendTimeline;
        for (t = 0; t < this.relatedAnimations.out.length; t++) this.relatedAnimations.out[t].extendTimeline(s);
        var n = this.options.repeatable ? this.options.endDelay : 0;
        s.totalDuration() ? (this.linear ? s.set({}, {}, "+=" + n) : (this.timeline.addLabel("OUT", "+=0.001"), this.timeline.addPause("+=0.002", this.promises.out.wait.bind(this.promises.out)), this.promises.out.addPauseTween(this.timeline.recent()), s.set({}, {}, "+=" + n), s.eventCallback("onComplete", this.outComplete, null, this)), this.outStatus = !0, this.timeline.add(s)) : (s.kill(), this.outStatus = !1, this.timeline.addLabel("OUT", "+=0.001"), this.timeline.set({}, {
            onComplete: this.outComplete.bind(this)
        }, "+=" + n))
    }, r.prototype.setDevice = function(t) {
        if (this.device = t, 0 < this.relatedAnimations.setDevice.length)
            for (var e = 0; e < this.relatedAnimations.setDevice.length; e++) this.relatedAnimations.setDevice[e].setDevice(t)
    }, r.prototype.updateRatios = function(t, e) {
        if (this.horizontalRatio = t, this.verticalRatio = e, 0 < this.relatedAnimations.updateRatios.length)
            for (var i = 0; i < this.relatedAnimations.updateRatios.length; i++) this.relatedAnimations.updateRatios[i].updateRatios(t, e)
    }, r.prototype.refreshRatio = function(t, e) {
        if (this.updateRatios(t, e), this.relatedAnimations.needInvalidate) {
            var i = this.timeline.time();
            this.timeline.time(0), this.timeline.invalidate(), this.timeline.time(i, !0)
        }
    }, r.prototype.setLinear = function(t, e, i, s) {
        return this.linear = !0, this.horizontalRatio = i, this.verticalRatio = s, this.setOptions(t.animations.getData()), this.device = e, this.collectRelatedAnimations(), this.buildTimeline(), this.updateRatios(i, s), this.hasAnimation()
    }, r.prototype.resetToEditor = function() {
        this.plugins.resetToEditor(), this.$layer.triggerHandler("AnimationSetZero")
    }, r.prototype.inComplete = function() {
        this.status.set("IN_ENDED"), this.layer.setState("InComplete", !0), this.outStatus && this.targetStage !== n && (this.promises.loop.resolve(), this.promises.out.resolve(), this.status.set("OUT_WAIT"), this.timeline.seek("OUT").play()), this.$layer.triggerHandler("InComplete"), setTimeout(function() {
            this.$layer.triggerHandler("layerAnimationPlayLoop")
        }.bind(this), 1)
    }, r.prototype.loopComplete = function() {
        1 !== this.options.loopRepeatSelfOnly || this.status.is("LOOP_ENDING_FORCED") ? (this.status.set("LOOP_ENDED"), this.targetStage !== n && (this.promises[this.targetStage].resolve(), delete this.targetStage), this.$layer.triggerHandler("LoopComplete")) : (this.promises.loop.reset(), this.loop.resetForReplay(), this.status.set("IN_ENDED"), this.timeline.seek("ZERO"))
    }, r.prototype.outComplete = function() {
        this.options.repeatable && this.hasAnimation() ? this.status.set("INITIALIZED") : this.status.set("OUT_ENDED"), this.$layer.triggerHandler("OutComplete"), this.status.is("INITIALIZED") && this.repeat()
    }, r.prototype.repeat = function() {
        this.loopStatus && this.loop.resetForReplay(), this.promises.reset(), this.targetStage !== n && (this.promises[this.targetStage].resolve(), delete this.targetStage), this.timeline.seek("IN"), this.timeline.timeScale(1)
    }, r.prototype.beforeMainSwitch = function(t) {
        if (this.status.is("DISABLED") || this.status.is("INITIALIZED") || this.status.is("INITIALIZED_PLAYING") || this.status.is("OUT_ENDED")) this.status.set("DISABLED");
        else if (this.hasSpecialEvent) this.$layer.triggerHandler("OutForced");
        else {
            var e = i.Deferred();
            this.$layer.one("OutComplete", function() {
                this.$layer.off(".n2-instant-in"), this.status.set("DISABLED"), e.resolve()
            }.bind(this)), this.forcePlayOut(), t.push(e)
        }
    }, r.prototype.forcePlayOut = function() {
        this.status.isIn() ? this.$layer.one("InComplete.n2-instant-out", function() {
            this.promises.out.resolve(), this.outStatus && this.timeline.seek("OUT")
        }.bind(this)) : this.status.is("LOOP_WAIT") ? (this.promises.out.resolve(), this.timeline.play("OUT")) : this.status.isLoop() ? (this.promises.out.resolve(), this.loop.requestEnd(!0)) : this.status.is("OUT_WAIT") ? this.promises.out.resolveAndCheck() : this.status.is("OUT_PAUSED") && this.timeline.play()
    }, r.prototype.reset = function() {
        this.loop && this.loop.reset(), this.layer.setState("InComplete", !1), this.promises.reset(), this.status.suspended() && this.status.suspended(!1), this.status.set("INITIALIZED"), this.timeline.pause(0)
    }, r.prototype.suspend = function() {
        this.status.suspended() || (this.status.isPlaying() && (this.status.isLoop() && this.loop.suspend(), this.timeline.pause()), this.status.suspended(!0))
    }, r.prototype.unsuspend = function() {
        this.status.suspended() && (this.status.suspended(!1), this.status.isPlaying() && (this.status.isLoop() && this.loop.unsuspend(), this.timeline.play()))
    }, r.prototype.subscribeEvent = function(t, e) {
        for (var i = t.split(","), s = 0; s < i.length; s++)
            if (i[s].length) {
                var n = i[s].replace(/\s/g, "").split("."),
                    o = i[s];
                switch (n[0]) {
                    case "InComplete":
                    case "LoopComplete":
                    case "OutComplete":
                    case "LoopRoundComplete":
                    case "layerAnimationPlayLoop":
                    case "LayerClick":
                    case "LayerMouseEnter":
                    case "LayerMouseLeave":
                        o.match(/^Layer/) && (o = o.replace(/^Layer/, "").toLowerCase()), this.$layer.on(o, e);
                        break;
                    case "mainAnimationStartIn":
                    case "layerAnimationPlayIn":
                    case "SlideMouseEnter":
                    case "SlideMouseLeave":
                    case "SlideClick":
                        o.match(/^Slide/) && (o = o.replace(/^Slide/, "").toLowerCase()), this.slide.$element.on(o, e);
                        break;
                    case "SliderMouseEnter":
                    case "SliderMouseLeave":
                    case "SliderClick":
                        o.match(/^Slider/) && (o = o.replace(/^Slider/, "").toLowerCase()), this.slide.slider.sliderElement.on(o, function(t) {
                            this.slide.isVisibleWhen() && e()
                        }.bind(this));
                        break;
                    case "OutForced":
                        this.$layer.on(o, e);
                        break;
                    default:
                        var r = {
                            killed: !1,
                            do: 0,
                            cancel: 0
                        };
                        this.slide.$element.on("ss" + o, function(t) {
                            t.do && clearTimeout(t.do), t.do = setTimeout(function() {
                                t.killed || e(), t.killed = !1
                            }, 50)
                        }.bind(this, r)), this.slide.$element.on("sscancel-" + o, function(t) {
                            t.killed = !0, t.cancel && clearTimeout(t.cancel), t.cancel = setTimeout(function() {
                                t.killed = !1
                            }, 70)
                        }.bind(this, r))
                }
            }
    }, r.prototype.onResize = function() {
        this.plugins.onResize()
    }, o.keys = ["basic", "reveal"], o.prototype.initPlugin = function(t, e, i) {
        switch (t) {
            case "basic":
                this.basic = new N2Classes.FrontendLayerAnimationsBasic(e, i);
                break;
            case "reveal":
                this.reveal = new N2Classes.FrontendLayerAnimationsReveal(e, i)
        }
    }, o.prototype.resetToEditor = function() {
        this.basic && this.basic.resetToEditor(), this.reveal && this.reveal.resetToEditor()
    }, o.prototype.onResize = function() {
        this.basic && this.basic.onResize(), this.reveal && this.reveal.onResize()
    }, r
}), N2D("AnimationPromise", function(t, e) {
    function i(t, e) {
        this.manager = t, this.status = t.status, this.stack = e, this._done = !1, this._resolved = !1, this._forced = !1, this.pauseTween = null, this.position = null
    }
    return i.prototype.addPauseTween = function(t) {
        t.stack = this.stack, this.pauseTween = t, Object.defineProperty(this.pauseTween, "data", {
            get: function() {
                return this._resolved ? "" : "isPause"
            }.bind(this)
        }), this.position = t.startTime()
    }, i.prototype.resolve = function() {
        this._resolved = !0
    }, i.prototype.forceResolve = function() {
        this._forced = !0, this.resolve()
    }, i.prototype.resolved = function() {
        return this._resolved
    }, i.prototype.reset = function() {
        this._done = !1, this._forced || (this._resolved = !1)
    }, i.prototype.wait = function() {
        this._done || (this._done = !0, this._resolved ? (this.status.set(this.stack + "_PLAYING"), this.manager.onStageReached(this.stack)) : (this.status.set(this.stack + "_WAIT"), this.manager.timeline.seek(this.position)))
    }, i.prototype.resolveAndCheck = function() {
        this.resolve(), this._done && !this.status.suspended() && this.status.is(this.stack + "_WAIT") && (this.status.set(this.stack + "_PLAYING"), this.manager.onStageReached(this.stack), this.manager.timeline._paused && this.manager.timeline.play())
    }, i
}), N2D("AnimationsRelated", function(t, e) {
    function i(t, e) {
        this._context = t, this._extendName = e
    }
    return i.prototype.extendTimeline = function(t, e, i) {
        this._context[this._extendName].apply(this._context, arguments)
    }, i
}), N2D("AnimationStatus", function(t, e) {
    var i = {
        DISABLED: -1,
        NOT_INITIALIZED: 0,
        INITIALIZED: 1,
        INITIALIZED_PLAYING: 10,
        IN_WAIT: 100,
        IN_PLAYING: 110,
        IN_PAUSED: 120,
        IN_ENDED: 190,
        LOOP_WAIT: 200,
        LOOP_PLAYING: 210,
        LOOP_PAUSED: 220,
        LOOP_ENDING: 230,
        LOOP_ENDING_FORCED: 240,
        LOOP_ENDED: 290,
        OUT_WAIT: 300,
        OUT_PLAYING: 310,
        OUT_PAUSED: 320,
        OUT_ENDED: 390
    };

    function s() {
        this._suspended = !1, this.status = 0
    }
    return s.prototype.set = function(t) {
        this.status = i[t]
    }, s.prototype.is = function(t) {
        return this.status === i[t]
    }, s.prototype.isIn = function() {
        return 100 <= this.status && this.status < 200
    }, s.prototype.isLoop = function() {
        return 200 <= this.status && this.status < 300
    }, s.prototype.isOut = function() {
        return 300 <= this.status && this.status < 400
    }, s.prototype.isPlaying = function() {
        return this.status % 100 == 10
    }, s.prototype.suspended = function() {
        return arguments.length && (this._suspended = arguments[0]), this._suspended
    }, s
}), N2D("FrontendLayerAnimationsAbstract", function(t, e) {
    function i(t, e) {
        this.hasAnimation = !1, this.$layer = t, this.$animatableElement = e
    }
    return i.prototype.onResize = function() {}, i.prototype.resetToEditor = function() {}, i
}), N2D("FrontendLayerAnimationsBasic", "FrontendLayerAnimationsAbstract", function(l, r) {
    var n = {
        n2AutoAlpha: 1,
        x: 0,
        y: 0,
        z: 0,
        rotationX: 0,
        rotationY: 0,
        rotationZ: 0,
        scaleX: 1,
        scaleY: 1,
        skewX: 0,
        n2blur: 0
    };

    function e(t) {
        return t.split("|*|").join("% ") + "px"
    }

    function t(t, e) {
        this.device = "desktopPortrait", N2Classes.FrontendLayerAnimationsAbstract.prototype.constructor.call(this, t, e), this.isAbsolute = "absolute" === t.data("pm"), this.startValues = l.extend({}, n), this.hadImmediateRender = !1, this.horizontalRatio = this.verticalRatio = 1, this._requireUpdateRatios = !1
    }((t.prototype = Object.create(N2Classes.FrontendLayerAnimationsAbstract.prototype)).constructor = t).prototype.updateRatios = function(t, e) {
        this.horizontalRatio = t, this.verticalRatio = e
    }, t.prototype.optimizeFromTo = function(t, e, i, s, n, o) {
        this.hadImmediateRender ? n.immediateRender = !1 : this.hadImmediateRender = !0, N2Classes.FrontendLayerAnimationManager.optimizeFromTo(t, e, i, s, n, o)
    }, t.prototype.resetToEditor = function() {
        this.hasAnimation && this.setZero()
    }, t.prototype.setStartValues = function(t) {
        l.extend(this.startValues, t), delete this.startValues.duration, delete this.startValues.delay, delete this.startValues.ease
    }, t.prototype.setZero = function() {
        this.hasAnimation && NextendTween.set(this.$animatableElement, l.extend({
            clearProps: "transform,n2blur"
        }, n))
    }, t.prototype.collectRelatedAnimations = function(t, e, i) {
        if (this.device = e.device, this.animationManager = e, this.hasAnimation = !0, this.currentZero = n, this.options = { in: l.extend({
                    specialZero: 0,
                    transformOrigin: "50|*|50|*|0",
                    keyFrames: []
                }, i.in),
                loop: l.extend({
                    repeatCount: 0,
                    repeatStartDelay: 0,
                    transformOrigin: "50|*|50|*|0",
                    keyFrames: []
                }, i.loop),
                out: l.extend({
                    transformOrigin: "50|*|50|*|0",
                    keyFrames: []
                }, i.out)
            }, this._fillAnimations(this.options.in.keyFrames), this._fillAnimations(this.options.loop.keyFrames), this._fillAnimations(this.options.out.keyFrames), this.options.in.keyFrames.length && t.in.push(new N2Classes.AnimationsRelated(this, "extendTimelineIn")), this.options.loop.keyFrames.length) {
            var s = new N2Classes.AnimationsLayerLoop(this, e, this.$layer, this.$animatableElement, this.options.loop);
            t.loop.push(s)
        }
        this.options.out.keyFrames.length && t.out.push(new N2Classes.AnimationsRelated(this, "extendTimelineOut")), t.setDevice.push(this)
    }, t.prototype.setDevice = function(t) {
        this.device = t
    }, t.prototype.requireUpdateRatios = function() {
        this._requireUpdateRatios || (this._requireUpdateRatios = !0, this.animationManager.needInvalidate(), this.animationManager.relatedAnimations.updateRatios.push(this), this.updateRatios(this.animationManager.horizontalRatio, this.animationManager.verticalRatio))
    }, t.prototype._fillAnimations = function(t) {
        for (var e = 0; e < t.length; e++) t[e] = l.extend({
            duration: .8,
            delay: 0,
            ease: "easeOutCubic",
            opacity: 1,
            x: 0,
            y: 0,
            z: 0,
            rotationX: 0,
            rotationY: 0,
            rotationZ: 0,
            scaleX: 1,
            scaleY: 1,
            skewX: 0,
            n2blur: 0
        }, t[e])
    };
    var a = ["desktopLandscape", "desktopPortrait", "tabletLandscape", "tabletPortrait", "mobileLandscape", "mobilePortrait"];
    return t.prototype.prepareDeviceSpecific = function(t, e) {
        this.prepareDeviceSpecificProp("x", t, e), this.prepareDeviceSpecificProp("y", t, e), delete t.desktopLandscape, delete t.tabletLandscape, delete t.tabletPortrait, delete t.mobileLandscape, delete t.mobilePortrait
    }, t.prototype.prepareDeviceSpecificProp = function(t, e, i) {
        var s, n = {
                desktopPortrait: e[t] * i
            },
            o = !1;
        for (s = 0; s < a.length; s++) e[a[s]] && e[a[s]][t] !== r && (n[a[s]] = e[a[s]][t] * i, o = !0);
        this.isAbsolute ? (this.requireUpdateRatios(), o ? (this.animationManager.needInvalidate(), e[t] = function(t) {
            return t[this.device] === r ? t.desktopPortrait * this.horizontalRatio : t[this.device] * this.horizontalRatio
        }.bind(this, n)) : e[t] = function(t) {
            return t * this.horizontalRatio
        }.bind(this, n.desktopPortrait)) : o ? (this.animationManager.needInvalidate(), e[t] = function(t) {
            return t[this.device] === r ? t.desktopPortrait : t[this.device]
        }.bind(this, n)) : e[t] = n.desktopPortrait
    }, t.prototype.extendTimelineIn = function(t) {
        NextendTween.set(this.$animatableElement, {
            transformOrigin: e(this.options.in.transformOrigin)
        }), this.buildTimelineIn(t, this.options.in.keyFrames)
    }, t.prototype.setCurrentZero = function() {
        var t = l.extend({}, this.currentZero);
        delete t.delay, delete t.duration, NextendTween.set(this.$animatableElement, t)
    }, t.prototype.buildTimelineIn = function(t, e) {
        var i = 0;
        if (e = l.extend(!0, [], e), this.options.in.specialZero && 0 < e.length && (this.currentZero = e.pop(), delete this.currentZero.name, delete this.currentZero.duration, delete this.currentZero.delay, delete this.currentZero.ease, this.prepareDeviceSpecific(this.currentZero, 1), this.currentZero.rotationX = -this.currentZero.rotationX, this.currentZero.rotationY = -this.currentZero.rotationY, this.currentZero.rotationZ = -this.currentZero.rotationZ, this.setCurrentZero(), this.setStartValues(this.currentZero)), 0 < e.length) {
            var s = this._buildAnimationChainIn(e);
            if (0 < s.length)
                for (var n = 0; n < s.length; n++) this.optimizeFromTo(t, this.$animatableElement, s[n].duration, s[n].from, s[n].to, i), i += s[n].duration + s[n].to.delay;
            this.setStartValues(s[0].from)
        }
    }, t.prototype._buildAnimationChainIn = function(t) {
        for (var e = [{
                from: this.currentZero
            }], i = t.length - 1; 0 <= i; i--) {
            var s = l.extend(!0, {}, t[i]),
                n = s.delay,
                o = s.duration,
                r = s.ease;
            delete s.delay, delete s.duration, delete s.ease, delete s.name, this.prepareDeviceSpecific(s, -1);
            var a = e[0].from;
            s.z = -s.z, s.rotationX = -s.rotationX, s.rotationY = -s.rotationY, s.rotationZ = -s.rotationZ, e.unshift({
                duration: o,
                from: s,
                to: l.extend({}, a, {
                    ease: r,
                    delay: n
                })
            })
        }
        return e.pop(), e
    }, t.prototype.extendTimelineOut = function(t) {
        t.set(this.$animatableElement, {
            transformOrigin: e(this.options.out.transformOrigin),
            immediateRender: !1
        }), this.buildTimelineOut(t, this.options.out.keyFrames)
    }, t.prototype.buildTimelineOut = function(t, e) {
        var i = 0;
        e = l.extend(!0, [], e);
        var s = this._buildAnimationChainOut(e);
        if (0 < s.length)
            for (var n = 0; n < s.length; n++) this.optimizeFromTo(t, this.$animatableElement, s[n].duration, s[n].from, s[n].to, i), i += s[n].duration + s[n].to.delay
    }, t.prototype._buildAnimationChainOut = function(t) {
        for (var e = [{
                to: this.currentZero
            }], i = 0; i < t.length; i++) {
            var s = l.extend(!0, {}, t[i]),
                n = s.duration;
            delete s.duration, delete s.name;
            var o = l.extend({}, e[e.length - 1].to);
            delete o.delay, delete o.ease, this.prepareDeviceSpecific(s, 1), e.push({
                duration: n,
                from: o,
                to: s
            })
        }
        return e.shift(), e
    }, t
}), N2D("FrontendLayerAnimationsReveal", "FrontendLayerAnimationsAbstract", function(i, s) {
    var n = {
        from: "top",
        fromease: "easeOutCubic",
        to: "bottom",
        toease: "easeOutCubic",
        content: "",
        duration: 2,
        delay: 0,
        color: "ffffff"
    };

    function t(t, e) {
        N2Classes.FrontendLayerAnimationsAbstract.prototype.constructor.call(this, t, e)
    }
    return ((t.prototype = Object.create(N2Classes.FrontendLayerAnimationsAbstract.prototype)).constructor = t).prototype.resetToEditor = function() {
        this.hasAnimation && (this.in || this.out) && (this._destroyGroup("in"), this._destroyGroup("out"), NextendTween.set(this.$revealedElements, {
            clearProps: "transform, opacity"
        }), this.$revealedElements.removeAttr("data-force-hidden"))
    }, t.prototype.setZero = function() {
        this.hasAnimation && (this.in || this.out) && (this.in && this.in.$clip.css("visibility", "hidden"), this.out && this.out.$clip.css("visibility", "hidden"), NextendTween.set(this.$revealedElements, {
            clearProps: "transform, opacity"
        }), this.$revealedElements.removeAttr("data-force-hidden"))
    }, t.prototype.collectRelatedAnimations = function(t, e, i) {
        this.animationManager = e, this.in = !1, this.out = !1, i.in === s && i.out === s || (this.hasAnimation = !0, this.$revealedElements = this.$animatableElement.find(".n2-ss-layer-content,.n2-ss-layer-row,.n2-ss-item,.n2-ss-item-content").eq(0), i.in !== s && (this.in = this._initGroup("in", i), t.in.push(new N2Classes.AnimationsRelated(this, "extendTimelineIn"))), i.out !== s && (this.out = this._initGroup("out", i), t.out.push(new N2Classes.AnimationsRelated(this, "extendTimelineOut"))))
    }, t.prototype._initGroup = function(t, e) {
        return {
            $revealedElements: this.$revealedElements,
            options: i.extend({}, n, e[t]),
            $clip: i('<div class="n2-ss-reveal-clip"></div>').appendTo(this.$animatableElement)
        }
    }, t.prototype._destroyGroup = function(t) {
        this[t] && (this[t].$clip.remove(), delete this[t])
    }, t.prototype.extendTimelineIn = function(t, e, i) {
        N2Classes.FrontendLayerAnimationsRevealAnimation.in(t, this.in)
    }, t.prototype.extendTimelineOut = function(t, e, i) {
        N2Classes.FrontendLayerAnimationsRevealAnimation.out(t, this.out)
    }, t.prototype.onResize = function() {
        this.in && this.in.$clip.triggerHandler("RevealInternalResize"), this.out && this.out.$clip.triggerHandler("RevealInternalResize")
    }, t
}), N2D("FrontendLayerAnimationsRevealAnimation", function(a, d) {
    function c(t, e, i, s) {
        switch (t) {
            case "curtains-horizontal":
                var n = (o = a("<div></div>").css({
                    width: "50%",
                    background: "#" + i
                }).appendTo(e)).clone().css("left", "50%").appendTo(e);
                return o = o.add(n);
            case "curtains-vertical":
                n = (o = a("<div></div>").css({
                    height: "50%",
                    background: "#" + i
                }).appendTo(e)).clone().css("top", "50%").appendTo(e);
                return o = o.add(n);
            case "curtains-diagonal-1":
                return a('<svg width="32" height="32" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none"><polygon points="0,0 33,0 0,33" /><polygon points="32,32 32,-1 -1,32" /></svg>').appendTo(e).find("polygon").attr("fill", "#" + i);
            case "curtains-diagonal-2":
                return a('<svg width="32" height="32" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none"><polygon points="0,32 33,32 0,-1" /><polygon points="32,0 32,33 -1,0" /></svg>').appendTo(e).find("polygon").attr("fill", "#" + i);
            case "circle-top":
            case "circle-right":
            case "circle-bottom":
            case "circle-left":
                var o = a("<div></div>").css({
                        borderRadius: "100%",
                        background: "#" + i
                    }).appendTo(e),
                    r = function(t, e, i) {
                        var s;
                        switch (e) {
                            case "circle-top":
                            case "circle-bottom":
                                s = 2 * Math.ceil(Math.sqrt(i.width * i.width / 4 + i.height * i.height));
                                break;
                            case "circle-right":
                            case "circle-left":
                                s = 2 * Math.ceil(Math.sqrt(i.width * i.width + i.height * i.height / 4))
                        }
                        t.css({
                            marginTop: -s / 2 + "px",
                            marginLeft: -s / 2 + "px",
                            width: s + "px",
                            height: s + "px"
                        })
                    }.bind(this, o, t);
                switch (r(s), e.on("RevealInternalResize", function(t, e) {
                    e(t[0].getBoundingClientRect())
                }.bind(this, e, r)), t) {
                    case "circle-top":
                        o.css({
                            left: "50%"
                        });
                        break;
                    case "circle-right":
                        o.css({
                            left: "100%",
                            top: "50%"
                        });
                        break;
                    case "circle-bottom":
                        o.css({
                            left: "50%",
                            top: "100%"
                        });
                        break;
                    case "circle-left":
                        o.css({
                            top: "50%"
                        })
                }
                return o
        }
        return a("<div></div>").css({
            background: "#" + i
        }).appendTo(e)
    }

    function p(t, e, i, s, n, o) {
        var r = h(n, o),
            a = t.totalDuration();
        r.length === d && (r = [r]);
        for (var l = 0; l < r.length; l++) r[l].b.ease = s, t.fromTo(e.eq(l), i, r[l].a, r[l].b, a)
    }

    function u(t, e, i, s, n, o, r) {
        var a = h(o, r);
        a.length === d && (a = [a]);
        for (var l = 0; l < a.length; l++) a[l].a.ease = n, t.fromTo(e.eq(l), i, a[l].b, a[l].a, s)
    }

    function m(t, e) {
        var i = {},
            s = {};
        switch (t) {
            case "fade":
                i = {
                    n2AutoAlpha: 0
                }, s = {
                    n2AutoAlpha: 1
                };
                break;
            case "scale-up":
                i = {
                    scale: .7
                }, s = {
                    scale: 1
                };
                break;
            case "scale-down":
                i = {
                    scale: 1.3
                }, s = {
                    scale: 1
                };
                break;
            case "top":
                i = {
                    y: "-100.1%"
                }, s = {
                    y: "0%"
                };
                break;
            case "right":
                i = {
                    x: "100.1%"
                }, s = {
                    x: "0%"
                };
                break;
            case "bottom":
                i = {
                    y: "100.1%"
                }, s = {
                    y: "0%"
                };
                break;
            case "left":
                i = {
                    x: "-100.1%"
                }, s = {
                    x: "0%"
                };
                break;
            default:
                return !1
        }
        return "out" === e ? {
            from: s,
            to: i
        } : {
            from: i,
            to: s
        }
    }
    var h = function(t, e) {
        var i, s;
        switch (t) {
            case "top":
                return {
                    a: {
                        y: "-100.1%"
                    },
                    b: {
                        y: "0%"
                    }
                };
            case "right":
                return {
                    a: {
                        x: "100.1%"
                    },
                    b: {
                        x: "0%"
                    }
                };
            case "bottom":
                return {
                    a: {
                        y: "100.1%"
                    },
                    b: {
                        y: "0%"
                    }
                };
            case "left":
                return {
                    a: {
                        x: "-100.1%"
                    },
                    b: {
                        x: "0%"
                    }
                };
            case "skew-top":
                return i = 20, s = Math.cos((90 - i) * Math.PI / 180) * e.width, {
                    a: {
                        y: -1 * (e.height + s),
                        skewY: -i + "deg",
                        skewType: "simple"
                    },
                    b: {
                        y: 0,
                        skewY: "0deg"
                    }
                };
            case "skew-right":
                return i = 20, s = Math.cos((90 - i) * Math.PI / 180) * e.height, {
                    a: {
                        x: e.width + s,
                        skewX: -i + "deg",
                        skewType: "simple"
                    },
                    b: {
                        x: 0,
                        skewX: "0deg"
                    }
                };
            case "skew-bottom":
                return i = 20, s = Math.cos((90 - i) * Math.PI / 180) * e.width, {
                    a: {
                        y: e.height + s,
                        skewY: i + "deg",
                        skewType: "simple"
                    },
                    b: {
                        y: 0,
                        skewY: "0deg"
                    }
                };
            case "skew-left":
                return i = 20, s = Math.cos((90 - i) * Math.PI / 180) * e.height, {
                    a: {
                        x: -1 * (e.width + s),
                        skewX: i + "deg",
                        skewType: "simple"
                    },
                    b: {
                        x: 0,
                        skewX: "0deg"
                    }
                };
            case "rotate-top-left":
                return {
                    a: {
                        rotationZ: "-90deg",
                        transformOrigin: "0 0"
                    },
                    b: {
                        rotationZ: 0
                    }
                };
            case "rotate-top-left-":
                return {
                    a: {
                        rotationZ: "90deg",
                        transformOrigin: "0 0"
                    },
                    b: {
                        rotationZ: 0
                    }
                };
            case "rotate-top-right":
                return {
                    a: {
                        rotationZ: "90deg",
                        transformOrigin: "100% 0"
                    },
                    b: {
                        rotationZ: 0
                    }
                };
            case "rotate-top-right-":
                return {
                    a: {
                        rotationZ: "-90deg",
                        transformOrigin: "100% 0"
                    },
                    b: {
                        rotationZ: 0
                    }
                };
            case "rotate-bottom-left":
                return {
                    a: {
                        rotationZ: "90deg",
                        transformOrigin: "0 100%"
                    },
                    b: {
                        rotationZ: 0
                    }
                };
            case "rotate-bottom-left-":
                return {
                    a: {
                        rotationZ: "-90deg",
                        transformOrigin: "0 100%"
                    },
                    b: {
                        rotationZ: 0
                    }
                };
            case "rotate-bottom-right":
                return {
                    a: {
                        rotationZ: "-90deg",
                        transformOrigin: "100% 100%"
                    },
                    b: {
                        rotationZ: 0
                    }
                };
            case "rotate-bottom-right-":
                return {
                    a: {
                        rotationZ: "90deg",
                        transformOrigin: "100% 100%"
                    },
                    b: {
                        rotationZ: 0
                    }
                };
            case "circle-top":
                return {
                    a: {
                        scale: 0,
                        transformOrigin: "50% 50%",
                        y: "-5%"
                    },
                    b: {
                        y: "0%",
                        scale: 1
                    }
                };
            case "circle-right":
                return {
                    a: {
                        scale: 0,
                        transformOrigin: "50% 50%",
                        x: "5%"
                    },
                    b: {
                        x: "0%",
                        scale: 1
                    }
                };
            case "circle-bottom":
                return {
                    a: {
                        scale: 0,
                        transformOrigin: "50% 50%",
                        y: "5%"
                    },
                    b: {
                        y: "0%",
                        scale: 1
                    }
                };
            case "circle-left":
                return {
                    a: {
                        scale: 0,
                        transformOrigin: "50% 50%",
                        x: "-5%"
                    },
                    b: {
                        x: "0%",
                        scale: 1
                    }
                };
            case "curtains-horizontal":
                return [{
                    a: {
                        x: "-100%"
                    },
                    b: {
                        x: "0%"
                    }
                }, {
                    a: {
                        x: "100%"
                    },
                    b: {
                        x: "0%"
                    }
                }];
            case "curtains-vertical":
                return [{
                    a: {
                        y: "-100%"
                    },
                    b: {
                        y: "0%"
                    }
                }, {
                    a: {
                        y: "100%"
                    },
                    b: {
                        y: "0%"
                    }
                }];
            case "curtains-diagonal-1":
            case "curtains-diagonal-2":
                return [{
                    a: {
                        x: "-100%"
                    },
                    b: {
                        x: "0%"
                    }
                }, {
                    a: {
                        x: "100%"
                    },
                    b: {
                        x: "0%"
                    }
                }]
        }
    };
    return { in: function(t, e) {
            "no" !== e.options.from && t.fromTo(e.$revealedElements, 1e-8, {
                n2AutoAlpha: 0
            }, {
                n2AutoAlpha: 0
            }, 0);
            var i = new NextendTimeline,
                s = "no" === e.options.from ? 1 : 2,
                n = e.options.duration / s;
            t.add(i), t.set(e.$clip, {
                visibility: "visible"
            }, 0);
            var o = e.$clip[0].getBoundingClientRect(),
                r = c(e.options.from, e.$clip, e.options.color, o),
                a = c(e.options.to, e.$clip, e.options.color, o);
            r.css("display", "none"), i.set({}, {}, e.options.delay), "no" !== e.options.from ? (a.css("display", "none"), i.set(r, {
                display: "block"
            }), p(i, r, n, e.options.fromease, e.options.from, o), i.set(r, {
                display: "none"
            }), i.set(a, {
                display: "block"
            })) : e.$clip.css("visibility", "visible");
            var l = i.totalDuration(),
                h = m(e.options.content, "in");
            h ? (h.from.n2AutoAlpha === d && i.set(e.$revealedElements, {
                n2AutoAlpha: 1
            }), h.to.ease = "easeOutCubic", i.fromTo(e.$revealedElements, n, h.from, h.to)) : i.set(e.$revealedElements, {
                n2AutoAlpha: 1
            }), u(i, a, n, l, e.options.toease, e.options.to, o), i.set(a, {
                display: "none"
            }), i.set(e.$clip, {
                visibility: "hidden"
            })
        },
        out: function(t, e) {
            var i = new NextendTimeline,
                s = "no" === e.options.to ? 1 : 2,
                n = e.options.duration / s;
            t.add(i), t.set(e.$clip, {
                visibility: "visible"
            }, 0);
            var o = e.$clip[0].getBoundingClientRect(),
                r = c(e.options.from, e.$clip, e.options.color, o),
                a = c(e.options.to, e.$clip, e.options.color, o);
            r.css("display", "none"), a.css("display", "none"), i.set({}, {}, e.options.delay), i.set(r, {
                display: "block"
            }), p(i, r, n, e.options.fromease, e.options.from, o), i.set(r, {
                display: "none"
            });
            var l = i.totalDuration(),
                h = m(e.options.content, "out");
            h ? (h.from.n2AutoAlpha === d && i.set(e.$revealedElements, {
                n2AutoAlpha: 0
            }), h.to.ease = "easeOutCubic", i.fromTo(e.$revealedElements, n, h.from, h.to, l - n)) : i.set(e.$revealedElements, {
                n2AutoAlpha: 0
            }), l = i.totalDuration(), i.set(a, {
                display: "block"
            }, l), u(i, a, n, l, e.options.toease, e.options.to, o), i.set(a, {
                display: "none"
            }), i.set(e.$clip, {
                visibility: "hidden"
            })
        }
    }
}), N2D("AnimationsControllerLoop", "FrontendLayerAnimationManager", function(t, e) {
    function i(t, e) {
        this.animationManager = t, this.status = this.animationManager.status, this.$layer = e
    }
    return i.prototype.reset = function() {
        for (var t = 0; t < this.animations.length; t++) this.animations[t].reset()
    }, i.prototype.play = function() {
        if (!this.status.suspended() && this.status.is("LOOP_PLAYING"))
            for (var t = 0; t < this.animations.length; t++) this.animations[t].play()
    }, i.prototype.resume = function() {
        for (var t = 0; t < this.animations.length; t++) this.animations[t].resume();
        this.status.set("LOOP_PLAYING")
    }, i.prototype.pause = function() {
        if (!this.status.suspended() && this.status.is("LOOP_PLAYING")) {
            for (var t = 0; t < this.animations.length; t++) this.animations[t].pause();
            this.status.set("LOOP_PAUSED")
        }
    }, i.prototype.suspend = function() {
        if (!this.status.suspended() && this.status.is("LOOP_PLAYING"))
            for (var t = 1; t < this.animations.length; t++) this.animations[t].suspend()
    }, i.prototype.unsuspend = function() {
        if (!this.status.suspended() && this.status.is("LOOP_PLAYING"))
            for (var t = 1; t < this.animations.length; t++) this.animations[t].unsuspend()
    }, i.prototype.requestEnd = function(t) {
        if (!this.status.suspended() && (this.status.is("LOOP_PLAYING") || this.status.is("LOOP_PAUSED"))) {
            for (var e = 0; e < this.animations.length; e++) this.animations[e].requestEnd();
            t ? this.status.set("LOOP_ENDING_FORCED") : this.status.set("LOOP_ENDING")
        }
    }, i.prototype.markSingleAnimationEnded = function() {
        for (var t = 0; t < this.animations.length; t++)
            if (!this.animations[t].isEnded()) return;
        this.ended()
    }, i.prototype.ended = function() {
        this.animationManager.loopComplete()
    }, i.prototype.resetForReplay = function() {
        for (var t = 0; t < this.animations.length; t++) this.animations[t].resetForReplay()
    }, i.prototype.invalidate = function() {
        for (var t = 1; t < this.animations.length; t++) this.animations[t].invalidate()
    }, i.prototype.buildTimeline = function(t) {
        this.animations = [];
        for (var e = 0; e < this.animationManager.relatedAnimations.loop.length; e++) this.animationManager.relatedAnimations.loop[e].setController(this, e), this.animations.push(this.animationManager.relatedAnimations.loop[e]);
        if (0 < this.animations.length) {
            this.animationManager.linear || (t.addPause("+=0.002", this.animationManager.promises.loop.wait.bind(this.animationManager.promises.loop)), this.animationManager.promises.loop.addPauseTween(t.recent()));
            var i = t.totalDuration();
            this.animations[0].buildTimeline(t, i);
            for (e = 1; e < this.animations.length; e++) this.animations[e].buildTimeline(!!this.animationManager.linear && t, this.animationManager.linear ? i : 0)
        }
        return this.animations.length
    }, i
}), N2D("AnimationsLayerLoop", ["AnimationsLoopAbstract"], function(l, t) {
    function e(t, e, i, s, n) {
        this.layerAnimations = t, this.animationManager = e, this.$layer = i, this.$animatableElement = s, this.animationData = n.keyFrames, this.transformOrigin = n.transformOrigin.split("|*|").join("% ") + "px", this.repeatCount = n.repeatCount, this.repeatStartDelay = Math.max(0, n.repeatStartDelay), this.single = !1, N2Classes.AnimationsLoopAbstract.prototype.constructor.call(this, parseInt(this.repeatCount))
    }
    return ((e.prototype = Object.create(N2Classes.AnimationsLoopAbstract.prototype)).constructor = e).prototype.playLoopAgain = function() {
        N2Classes.AnimationsLoopAbstract.prototype.playLoopAgain.call(this), this.$layer.triggerHandler("LoopRoundComplete")
    }, e.prototype.buildTimeline = function(t, e) {
        var i = this.animationManager.linear ? "linear" : "event";
        this.timeline = t || new NextendTimeline({
            paused: !0
        }), e += .001, this.timeline.set(this.$animatableElement, {
            transformOrigin: this.transformOrigin,
            immediateRender: !1
        }, e), 0 < this.repeatStartDelay && (e += this.repeatStartDelay, this.timeline.set({}, {}, e)), this.buildTimelineLoop(e, i, l.extend(!0, [], this.animationData)), this.animationManager.linear || this.timeline.set({}, {
            onComplete: this.onComplete.bind(this)
        })
    }, e.prototype.buildTimelineLoop = function(t, e, i) {
        var s = this._buildAnimationChainLoop(i);
        if (this.zero = l.extend(!0, {
                ease: s[0].to.ease
            }, s[0]), !this.single) {
            var n = this.zero.duration / 2;
            N2Classes.FrontendLayerAnimationManager.optimizeFromTo(this.timeline, this.$animatableElement, n, l.extend({}, this.layerAnimations.currentZero), l.extend({
                immediateRender: !1,
                ease: this.zero.ease
            }, this.zero.from), t), t += n
        }
        if ("linear" === e) {
            var o = this.repeatCount;
            o < 1 && (o = 1);
            for (var r = 0; r < o; r++)
                for (var a = 0; a < s.length; a++) N2Classes.FrontendLayerAnimationManager.optimizeFromTo(this.timeline, this.$animatableElement, s[a].duration, l.extend({}, s[a].from), l.extend({
                    immediateRender: !1
                }, s[a].to), t), t += s[a].duration
        } else if ("event" === e) {
            this.timeline.addLabel("LOOP", t);
            for (a = 0; a < s.length; a++) s[a].to.immediateRender = !1, N2Classes.FrontendLayerAnimationManager.optimizeFromTo(this.timeline, this.$animatableElement, s[a].duration, s[a].from, s[a].to, t), t += s[a].duration;
            this.timeline.set({}, {
                onComplete: this.repeat.bind(this)
            }, t)
        }
        this.single || N2Classes.FrontendLayerAnimationManager.optimizeFromTo(this.timeline, this.$animatableElement, this.zero.duration / 2, l.extend({}, this.zero.from), l.extend({
            immediateRender: !1,
            ease: this.zero.ease
        }, this.layerAnimations.currentZero), t)
    }, e.prototype._buildAnimationChainLoop = function(t) {
        if (1 === t.length) {
            this.single = !0;
            var e = l.extend(!0, {}, t[0]);
            (n = l.extend({}, this.layerAnimations.currentZero)).duration = e.duration, n.ease = e.ease, 360 !== Math.abs(e.rotationX) && 360 !== Math.abs(e.rotationY) && 360 !== Math.abs(e.rotationZ) || 1 != e.opacity || 0 != e.x || 0 != e.y || 0 != e.z || 1 != e.scaleX || 1 != e.scaleY || 0 != e.skewX || 0 != e.n2blur ? t.push(n) : (360 == +e.rotationX ? e.rotationX = "+=360" : -360 == +e.rotationX && (e.rotationX = "-=360"), 360 == +e.rotationY ? e.rotationY = "+=360" : -360 == +e.rotationY && (e.rotationY = "-=360"), 360 == +e.rotationZ ? e.rotationZ = "+=360" : -360 == +e.rotationZ && (e.rotationZ = "-=360"))
        }
        var i = 0;
        delete t[i].name, this.layerAnimations.prepareDeviceSpecific(t[i], 1);
        var s = [{
            duration: t[i].duration,
            from: l.extend({}, this.layerAnimations.currentZero),
            to: t[i]
        }];
        for (i++; i < t.length; i++) {
            var n, o = (n = t[i]).duration;
            delete n.duration, delete n.name;
            var r = l.extend({}, s[s.length - 1].to);
            delete r.delay, delete r.ease, this.layerAnimations.prepareDeviceSpecific(t[i], 1), s.push({
                duration: o,
                from: r,
                to: n
            })
        }
        return this.single || (s.push({
            duration: s[0].duration,
            from: l.extend({}, s[s.length - 1].to),
            to: l.extend({}, s[0].to)
        }), s.shift(), delete s[0].from.duration), s
    }, e
}), N2D("AnimationsLoopTimeline", ["AnimationsLoopAbstract"], function(t, e) {
    N2Classes.AnimationsLoopAbstract.status;

    function i(t, e) {
        this.manager = t, N2Classes.AnimationsLoopAbstract.prototype.constructor.call(this, e)
    }
    return ((i.prototype = Object.create(N2Classes.AnimationsLoopAbstract.prototype)).constructor = i).prototype.buildTimeline = function(t, e) {
        this.timeline = t || new NextendTimeline({
            paused: !0
        }), this.controller.animationManager.linear ? this.repeatCount = 0 : this.timeline.addLabel("LOOP", e);
        var i = this.manager.getLoopTimeline();
        this.timeline.add(i.paused(0), e), this.controller.animationManager.linear || i.eventCallback("onComplete", function() {
            this.repeat() || this.onComplete()
        }, null, this)
    }, i.prototype.invalidate = function() {
        var t = this.timeline.time();
        this.timeline.invalidate().time(t, !0)
    }, i
}), N2D("AnimationsLoopAbstract", function(t, e) {
    function i(t) {
        this.controller = null, this.ending = !1, this.ended = !1, this._counter = 0, this.repeatCount = t, this.timeline = null
    }
    return i.prototype.setController = function(t, e) {
        this.controller = t, this.index = e
    }, i.prototype.repeat = function() {
        return this._counter++, !!(this.isInfinite() && !1 === this.ending || this._counter < this.repeatCount) && (this.playLoopAgain(), !0)
    }, i.prototype.playLoopAgain = function() {
        this.timeline.seek("LOOP")
    }, i.prototype.resetCounter = function() {
        this._counter = 0
    }, i.prototype.isInfinite = function() {
        return 0 === this.repeatCount
    }, i.prototype.buildTimeline = function(t, e) {}, i.prototype.refresh = function() {}, i.prototype.reset = function() {
        this.resetForReplay(), 0 < this.index && this.timeline.pause(0)
    }, i.prototype.resetForReplay = function() {
        this.ending = !1, this.ended = !1, this.resetCounter()
    }, i.prototype.play = function() {
        0 < this.index && this.timeline.restart(!0)
    }, i.prototype.pause = function() {
        this.timeline.pause()
    }, i.prototype.resume = function() {
        this.timeline.play()
    }, i.prototype.suspend = function() {
        this.timeline.pause()
    }, i.prototype.unsuspend = function() {
        this.timeline.play()
    }, i.prototype.onComplete = function() {
        this.ended = !0, this.controller.markSingleAnimationEnded()
    }, i.prototype.isEnded = function() {
        return this.ended
    }, i.prototype.requestEnd = function() {
        this.ended || this.ending || (this.ending = !0, this.timeline.play())
    }, i
}), N2D("SmartSliderResponsive", function(p, t) {
    function u(t, e) {
        this.state = {
            StarterSlide: !1
        }, this.isResetActiveSlideEarly = this.isResetActiveSlideEarly || !1, this.disableTransitions = !1, this.disableTransitionsTimeout = null, this.lastClientHeight = 0, this.lastClientHeightTime = 0, this.isLandscape = !1, this.pixelSnappingFraction = 0, this.focusOffsetTop = 0, this.focusOffsetBottom = 0, this.fullPageMinimumSliderHeight = 0, this.minimumSlideHeight = 0, this.isFullScreen = !1, this.visibleRealSlidesChanged = !0, this.filters = {
            SliderWidth: [],
            SliderHeight: [],
            SlideHeight: [],
            SliderVerticalCSS: []
        }, this.parameters = p.extend({
            hideOn: {
                desktopLandscape: 0,
                desktopPortrait: 0,
                tabletLandscape: 0,
                tabletPortrait: 0,
                mobileLandscape: 0,
                mobilePortrait: 0
            },
            onResizeEnabled: !0,
            type: "auto",
            downscale: !0,
            upscale: !1,
            constrainRatio: !0,
            minimumHeight: 0,
            maximumSlideWidth: {
                ratio: -1,
                desktopLandscape: 0,
                desktopPortrait: 0,
                tabletLandscape: 0,
                tabletPortrait: 0,
                mobileLandscape: 0,
                mobilePortrait: 0
            },
            forceFull: 0,
            forceFullOverflowX: "body",
            forceFullHorizontalSelector: "",
            sliderHeightBasedOn: "real",
            decreaseSliderHeight: 0,
            focusUser: 1,
            focusEdge: "auto",
            enabledDevices: {
                desktopLandscape: 1,
                desktopPortrait: 0,
                mobileLandscape: 0,
                mobilePortrait: 0,
                tabletLandscape: 0,
                tabletPortrait: 0
            },
            breakpoints: [],
            sizes: {
                desktopPortrait: {
                    width: 1200,
                    height: 600,
                    max: 1e4,
                    min: 40
                }
            },
            normalizedDeviceModes: {
                unknown: "unknown",
                desktopPortrait: "desktopPortrait"
            },
            ratioToDevice: {
                Portrait: {
                    tablet: 0,
                    mobile: 0
                },
                Landscape: {
                    tablet: 0,
                    mobile: 0
                }
            },
            overflowHiddenPage: 0,
            focus: {
                offsetTop: "",
                offsetBottom: ""
            }
        }, e), this.parameters.hideOn = window.ssOverrideHideOn || this.parameters.hideOn, this.doThrottledResize = NextendThrottle(this.doResize.bind(this), 50), this.slider = t, this.sliderElement = t.sliderElement, this.addFilter("SliderWidth", this.filterSliderWidthHorizontalSpacing.bind(this)), this.slider.parameters.dynamicHeight && this.slider.stages.done("BeforeShow", function() {
            this.doResize()
        }.bind(this)), this.slider.isAdmin || "fullpage" !== this.parameters.type || this.slider.stages.done("WidgetsReady", function() {
            var t = this.getVerticalOffsetHeight();
            this._lastVerticalOffsetHeight !== t && this.doResize()
        }.bind(this))
    }
    return u.DeviceMode = {
        unknown: 0,
        desktopLandscape: 1,
        desktopPortrait: 2,
        tabletLandscape: 3,
        tabletPortrait: 4,
        mobileLandscape: 5,
        mobilePortrait: 6
    }, u._DeviceMode = {
        0: "unknown",
        1: "desktopLandscape",
        2: "desktopPortrait",
        3: "tabletLandscape",
        4: "tabletPortrait",
        5: "mobileLandscape",
        6: "mobilePortrait"
    }, u._DeviceGroup = {
        desktopLandscape: "desktop",
        desktopPortrait: "desktop",
        tabletLandscape: "tablet",
        tabletPortrait: "tablet",
        mobileLandscape: "mobile",
        mobilePortrait: "mobile"
    }, u.prototype.setDeviceID = function(t) {
        this.deviceID = t, this.device = u._DeviceMode[t]
    }, u.prototype.start = function() {
        if (this.slider.stages.done("ResizeFirst", function() {
                nextend.fontsDeferred === t ? (this.slider.stages.resolve("Fonts"), this.slider.stages.resolved("windowLoad") || N2R("windowLoad", function() {
                    this.doResize()
                }.bind(this))) : nextend.fontsDeferred.always(function() {
                    this.slider.stages.resolve("Fonts")
                }.bind(this))
            }.bind(this)), this.normalizeTimeout = null, this.delayedResizeAdded = !1, this.setDeviceID(u.DeviceMode.unknown), this.ratios = {
                slideW: 1,
                slideH: 1
            }, this.horizontalSpacingControls = {
                right: [],
                left: []
            }, this.horizontalSpacing = {
                right: 0,
                left: 0
            }, this.staticSizes = {
                paddingTop: 0,
                paddingRight: 0,
                paddingBottom: 0,
                paddingLeft: 0
            }, this.alignElement = this.slider.sliderElement.closest(".n2-ss-align"), this.$section = this.alignElement.closest(".n2-section-smartslider"), "fullpage" === this.parameters.type && "100vh" === this.parameters.sliderHeightBasedOn && (this.$viewportHeight = p('<div style="height:100vh;width:0;position:absolute;bottom:0;visibility:hidden;"></div>').appendTo("body")), this.containerElementPadding = this.sliderElement.parent(), this.containerElement = this.containerElementPadding.parent(), !this.slider.isAdmin && this.parameters.overflowHiddenPage && p("html, body").css("overflow", "hidden"), nextend.smallestZoom = 320, this.slider.stages.resolve("ResponsiveStart"), this.init(), this.onResize(), p(window).on("SliderContentResize", function(t) {
                this.onResize(t)
            }.bind(this)), this.parameters.onResizeEnabled)
            if (p(window).on({
                    resize: this.onResize.bind(this),
                    orientationchange: this.onResize.bind(this)
                }), window.ResizeObserver !== t) {
                var e = 0;
                new ResizeObserver(function(t) {
                    t.forEach(function(t) {
                        e !== t.contentRect.width && (e = t.contentRect.width, this.internalResize())
                    }.bind(this))
                }.bind(this)).observe(this.containerElement.parent().get(0))
            } else try {
                p('<iframe class="bt_skip_resize intrinsic-ignore" title="Resize helper" sandbox="allow-same-origin allow-scripts" style="margin:0 !important;padding:0;border:0;display:block;width:100%;height:0;min-height:0 !important;max-height:0;"></iframe>').on("load", function(t) {
                    var i = 0,
                        s = p(t.target.contentWindow ? t.target.contentWindow : t.target.contentDocument.defaultView).on("resize", function(t) {
                            var e = s.width();
                            i !== e && (i = e, this.internalResize())
                        }.bind(this));
                    s[0].document.getElementsByTagName("HTML")[0].setAttribute("lang", window.document.getElementsByTagName("HTML")[0].getAttribute("lang"))
                }.bind(this)).insertBefore(this.containerElement)
            } catch (t) {}
    }, u.prototype.internalResize = function() {
        this.onResize()
    }, u.prototype.getMinimumContentHeight = function() {
        var t, e, i = this.slider.visibleRealSlides,
            s = 0;
        for (t = 0; t < this.slider.visibleRealSlides.length; t++) i[t].$layer.addClass("n2-ss-layer--height-calc");
        for (t = 0; t < this.slider.visibleRealSlides.length; t++) e = i[t].$layer.outerHeight(), s = Math.max(s, e), i[t].$layer.data("contentHeight", e);
        for (t = 0; t < this.slider.visibleRealSlides.length; t++) i[t].$layer.removeClass("n2-ss-layer--height-calc");
        return s
    }, u.prototype.getMinimumStaticContentHeight = function() {
        var t, i = 0,
            e = p();
        for (t = 0; t < this.slider.staticSlides.length; t++) e = e.add(this.slider.staticSlides[t].$element[0]);
        return e.addClass("n2-ss-layer--height-calc").each(function(t, e) {
            i = Math.max(i, p(e).outerHeight())
        }).removeClass("n2-ss-layer--height-calc"), i
    }, u.prototype.getDeviceMode = function() {
        return u._DeviceMode[this.deviceID]
    }, u.prototype.getDeviceGroup = function() {
        return u._DeviceGroup[this.getDeviceMode()]
    }, u.prototype.onResize = function(t) {
        this.slider.mainAnimation && "playing" === this.slider.mainAnimation.getState() ? this.delayedResizeAdded || (this.delayedResizeAdded = !0, this.sliderElement.on("mainAnimationComplete.responsive", this._onResize.bind(this, t))) : this._onResize(t)
    }, u.prototype._onResize = function(t) {
        this.doResize(t), this.delayedResizeAdded = !1
    }, u.prototype.doNormalizedResize = function() {
        this.normalizeTimeout && clearTimeout(this.normalizeTimeout), this.normalizeTimeout = setTimeout(this.doResize.bind(this), 10)
    }, u.prototype.identifyDeviceID = function() {
        this.containerElementPadding.css("overflow", "hidden");
        var t, e, i = u.DeviceMode.desktopPortrait,
            s = window.n2Width || window.innerWidth,
            n = window.n2Height || window.innerHeight;
        this.isLandscape = n < s;
        for (var o = this.parameters.breakpoints.length - 1; 0 <= o; o--)
            if (t = this.parameters.breakpoints[o], e = this.isLandscape ? t.landscapeWidth : t.portraitWidth, "max-screen-width" === t.type) {
                if (s <= e) {
                    i = u.DeviceMode[t.device];
                    break
                }
            } else if ("min-screen-width" === t.type && e <= s) {
            i = u.DeviceMode[t.device];
            break
        }
        return this.containerElementPadding.css("overflow", ""), i
    }, u.prototype.updateOffsets = function() {
        var t;
        if (this.focusOffsetTop = 0, "" !== this.parameters.focus.offsetTop) {
            var e = p(this.parameters.focus.offsetTop);
            for (t = 0; t < e.length; t++) e.eq(t).is(":visible") && (this.focusOffsetTop += e.eq(t).outerHeight())
        }
        if (this.slider.isAdmin && (this.focusOffsetTop += p(".n2-lb-header").outerHeight()), this.focusOffsetBottom = 0, "" !== this.parameters.focus.offsetBottom) {
            var i = p(this.parameters.focus.offsetBottom);
            for (t = 0; t < i.length; t++) i.eq(t).is(":visible") && (this.focusOffsetBottom += i.eq(t).outerHeight())
        }
    }, u.prototype.calculateFullPageSliderHeight = function(t) {
        if (!this.slider.isAdmin)
            if ("fullpage" === this.parameters.type) {
                var e = 0;
                if ("100vh" === this.parameters.sliderHeightBasedOn) e = window.n2ClientHeight || this.$viewportHeight.height();
                else if (window.matchMedia && /Android|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent || navigator.vendor || window.opera)) {
                    var i, s = !1;
                    t && "orientationchange" === t.type && (s = !0), i = n2const.isIOS ? document.documentElement.clientHeight : window.innerHeight, window.matchMedia("(orientation: landscape)").matches ? (e = Math.min(screen.width, i), 90 !== this.lastOrientation && (s = !0, this.lastOrientation = 90)) : (e = Math.min(screen.height, i), 0 !== this.lastOrientation && (s = !0, this.lastOrientation = 0)), e = window.n2ClientHeight || e;
                    var n = p.now(),
                        o = 100;
                    /SamsungBrowser/i.test(navigator.userAgent) && (o = 150), !s && Math.abs(e - this.lastClientHeight) < o && 400 < n - this.lastClientHeightTime ? e = this.lastClientHeight : (this.lastClientHeight = e, this.lastClientHeightTime = n)
                } else e = window.n2ClientHeight || document.documentElement.clientHeight || document.body.clientHeight;
                n2const.isBot && (e = Math.min(e, document.documentElement.clientWidth || document.body.clientWidth)), this._lastVerticalOffsetHeight = this.getVerticalOffsetHeight(), this.fullPageMinimumSliderHeight = e - this._lastVerticalOffsetHeight
            } else this.fullPageMinimumSliderHeight = 0
    }, u.prototype.doResize = function(t) {
        var e = this.identifyDeviceID();
        if (this.parameters.hideOn[u._DeviceMode[e]]) return this.$section.addClass("n2-section-smartslider--hidden"), !1;
        if (this.$section.removeClass("n2-section-smartslider--hidden"), !this.containerElementPadding.is(":visible")) return !1;
        if (this.updateOffsets(), this.disableTransitions || (this.disableTransitions = !0, this.sliderElement.addClass("n2notransition"), this.disableTransitionsTimeout && clearTimeout(this.disableTransitionsTimeout), this.disableTransitionsTimeout = setTimeout(function() {
                this.sliderElement.removeClass("n2notransition"), this.disableTransitions = !1
            }.bind(this), 500)), !this.slider.isAdmin && this.parameters.forceFull) {
            "none" !== this.parameters.forceFullOverflowX && p(this.parameters.forceFullOverflowX).css("overflow-x", "hidden");
            var i = 0,
                s = 0;
            if (this.parameters.forceFullHorizontalSelector = window.ssForceFullHorizontalSelector || this.parameters.forceFullHorizontalSelector, "" !== this.parameters.forceFullHorizontalSelector) {
                var n = this.sliderElement.closest(this.parameters.forceFullHorizontalSelector);
                if (n && 0 < n.length) {
                    var o = n[0].getBoundingClientRect();
                    i = o.width, s = n2const.rtl.isRtl ? (document.body.clientWidth || document.documentElement.clientWidth) - o.right : o.left
                }
            }
            var r = 0 < i ? i : document.body.clientWidth || document.documentElement.clientWidth,
                a = this.containerElement.parent(),
                l = a[0].getBoundingClientRect(),
                h = -(n2const.rtl.isRtl ? (document.body.clientWidth || document.documentElement.clientWidth) - l.right : l.left) - parseInt(a.css("paddingLeft")) - parseInt(a.css("borderLeftWidth")) + s;
            this.containerElement.css({
                marginLeft: h + "px",
                marginRight: h + "px",
                width: r + "px"
            })
        }
        var d = !1,
            c = this.device;
        this.deviceID !== e && (this.setDeviceID(e), this.sliderElement.removeClass("n2-ss-" + c).attr("data-device-mode", this.device).addClass("n2-ss-" + this.device), this.sliderElement.trigger("SliderDevice", {
            lastDevice: c,
            device: this.device,
            group: u._DeviceGroup[this.device]
        }), d = !0, this.slider.stages.resolve("Device")), this.calculateFullPageSliderHeight(t), d && (this.slider.visibleRealSlides = [], this.sliderElement.trigger("SliderDeviceOrientation", {
            slider: this.slider,
            lastDevice: c,
            device: this.device,
            group: u._DeviceGroup[this.device]
        }), this.slider.stages.resolve("DeviceOrientation"), this.finalizeVisibleSlidesStage1()), (this.slider.isVisible || this.visibleRealSlidesChanged) && (this.resizeStage1Width(), this.sliderElement.trigger("SliderResizeHorizontal"), this.resizeStage2Height())
    }, u.prototype.resizeStage1Width = function() {
        this.resizeContext = {}
    }, u.prototype.resizeStage2Height = function() {
        for (var t = this.applyFilter("SliderVerticalCSS", this.getResizeStage2CSS()), e = 0; e < t.length; e++) t[e].flush();
        this.ratios = {
            slideW: this.resizeContext.slideWidth / this.base.slideWidth,
            slideH: this.resizeContext.slideHeight / this.base.slideHeight
        }, this.slider.stages.resolve("ResizeFirst"), this.finalizeVisibleSlidesStage2(), this.triggerResize()
    }, u.prototype.resizeStage2HeightAnimated = function(t, e, i) {
        this.dynamicHeightSlide = e;
        var s = this.applyFilter("SliderVerticalCSS", this.getResizeStage2CSS());
        delete this.dynamicHeightSlide, this.ratios = {
            slideW: this.resizeContext.slideWidth / this.base.slideWidth,
            slideH: this.resizeContext.slideHeight / this.base.slideHeight
        }, this.finalizeVisibleSlidesStage2();
        for (var n = 0; n < s.length; n++) t.to(s[n].$, i, s[n].css, 0);
        t.eventCallback("onComplete", function() {
            this.slider.trigger("SliderResizeAnimated", [this.ratios, this])
        }.bind(this))
    }, u.prototype.getResizeStage2CSS = function() {}, u.prototype.onStarterSlide = function(t) {
        this.state.StarterSlide = !0, this.calibrateActiveSlide(t), delete this.targetCurrentSlide
    }, u.prototype.finalizeVisibleSlidesStage1 = function() {
        this.visibleRealSlidesChanged && (this.slider.visibleRealSlides.sort(function(t, e) {
            return t.index - e.index
        }), this.updateVisibleSlides(), this.slider.trigger("visibleRealSlidesChanged"), this.slider.stages.resolve("VisibleRealSlides"), this.isResetActiveSlideEarly && this.calibrateActiveSlide())
    }, u.prototype.updateVisibleSlides = function() {
        this.slider.visibleSlides = this.slider.visibleRealSlides
    }, u.prototype.calibrateActiveSlide = function(t) {
        if (this.state.StarterSlide && 0 < this.slider.visibleSlides.length) {
            var e = t || this.slider.currentRealSlide;
            e.isVisible || (e = (e = e.getNext()) || this.slider.currentSlide.getPrevious()), this.resetActiveRealSlide(e)
        }
    }, u.prototype.resetActiveRealSlide = function(t) {
        var e, i;
        t && t !== this.slider.currentRealSlide ? (this.slider.trigger("BeforeCurrentSlideChange", t), (e = this.slider.currentSlide) && this.slider.forceUnsetActiveSlide(e), this.slider.setCurrentRealSlide(t), i = this.slider.currentSlide, this.targetCurrentSlide = i, this.slider.forceSetActiveSlide(i), this.slider.trigger("SlideForceChange", [e, i])) : i = this.slider.currentSlide, this.slider.updateInsideSlides([i])
    }, u.prototype.finalizeVisibleSlidesStage2 = function() {
        this.visibleRealSlidesChanged && (this.visibleRealSlidesChanged = !1, this.isResetActiveSlideEarly || this.calibrateActiveSlide(), this.triggerVisibleSlidesChanged(), this.targetCurrentSlide !== t && (this.slider.trigger("SlideWillChange", this.targetCurrentSlide), this.slider.trigger("CurrentSlideChanged", this.targetCurrentSlide), this.slider.stages.resolved("Visible") && this.slider.playSlide(this.targetCurrentSlide), delete this.targetCurrentSlide))
    }, u.prototype.triggerVisibleSlidesChanged = function() {
        this.slider.trigger("visibleSlidesChanged"), this.slider.stages.resolve("VisibleSlides"), this.slider.visibleRealSlides.length ? this.slider.isVisible || this.slider.show() : this.slider.isVisible && this.slider.hide()
    }, u.prototype.getNormalizedModeString = function() {
        return u._DeviceMode[this.deviceID]
    }, u.prototype.triggerResize = function() {
        this.slider.publicTrigger("SliderResize", [this.ratios, this]), this.slider.stages.resolve("Resized")
    }, u.prototype.getVerticalOffsetHeight = function() {
        if (this.isFullScreen) return 0;
        var t = this.focusOffsetTop + this.focusOffsetBottom;
        if (this.slider.widgets.$vertical)
            for (var e = 0; e < this.slider.widgets.$vertical.length; e++) t += this.slider.widgets.$vertical.eq(e).outerHeight();
        return t + this.parameters.decreaseSliderHeight
    }, u.prototype.addHorizontalSpacingControl = function(t, e) {
        this.horizontalSpacingControls[t].push(e), this.slider.stages.resolved("ResizeFirst") && this.doNormalizedResize()
    }, u.prototype.filterSliderWidthHorizontalSpacing = function(t) {
        for (var e in this.horizontalSpacing = {
                right: 0,
                left: 0
            }, this.horizontalSpacingControls)
            for (var i = this.horizontalSpacingControls[e], s = i.length - 1; 0 <= s; s--) {
                var n = i[s];
                n.isVisible() && (n.refreshSliderSize(t), this.horizontalSpacing[e] += n.getSize())
            }
        return this.containerElementPadding.css({
            paddingLeft: this.horizontalSpacing.left + "px",
            paddingRight: this.horizontalSpacing.right + "px"
        }), t - this.horizontalSpacing.left - this.horizontalSpacing.right
    }, u.prototype.addFilter = function(t, e) {
        this.filters[t].push(e)
    }, u.prototype.removeFilter = function(t, e) {
        this.filters[t].push(e)
    }, u.prototype.applyFilter = function(t, e) {
        for (var i = 0; i < this.filters[t].length; i++) e = this.filters[t][i].call(this, e);
        return e
    }, u.prototype.prepareFontSize = function(t) {
        return N2Classes.FontSize.toRem(t)
    }, u
}), N2D("FrontendItemAnimatedHeading", function(l, t) {
    var h = {
        fade: {
            fn: "animateWhole",
            fixedWidth: !0,
            data: {
                duration: .6,
                overlap: 0,
                ease: "easeInOutQuad",
                from: {
                    opacity: 0
                },
                current: {
                    opacity: 1
                },
                to: {
                    opacity: 0
                }
            }
        },
        slide: {
            fn: "animateWhole",
            fixedWidth: !0,
            data: {
                duration: .6,
                overlap: 0,
                ease: "easeInOutQuad",
                from: {
                    opacity: 0,
                    x: "100%"
                },
                current: {
                    opacity: 1,
                    x: "0%"
                },
                to: {
                    opacity: 0,
                    x: "-100%"
                }
            }
        },
        rotating: {
            fn: "animateWhole",
            fixedWidth: !0,
            data: {
                overflow: !0,
                duration: .6,
                overlap: .2,
                ease: "easeInOutQuad",
                transformOrigin: "50% 100% 0",
                from: {
                    opacity: 0,
                    rotationX: "-70deg"
                },
                current: {
                    opacity: 1,
                    rotationX: "0deg"
                },
                to: {
                    opacity: 0,
                    rotationX: "70deg"
                }
            }
        },
        "drop-in": {
            fn: "animateWhole",
            fixedWidth: !0,
            data: {
                overflow: !0,
                duration: .6,
                overlap: .3,
                ease: "easeInOutQuad",
                from: {
                    opacity: 0,
                    scale: 1.2
                },
                current: {
                    opacity: 1,
                    scale: 1
                },
                to: {
                    opacity: 0,
                    scale: .6
                }
            }
        },
        "slide-down": {
            fn: "animateWhole",
            fixedWidth: !0,
            data: {
                duration: .6,
                overlap: .6,
                ease: "easeInOutQuad",
                from: {
                    opacity: 0,
                    y: "-100%"
                },
                current: {
                    opacity: 1,
                    y: "0%"
                },
                to: {
                    opacity: 0,
                    y: "100%"
                }
            }
        },
        typewriter1: {
            fn: "animateTypeWriter",
            data: {
                backspace: function(t) {
                    this.timeline.staggerFromTo(t, .1 * this.speedModifier, {
                        display: "inline-block"
                    }, {
                        display: "none",
                        immediateRender: !1
                    }, -.1 * this.speedModifier, "+=" + this.showDuration)
                },
                backspaceDuration: function(t) {
                    return this.showDuration + .1 * this.speedModifier + .1 * (t.length - 1) * this.speedModifier
                }
            }
        },
        typewriter2: {
            fn: "animateTypeWriter",
            data: {
                backspace: function(t, e) {
                    this.timeline.set(e, {
                        className: "+=n2-ss-animated-heading-i-selection",
                        background: this.color
                    }, "+=" + this.showDuration), this.timeline.set(e, {
                        css: {
                            color: "#" + this.color2
                        }
                    }), this.timeline.set(e, {
                        className: "-=n2-ss-animated-heading-i-selection",
                        background: ""
                    }, "+=0.5"), this.timeline.set(e, {
                        clearProps: "color"
                    }), this.timeline.set(t, {
                        display: "none"
                    })
                },
                backspaceDuration: function(t) {
                    return this.showDuration + .5
                }
            }
        },
        chars: {
            fn: "animateChars",
            fixedWidth: !0,
            data: {
                duration: .4,
                stagger: .05,
                ease: "easeOutCubic",
                from: {
                    scale: 0,
                    opacity: 0
                },
                current: {
                    scale: 1,
                    opacity: 1
                },
                to: {
                    scale: 0,
                    opacity: 0
                }
            }
        },
        chars2: {
            fn: "animateChars",
            fixedWidth: !0,
            data: {
                duration: .4,
                stagger: .05,
                ease: "easeOutCubic",
                from: {
                    rotationY: "90deg",
                    opacity: 0
                },
                current: {
                    rotationY: "0deg",
                    opacity: 1
                },
                to: {
                    rotationY: "-90deg",
                    opacity: 0
                }
            }
        }
    };

    function e(t, e) {
        if (this.slider = e, this.$el = l(t), this.$wrapper = this.$el.parent(), this.refreshJustifyContent(), this.$texts = this.$el.find(".n2-ss-animated-heading-i-text"), !this.isEmpty(this.$texts)) {
            if (n2const.isParentSameOrigin() && window.parent.tpEditorApp) return this.$texts.css({
                position: "static",
                margin: "0 10px"
            }), void this.$el.find(".n2-ss-animated-heading-i2").css("white-space", "normal");
            if (e.disabled.layerAnimations) return this.$texts.eq(0).css("position", "static"), void this.$texts.not(":eq(0)").css("display", "none");
            this.garbage = [], this.$layer = this.$el.closest(".n2-ss-layer"), this.$el.siblings(".n2-ss-animated-heading-before,.n2-ss-animated-heading-after").each(function() {
                for (var t = l(this), e = t.html().split(" "), i = t.attr("class"), s = [], n = 0; n < e.length; n++) s.push('<div class="' + i + '">' + e[n] + "&nbsp;</div>");
                t.replaceWith(s.join(""))
            }), this.start()
        }
    }
    return e.prototype.isEmpty = function(t) {
        return !t.html().trim()
    }, e.prototype.start = function() {
        this.slider.started(this.started.bind(this))
    }, e.prototype.started = function() {
        this.type = this.$el.data("animation-type") || "slide", this.color = this.$el.data("color") || "RGBA(255,255,255,1)", this.color2 = this.$el.data("color2") || "000000", this.currentType = h[this.type], this.currentType.fixedWidth ? this.animateWidth = 0 === this.$el.data("animate-width") ? 0 : 1 : this.animateWidth = 0, this.delay = (+this.$el.data("delay") || 0) / 1e3, this.speedModifier = 1 / (Math.max(+this.$el.data("speed") || 100, 0) / 100), this.showDuration = Math.max(+this.$el.data("show-duration") || 1500, 0) / 1e3, this.loop = +this.$el.data("loop") || 0, this.totalDuration = 0;
        var t = this.currentType.data,
            e = this.$texts.length,
            i = e;
        switch (this.loop && i++, this.currentType.fn) {
            case "animateWhole":
                var s = 0,
                    n = 0;
                this.animateWidth ? s = .4 * .8 : n = t.overlap * this.speedModifier, this.totalDuration = (i - 1) * this.showDuration + 2 * (i - 1) * t.duration * this.speedModifier + (i - 1) * s - (i - 1) * n;
                break;
            case "animateTypeWriter":
                for (var o = 0; o < i; o++) {
                    var r = this.getSplitTextChars(this.$texts.eq(e === o ? 0 : o));
                    0 < o && (this.totalDuration += .8 + .2 * this.speedModifier + .2 * this.speedModifier * (r.length - 1)), o < i - 1 && (this.totalDuration += t.backspaceDuration.call(this, r))
                }
                break;
            case "animateChars":
                for (n = 0, o = 0; o < i; o++) {
                    var a = this.$texts.eq(e === o ? 0 : o);
                    r = this.getSplitTextChars(a);
                    0 < o && (this.totalDuration += Math.max(n, t.duration * this.speedModifier + (r.length - 1) * t.stagger)), o < i - 1 && (this.totalDuration += this.showDuration, n = t.duration * this.speedModifier + (r.length - 1) * t.stagger)
                }
        }
        this.$layer.on("collectRelatedAnimations.animatedHeading", this.collectRelatedAnimations.bind(this)), this.slider.sliderElement.on("SliderResizeHorizontal", function() {
            this.onResize()
        }.bind(this)), this.onResize()
    }, e.prototype.onResize = function() {
        this.size = {
            height: "0"
        }, this.currentType.fixedWidth && !this.animateWidth && (this.size.width = "0");
        for (var t = 0; t < this.$texts.length; t++) {
            var e = this.$texts.eq(t).addClass("n2-ss-animated-heading-measure-width"),
                i = e.outerWidth() + 4,
                s = e.outerHeight();
            e.removeClass("n2-ss-animated-heading-measure-width"), e.data("width", i), e.data("height", s), this.size.height = Math.max(parseInt(this.size.height), s) + "px", this.currentType.fixedWidth && !this.animateWidth && (this.size.width = Math.max(parseInt(this.size.width), i) + "px")
        }
        this.currentType.fixedWidth && this.animateWidth ? (this.size.width = this.$texts.eq(0).data("width") + "px", this.$el.css(this.size), this.invalidate()) : this.$el.css(this.size), this.refreshJustifyContent()
    }, e.prototype.invalidate = function() {
        if (this.timeline) {
            var t = this.timeline.time();
            this.timeline.invalidate().time(t, !0)
        }
    }, e.prototype.collectRelatedAnimations = function(t, e) {
        1 === this.loop ? (this.loopTimeline = new N2Classes.AnimationsLoopTimeline(this, 0), e.loop.push(this.loopTimeline)) : e.in.push(new N2Classes.AnimationsRelated(this, "extendTimeline"))
    }, e.prototype.getTimeline = function() {
        return this.timeline === t ? (this.timeline = new NextendTimeline({
            paused: 1
        }), this[this.currentType.fn](this.currentType.data), this.timeline.delay(this.delay)) : this.timeline.invalidate(), this.timeline
    }, e.prototype.getLoopTimeline = function() {
        return this.getTimeline()
    }, e.prototype.extendTimeline = function(t, e, i) {
        var s = this.getTimeline();
        t.add(s, 0), s.paused(!1)
    }, e.prototype.getSplitTextChars = function(t) {
        var e = t.data("splitTextChars");
        return e || (new NextendSplitText(t[0], {
            type: "words,chars"
        }), t.contents().filter(function() {
            return 3 === this.nodeType && !/\S/.test(this.nodeValue)
        }).replaceWith('<div style="position: relative; display: inline-block;">&nbsp;</div>'), e = t.find(":not(:has(*))"), t.data("splitTextChars", e)), e
    }, e.prototype.animateChars = function(t) {
        this.$el.css("overflow", "hidden"), this.animateWidth && this.timeline.set(this.$el, {
            width: function() {
                return this.data("width")
            }.bind(this.$texts.eq(0)),
            n2RoundProps: "width",
            rotationZ: "0.00001deg",
            immediateRender: !0,
            ease: N2Classes.Linear
        });
        var e = 0,
            i = this.$texts.length,
            s = i;
        this.loop && s++;
        for (var n = 0; n < s; n++) {
            var o = this.$texts.eq(i === n ? 0 : n),
                r = this.getSplitTextChars(o);
            if (NextendTween.set(r, {
                    transformPerspective: 1e3,
                    "will-change": "transform, opacity"
                }), 0 < n) {
                var a = this.timeline.totalDuration() - e;
                this.timeline.staggerFromTo(r, t.duration * this.speedModifier, l.extend({}, t.from), l.extend({
                    immediateRender: n < i,
                    ease: t.ease
                }, t.current), t.stagger, a), this.animateWidth && this.timeline.to(this.$el, this.timeline.recent().duration(), {
                    width: function() {
                        return this.data("width")
                    }.bind(o)
                }, a)
            }
            n < s - 1 && (this.timeline.staggerFromTo(r, t.duration * this.speedModifier, l.extend({}, t.current), l.extend({
                immediateRender: 0 === n,
                ease: t.ease
            }, t.to), t.stagger, "+=" + this.showDuration), e = this.timeline.recent().duration())
        }
        this.garbage.push(function() {
            this.animateWidth && this.$el.css("width", ""), this.$el.css("overflow", "")
        })
    }, e.prototype.displayCursor = function() {
        var t = l('<div class="n2-ss-animated-heading-i-cursor"></div>').css("background-color", this.color).appendTo(this.$texts.parent()),
            e = new NextendTimeline({
                onComplete: function() {
                    this.restart()
                }
            });
        e.fromTo(t, .1, {
            opacity: 0
        }, {
            opacity: 1
        }, "+=0.5"), e.fromTo(t, .1, {
            opacity: 1
        }, {
            opacity: 0,
            immediateRender: !1
        }, "+=0.5"), this.garbage.push(function() {
            e.kill(), t.remove()
        })
    }, e.prototype.animateTypeWriter = function(t) {
        this.$texts.css("position", "relative"), this.timeline.set(this.$texts.eq(0), {
            display: "inline-block",
            immediateRender: !0
        });
        for (var e = 1; e < this.$texts.length; e++) this.$texts.eq(e).css("display", "none"), this.timeline.set(this.$texts.eq(e), {
            display: "none",
            immediateRender: !0
        });
        this.timeline.set(this.getSplitTextChars(this.$texts.eq(0)), {
            display: "inline-block",
            immediateRender: !0
        });
        var i = this.$texts.length,
            s = i;
        this.loop && s++;
        for (var n = 0; n < s; n++) {
            var o = this.getSplitTextChars(this.$texts.eq(i === n ? 0 : n));
            0 < n && (this.timeline.set(this.$texts.eq(i === n ? 0 : n), {
                display: "inline-block",
                immediateRender: i !== n
            }), this.timeline.staggerFromTo(o, .2 * this.speedModifier, {
                display: "none"
            }, {
                display: "inline-block",
                immediateRender: i !== n
            }, .2 * this.speedModifier, "+=0.8")), n < s - 1 && (t.backspace.call(this, o, this.$texts.parent()), this.timeline.set(this.$texts.eq(i === n ? 0 : n), {
                display: "none",
                immediateRender: !1
            }))
        }
        this.displayCursor()
    }, e.prototype.animateWhole = function(t) {
        t.overflow ? this.$el.css("overflow", "") : this.$el.css("overflow", "hidden"), this.animateWidth && this.timeline.set(this.$el, {
            width: function() {
                return this.data("width")
            }.bind(this.$texts.eq(0)),
            immediateRender: !0
        }), t.transformOrigin = t.transformOrigin || "50% 50% 0", this.timeline.set(this.$texts, {
            transformOrigin: t.transformOrigin,
            transformPerspective: 1e3
        });
        var e = this.$texts.length,
            i = e;
        this.loop && i++;
        for (var s = 0; s < i; s++) {
            var n = this.$texts.eq(e === s ? 0 : s);
            if (0 < s) {
                var o = this.timeline.totalDuration();
                if (this.animateWidth) {
                    this.timeline.to(this.$el, .4, {
                        width: function() {
                            return this.data("width")
                        }.bind(n)
                    }, o - .4 * .2), o += .4 * .8
                } else o -= t.overlap * this.speedModifier;
                this.timeline.fromTo(n, t.duration * this.speedModifier, l.extend({}, t.from), l.extend({
                    immediateRender: s < e,
                    ease: t.ease
                }, t.current), o)
            }
            s < i - 1 && this.timeline.fromTo(n, t.duration * this.speedModifier, l.extend({}, t.current), l.extend({
                immediateRender: 0 === s,
                ease: t.ease
            }, t.to), "+=" + this.showDuration)
        }
        this.garbage.push(function() {
            this.animateWidth && this.$el.css("width", ""), this.$el.css("overflow", "")
        })
    }, e.prototype.refreshJustifyContent = function() {
        var t = "";
        switch (this.$wrapper.css("text-align")) {
            case "left":
                t = "flex-start";
                break;
            case "center":
                t = "center";
                break;
            case "right":
                t = "flex-end";
                break;
            case "justify":
                t = "space-between"
        }
        this.$wrapper.css("justify-content", t)
    }, e
}), N2D("FrontendItemAudio", function(s, e) {
    function t(t, e, i) {
        this.state = {
            slideVisible: !1,
            visible: !1,
            slide: !1,
            play: !1,
            continuePlay: !1
        }, this.loadDeferred = s.Deferred(), this.slider = t, this.id = e, this.$node = s("#" + e), this.audio = this.$node.find("audio").get(0), this.audio ? (this.$layer = this.$node.parent(), this.slide = this.slider.findSlideByElement(this.$node), this.isStatic = this.slide.isStatic(), this.isPaused = !1, this.lastVolume = 1, this.parameters = s.extend({
            autoplay: 0,
            loop: 0,
            reset: 0,
            volume: 1,
            show: 1
        }, i), s(this.audio).on({
            play: this.onPlay.bind(this),
            pause: this.onPause.bind(this),
            ended: this.onEnded.bind(this),
            timeupdate: this.onTimeUpdate.bind(this),
            volumechange: this.onVolumechange.bind(this)
        }), 0 <= this.audio.duration ? this.onReady() : this.audio.addEventListener("loadedmetadata", this.onReady.bind(this))) : this.loadDeferred.reject()
    }
    return t.prototype.setState = function(t, e, i) {
        i = i || !1, this.state[t] = e, i && (this.state.slideVisible && this.state.visible && this.state.play && this.state.slide ? this.safePlay() : this.safePause())
    }, t.prototype.safePlay = function() {
        this.safeCallback(function() {
            this.promise = this.audio.play(), this.promise && Promise !== e && this.promise.catch(function(t) {
                if ("NotAllowedError" === t.name) {
                    var e = ".ssLayerVideo" + this.counter;
                    s("body").off(e).one("click" + e + " touchend" + e, function() {
                        s("body").off(e), !1 !== this.promise && this.safePlay()
                    }.bind(this))
                }
            }.bind(this))
        }.bind(this))
    }, t.prototype.safePause = function() {
        this.safeCallback(function() {
            this.audio.pause(), this.promise = !1
        }.bind(this))
    }, t.prototype.safeCallback = function(t) {
        this.promise && Promise !== e ? this.promise.then(t).catch(t) : t()
    }, t.prototype.initAutoplay = function() {
        this.isStatic ? (this.setState("play", !0), this.setState("slide", !0, !0)) : (this.slider.sliderElement.on("mainAnimationComplete", function(t, e, i, s) {
            this.slide.isActiveWhen(this.slider.slides[s]) ? (this.setState("play", !0), this.setState("slide", !0, !0)) : this.setState("slide", !1, !0)
        }.bind(this)), this.slide.isActiveWhen() && (this.setState("play", !0), this.setState("slide", !0, !0)))
    }, t.prototype.onReady = function() {
        this.$time = this.$node.find(".n2-ss-item-audio-time"), this.updateTime(), this.audio.volume = this.parameters.volume, this.$node.find(".n2-ss-item-audio-play").on("click", function() {
            this.setState("play", !0, !0)
        }.bind(this)), this.$node.find(".n2-ss-item-audio-pause").on("click", function() {
            this.setState("play", !1, !0)
        }.bind(this)), this.$node.find(".n2-ss-item-audio-mute").on("click", function() {
            this.audio.volume = 0
        }.bind(this)), this.$node.find(".n2-ss-item-audio-unmute").on("click", function() {
            this.audio.volume = this.lastVolume
        }.bind(this)), this.$progress = this.$node.find(".n2-ss-item-audio-progress-container").on("pointerdown", function(t) {
            t.preventDefault(), t.stopPropagation(), this.updateUITime(t), s("body").on({
                "pointermove.volume": function(t) {
                    t.preventDefault(), t.stopPropagation(), this.updateUITime(t)
                }.bind(this),
                "pointerup.volume": function(t) {
                    t.preventDefault(), t.stopPropagation(), this.updateUITime(t), s("body").off(".volume")
                }.bind(this),
                "pointerleave.volume": function() {
                    s("body").off(".volume")
                }.bind(this)
            })
        }.bind(this)), this.$playhead = this.$progress.find(".n2-ss-item-audio-progress-playhead"), this.$volume = this.$node.find(".n2-ss-item-audio-volume-container").on("pointerdown", function(t) {
            t.preventDefault(), t.stopPropagation(), this.updateUIVolume(t), s("body").on({
                "pointermove.volume": function(t) {
                    t.preventDefault(), t.stopPropagation(), this.updateUIVolume(t)
                }.bind(this),
                "pointerup.volume": function(t) {
                    t.preventDefault(), t.stopPropagation(), this.updateUIVolume(t), s("body").off(".volume")
                }.bind(this),
                "pointerleave.volume": function() {
                    s("body").off(".volume")
                }.bind(this)
            })
        }.bind(this)), this.$volumehead = this.$volume.find(".n2-ss-item-audio-volumehead");
        var t = this.$node.closest(".n2-ss-layer");
        this.layer = t.data("layer"), this.layer.isVisible && this.setState("visible", !0, !0), this.layer.$layer.on("visibilityChange", function(t, e) {
            if (e) this.setState("visible", !0, !0);
            else {
                var i = this.state.play;
                this.setState("visible", !1, !0), i && this.setState("continuePlay", !0)
            }
        }.bind(this)), this.slide.isVisible && this.setState("slideVisible", !0, !0), this.slide.$element.on({
            Hidden: function() {
                var t = this.state.play;
                this.setState("slideVisible", !1, !0), t && this.setState("continuePlay", !0)
            }.bind(this),
            Visible: function() {
                this.setState("slideVisible", !0, !0)
            }.bind(this)
        }), this.slider.stages.done("BeforeShow", function() {
            this.slide.isActiveWhen() && this.setState("slide", !0, !0)
        }.bind(this)), 1 == this.parameters.autoplay && this.slider.visible(this.initAutoplay.bind(this)), this.isStatic || (this.slider.sliderElement.on({
            CurrentSlideChanged: function(t, e) {
                this.onCurrentSlideChange(e)
            }.bind(this),
            mainAnimationStart: function(t, e, i, s) {
                this.onCurrentSlideChange(this.slider.slides[s])
            }.bind(this)
        }), parseInt(this.parameters.reset) && this.slider.sliderElement.on("mainAnimationComplete", function(t, e, i, s, n) {
            s != this.slideIndex && 0 < this.audio.currentTime && (this.audio.currentTime = 0)
        }.bind(this))), this.loadDeferred.resolve()
    }, t.prototype.onCurrentSlideChange = function(t) {
        var e = this.slide.isActiveWhen(t);
        e && 1 == this.parameters.autoplay && this.setState("play", !0), this.setState("slide", e, !0)
    }, t.prototype.updateTime = function() {
        this.$time.html(this.timeFormat(this.audio.currentTime) + " / " + this.timeFormat(this.audio.duration))
    }, t.prototype.onPlay = function() {
        this.isPaused = !1, this.$node.attr("data-state", "playing"), requestAnimationFrame(this.refreshCurrentTime.bind(this)), this.isStatic || this.slider.trigger("mediaStarted", this.id), this.$layer.triggerHandler("n2play")
    }, t.prototype.onPause = function() {
        this.isPaused = !0, this.$node.attr("data-state", "paused"), this.$layer.triggerHandler("n2pause"), this.state.continuePlay ? (this.setState("continuePlay", !1), this.setState("play", !0)) : this.setState("play", !1)
    }, t.prototype.onEnded = function() {
        1 == this.parameters.loop ? (this.audio.currentTime = 0, this.safePlay()) : (this.isStatic || this.slider.trigger("mediaEnded", this.id), this.$layer.triggerHandler("n2stop"), this.setState("play", !1))
    }, t.prototype.onTimeUpdate = function() {
        this.updateTime(), this.$playhead.css("width", this.audio.currentTime / this.audio.duration * 100 + "%")
    }, t.prototype.onVolumechange = function() {
        this.$volumehead.css("width", 100 * this.audio.volume + "%"), this.$node.attr("data-volume", this.audio.volume), 0 != this.audio.volume && (this.lastVolume = this.audio.volume)
    }, t.prototype.refreshCurrentTime = function() {
        this.$playhead.css("width", this.audio.currentTime / this.audio.duration * 100 + "%"), this.isPaused || requestAnimationFrame(this.refreshCurrentTime.bind(this))
    }, t.prototype.updateUITime = function(t) {
        this.audio.currentTime = this.audio.duration * Math.max(0, Math.min(.99, Math.round(t.pageX - this.$progress.offset().left) / this.$progress.width()))
    }, t.prototype.updateUIVolume = function(t) {
        this.audio.volume = Math.max(0, Math.min(1, Math.round(t.pageX - this.$volume.offset().left) / this.$volume.width()))
    }, t.prototype.timeFormat = function(t) {
        t = parseInt(t);
        var e = [],
            i = parseInt(t / 60);
        t -= 60 * i;
        var s = parseInt(i / 60);
        return i -= 60 * s, 0 < s && e.push(this.pad(s, 2, 0)), e.push(this.pad(i, 2, 0)), e.push(this.pad(t, 2, 0)), e.join(":")
    }, t.prototype.pad = function(t, e, i) {
        return i = i || "0", (t += "").length >= e ? t : new Array(e - t.length + 1).join(i) + t
    }, t
}), N2D("FrontendItemCaption", function(o, t) {
    function e(t, e, i, s, n) {
        this.startCSS = null, this.slider = t, this.mode = i, this.direction = s, this.scale = n, this.node = o("#" + e).on("mouseenter", this.in.bind(this)).on("mouseleave", this.out.bind(this)), this.image = this.node.find("img"), this.content = this.node.find(".n2-ss-item-caption-content"), this["init" + i]()
    }
    return e.prototype.initSimple = function() {
        var t = {
            height: "auto"
        };
        switch (this.direction) {
            case "left":
                t.bottom = "0", t.left = "-100%", this.startCSS = {
                    left: "-100%"
                };
                break;
            case "right":
                t.bottom = "0", t.right = "-100%", this.startCSS = {
                    right: "-100%"
                };
                break;
            default:
                t.left = "0", this.resizeSimple(), this.slider.sliderElement.on("SliderResize", this.resizeSimple.bind(this)), this._out = this._outSimple
        }
        this.content.css(t)
    }, e.prototype.resizeSimple = function() {
        var t = {};
        t[this.direction] = -this.content.height() + "px", this.content.css(t)
    }, e.prototype._outSimple = function() {
        var t = {};
        t[this.direction] = -this.content.height(), this.tweenContent(t)
    }, e.prototype.initFull = function() {
        var t = {};
        switch (this.direction) {
            case "left":
                t.bottom = "0", t.left = "-100%", this.startCSS = {
                    left: "-100%"
                };
                break;
            case "right":
                t.bottom = "0", t.right = "-100%", this.startCSS = {
                    right: "-100%"
                };
                break;
            case "top":
                t.left = "0", t.top = "-100%", this.startCSS = {
                    top: "-100%"
                };
                break;
            case "bottom":
                t.left = "0", t.bottom = "-100%", this.startCSS = {
                    bottom: "-100%"
                }
        }
        this.content.css(t)
    }, e.prototype.initFade = function() {
        this.content.css({
            opacity: "0",
            left: "0",
            top: "0"
        }), this._in = this._inFade, this._out = this._outFade
    }, e.prototype._inFade = function() {
        this.tweenContent({
            opacity: 1
        })
    }, e.prototype._outFade = function() {
        this.tweenContent({
            opacity: 0
        })
    }, e.prototype.in = function() {
        this._in(), this.scale && this.tweenImage({
            scale: 1.2
        })
    }, e.prototype._in = function() {
        var t = {};
        t[this.direction] = 0, this.tweenContent(t)
    }, e.prototype.out = function() {
        this._out(), this.scale && this.tweenImage({
            scale: 1
        })
    }, e.prototype._out = function() {
        this.tweenContent(this.startCSS)
    }, e.prototype.tweenContent = function(t) {
        NextendTween.to(this.content, .5, t)
    }, e.prototype.tweenImage = function(t) {
        NextendTween.to(this.image, .5, t)
    }, e
}), N2D("FrontendItemCounter", function(s, t) {
    function e(t, e, i) {
        this.slider = t, this.data = i, this.currentPercent = this.data.fromPercent, this.node = s(e).data("counter", this), this.$layer = this.node.closest(".n2-ss-layer"), this.data.displayMode && (this.$display = this.node.find(this.data.display)), this.$countingDiv = this.node.find(this.data.counting), 0 < this.data.duration && this.start()
    }
    return e.prototype.start = function() {
        this.slider.started(this.started.bind(this))
    }, e.prototype.started = function() {
        this.delay = (+this.data.delay || 0) / 1e3, this.$layer.on("collectRelatedAnimations.counter", this.collectRelatedAnimations.bind(this)), this.timeline = new NextendTimeline({
            paused: 1
        });
        var e = this.update.bind(this),
            t = {
                _percent: this.data.fromPercent,
                get percent() {
                    return this._percent
                },
                set percent(t) {
                    this._percent = t, e(t)
                }
            };
        this.timeline.fromTo(t, this.data.duration / 1e3, {
            percent: this.data.fromPercent
        }, this._animateData(this.data.toPercent))
    }, e.prototype.collectRelatedAnimations = function(t, e) {
        e.in.push(new N2Classes.AnimationsRelated(this, "extendTimeline"))
    }, e.prototype.extendTimeline = function(t, e, i) {
        t.add(this.timeline, this.delay), this.timeline.paused(!1)
    }, e.prototype._animateData = function(t, e) {
        return {
            percent: t,
            ease: e = e || "easeOutExpo"
        }
    }, e.prototype.update = function(t) {
        switch (this.currentPercent = t, this.data.displayMode) {
            case "circle":
                this.$display.attr("stroke-dashoffset", (1 - t) * this.data.c);
                break;
            case "width":
                this.$display.css("width", 100 * t + "%")
        }
        this.$countingDiv.html(this.data.pre + (this.data.min + t * (this.data.total - this.data.min)).toFixed(0) + this.data.post)
    }, e.prototype.to = function(t, e) {
        var i = this.update.bind(this),
            s = {
                _percent: this.currentPercent,
                get percent() {
                    return this._percent
                },
                set percent(t) {
                    this._percent = t, i(t)
                }
            };
        NextendTween.to(s, e / 1e3, this._animateData(t / 100))
    }, e
}), N2D("FrontendItemHighlightedHeading", function(o, i) {
    function t(t, e) {
        this.slider = e, this.$el = o(t), this.$wrapper = this.$el.parent(), this.refreshJustifyContent(), this.slider.sliderElement.on("SliderResize", this.refreshJustifyContent.bind(this)), this.$layer = this.$el.closest(".n2-ss-layer"), this.clean(), !e.disabled.layerAnimations && this.$el.data("animate") && (n2const.isParentSameOrigin() && window.parent.tpEditorApp || (this.$el.siblings(".n2-ss-highlighted-heading-before,.n2-ss-highlighted-heading-after").each(function() {
            var t = o(this),
                e = t.html().split(" "),
                i = t.attr("class"),
                s = [];
            "n2-ss-highlighted-heading-after" === i && s.push('<div class="' + i + '">&nbsp;</div>');
            for (var n = 0; n < e.length; n++) s.push('<div class="' + i + '">' + e[n] + "&nbsp;</div>");
            t.replaceWith(s.join(""))
        }), this.start()))
    }
    return t.prototype.clean = function() {}, t.prototype.start = function() {
        this.slider.started(this.started.bind(this))
    }, t.prototype.started = function() {
        this.delay = (+this.$el.data("delay") || 0) / 1e3, this.duration = Math.max(+this.$el.data("duration") || 1500, 1) / 1e3, this.loop = +this.$el.data("loop") || 0;
        var t = +this.$el.data("loop-delay");
        isFinite(t) || (t = 2e3), this.loopDelay = t / 1e3, this.$paths = this.$el.find("path"), this.totalDuration = .6 * this.duration * (this.$paths.length - 1) + this.duration, this.loop && 0 <= this.loopDelay && (this.totalDuration += this.loopDelay + .8), this.$layer.on("collectRelatedAnimations.highlightedHeading", this.collectRelatedAnimations.bind(this))
    }, t.prototype.collectRelatedAnimations = function(t, e) {
        1 === this.loop ? e.loop.push(new N2Classes.AnimationsLoopTimeline(this, 0)) : e.in.push(new N2Classes.AnimationsRelated(this, "extendTimeline"))
    }, t.prototype.extendTimeline = function(t) {
        var e = this.getTimeline();
        t.add(e, 0), e.paused(!1)
    }, t.prototype.getTimeline = function() {
        if (this.timeline === i) {
            for (var t = new NextendTimeline({
                    paused: 1
                }), e = 0; e < this.$paths.length; e++) this.animatePath(t, this.$paths[e], .6 * this.duration * e);
            this.loop && 0 <= this.loopDelay && (t.to(this.$paths, .4, {
                opacity: 0
            }, "+=" + this.loopDelay), t.set({}, {}, "+=0.4")), t.delay(this.delay), this.timeline = t
        }
        return this.timeline
    }, t.prototype.getLoopTimeline = function() {
        return this.getTimeline()
    }, t.prototype.animatePath = function(t, e, i) {
        var s = Math.round(1.01 * (e.getTotalLength() || 2e3));
        t.fromTo(e, .1, {
            opacity: 0
        }, {
            opacity: 1
        }, i), t.fromTo(e, this.duration, {
            "stroke-dasharray": "0 " + s
        }, {
            "stroke-dasharray": s + " " + s
        }, i)
    }, t.prototype.refreshJustifyContent = function() {
        var t = "";
        switch (this.$wrapper.css("text-align")) {
            case "left":
                t = "flex-start";
                break;
            case "center":
                t = "center";
                break;
            case "right":
                t = "flex-end";
                break;
            case "justify":
                t = "space-between"
        }
        this.$wrapper.css("justify-content", t)
    }, t
}), N2D("FrontendItemHeadingSplitText", function(d, h) {
    var i = {
        opacity: 1,
        x: 0,
        y: 0,
        rotationX: 0,
        rotationY: 0,
        rotationZ: 0,
        scale: 1
    };

    function t(t, e, i, s, n, o, r, a) {
        if ((n || r) && !t.disabled.layerAnimations && !t.disabled.layerSplitTextAnimations) {
            this.node = d("#" + e), this.slider = t, this.splitText = !1;
            var l = this.node.find("a.n2-ow");
            l.length && (this.node = l), this.$layer = this.node.closest(".n2-ss-layer"), this.in = {
                options: !1,
                totalDuration: 0,
                timeline: h,
                invalidate: !1
            }, this.out = {
                options: !1,
                totalDuration: 0,
                timeline: h,
                invalidate: !1
            }, 0 < this.node.length && this.start(i, s, n, o, r, a)
        }
    }
    return t.prototype.start = function(t, e, i, s, n, o) {
        this.slider.started(this.started.bind(this, t, e, i, s, n, o))
    }, t.prototype.started = function(t, e, i, s, n, o) {
        var r, a, l = {
            chars: 0,
            words: 0,
            lines: 0
        };
        for (var h in i && (this.in.options = this.optimize(i.data, s), l[this.in.options.mode] = 1), n && (this.out.options = this.optimize(n.data, o), l[this.out.options.mode] = 1), this.modes = [], l) l[h] && this.modes.push(h);
        if (l.chars && !l.words && this.modes.push("words"), this.splitText = new NextendSplitText(this.node, {
                type: this.modes.join(",")
            }), this.in.options) {
            switch (r = this.in.options, a = this.splitText[r.mode].length, r.sort) {
                case "side":
                case "center":
                    a = Math.ceil(a / 2)
            }
            this.in.totalDuration = (a - 1) * Math.abs(r.stagger) + r.duration
        }
        if (this.out.options) {
            switch (r = this.out.options, a = this.splitText[r.mode].length, r.sort) {
                case "side":
                case "center":
                    a = Math.ceil(a / 2)
            }
            this.out.totalDuration = (a - 1) * Math.abs(r.stagger) + r.duration
        }
        for (var h in (this.in.options || this.out.options) && this.$layer.on("collectRelatedAnimations.splitText", this.collectRelatedAnimations.bind(this)), NextendTween.set(this.$layer, {
                perspective: 1e3
            }), this.node.css("text-rendering", "auto"), l) l[h] && NextendTween.set(this.splitText[h], {
            transformOrigin: t,
            backfaceVisibility: e
        })
    }, t.prototype.getTimelineIn = function() {
        this.in.timeline = new NextendTimeline({
            paused: 1
        });
        var t = this.in.options,
            e = {
                ease: t.ease
            };
        return this._animate(this.in.timeline, t.mode, t.sort, t.duration, d.extend(!0, {}, t.from), d.extend(!0, e, i), t.stagger), this.in.timeline
    }, t.prototype.getTimelineOut = function() {
        this.out.timeline = new NextendTimeline({
            paused: 1
        });
        var t = this.out.options,
            e = {
                ease: t.ease
            };
        return this.in.timeline && (e.immediateRender = !1), this._animate(this.out.timeline, t.mode, t.sort, t.duration, d.extend(!0, {}, i), d.extend(!0, e, t.from), -t.stagger), this.out.timeline
    }, t.prototype.collectRelatedAnimations = function(t, e) {
        this.in.options && e.in.push(new N2Classes.AnimationsRelated(this, "extendTimelineIn")), this.out.options && e.out.push(new N2Classes.AnimationsRelated(this, "extendTimelineOut"))
    }, t.prototype.extendTimelineIn = function(t) {
        var e = this.getTimelineIn();
        t.add(e, this.in.options.delay), e.paused(!1)
    }, t.prototype.extendTimelineOut = function(t) {
        var e = this.getTimelineOut();
        t.add(e, this.out.options.delay), e.paused(!1)
    }, t.prototype._animate = function(t, e, i, s, n, o, r) {
        var a = d.extend([], this.splitText[e]),
            l = null,
            h = [];
        switch (i) {
            case "reversed":
                a.reverse();
                break;
            case "random":
                ! function(t, e, i, s) {
                    for (i = t.length; i;) e = Math.random() * i-- | 0, s = t[i], t[i] = t[e], t[e] = s
                }(a);
                break;
            case "side":
            case "center":
                for (l = []; 1 < a.length;) h.push(a.shift()), l.push(a.pop());
                1 === a.length && h.push(a.shift()), a = h, "center" === i && (a.reverse(), l.reverse());
                break;
            case "sideShifted":
            case "centerShifted":
                for (; 1 < a.length;) h.push(a.shift()), h.push(a.pop());
                1 === a.length && h.push(a.shift()), a = h, "centerShifted" === i && a.reverse()
        }
        t.staggerFromTo(a, s, n, o, r, 0), l && l.length && t.staggerFromTo(l, s, n, o, r, 0)
    }, t.prototype.optimize = function(t, e) {
        "lines" === t.mode && (t.mode = "words");
        var i = {
            mode: t.mode,
            sort: t.sort,
            duration: t.duration,
            stagger: t.stagger,
            delay: e,
            from: {},
            ease: t.ease
        };
        return 1 != t.opacity && (i.from.opacity = t.opacity), 1 != t.scale && (i.from.scale = t.scale), 0 != t.x && (i.from.x = t.x), 0 != t.y && (i.from.y = t.y), 0 != t.rotationX && (i.from.rotationX = t.rotationX), 0 != t.rotationY && (i.from.rotationY = t.rotationY), 0 != t.rotationZ && (i.from.rotationZ = t.rotationZ), i
    }, t
}), N2D("FrontendItemTransition", function(s, t) {
    function e(t, e, i) {
        this.slider = t, (n2const.isIE || n2const.isEdge) && (i = "Fade"), this.animation = i, this.node = s("#" + e).on("mouseenter", this["in" + i].bind(this)).on("mouseleave", this["out" + i].bind(this)), this.images = this.node.find("img"), this.inner = this.node.find(".n2-ss-item-transition-inner"), this["init" + i]()
    }
    return e.prototype.initFade = function() {
        this.images.eq(1).css("opacity", "0")
    }, e.prototype.inFade = function() {
        NextendTween.to(this.images.eq(1), .5, {
            opacity: 1
        }), NextendTween.to(this.images.eq(0), .5, {
            opacity: 0
        })
    }, e.prototype.outFade = function() {
        NextendTween.to(this.images.eq(1), .5, {
            opacity: 0
        }), NextendTween.to(this.images.eq(0), .5, {
            opacity: 1
        })
    }, e.prototype.initVerticalFlip = function() {
        NextendTween.set(this.inner, {
            perspective: 1e3
        }), NextendTween.set(this.images.eq(0), {
            rotationX: 0,
            backfaceVisibility: "hidden"
        }), NextendTween.set(this.images.eq(1), {
            rotationX: 180,
            backfaceVisibility: "hidden"
        })
    }, e.prototype.inVerticalFlip = function() {
        NextendTween.to(this.images.eq(0), .5, {
            rotationX: -180,
            backfaceVisibility: "hidden"
        }), NextendTween.to(this.images.eq(1), .5, {
            rotationX: 0,
            backfaceVisibility: "hidden"
        })
    }, e.prototype.outVerticalFlip = function() {
        NextendTween.to(this.images.eq(0), .5, {
            rotationX: 0,
            backfaceVisibility: "hidden"
        }), NextendTween.to(this.images.eq(1), .5, {
            rotationX: 180,
            backfaceVisibility: "hidden"
        })
    }, e.prototype.initHorizontalFlip = function() {
        NextendTween.set(this.inner, {
            perspective: 1e3
        }), NextendTween.set(this.images.eq(0), {
            rotationY: 0,
            backfaceVisibility: "hidden"
        }), NextendTween.set(this.images.eq(1), {
            rotationY: 180,
            backfaceVisibility: "hidden"
        })
    }, e.prototype.inHorizontalFlip = function() {
        NextendTween.to(this.images.eq(0), .5, {
            rotationY: -180,
            backfaceVisibility: "hidden"
        }), NextendTween.to(this.images.eq(1), .5, {
            rotationY: 0,
            backfaceVisibility: "hidden"
        })
    }, e.prototype.outHorizontalFlip = function() {
        NextendTween.to(this.images.eq(0), .5, {
            rotationY: 0,
            backfaceVisibility: "hidden"
        }), NextendTween.to(this.images.eq(1), .5, {
            rotationY: 180,
            backfaceVisibility: "hidden"
        })
    }, e
}), N2D("FrontendItemVideo", function(n, e) {
    var o = 1;

    function t(t, e, i) {
        this.state = {
            slideVisible: !1,
            visible: !1,
            scroll: !1,
            slide: !1,
            play: !1,
            continuePlay: !1
        }, this.counter = o++, this.slider = t, this.playerId = e, this.playerElement = n("#" + this.playerId), this.videoPlayer = this.playerElement.get(0), this.parameters = n.extend({
            autoplay: 0,
            loop: 0,
            center: 0,
            reset: 0
        }, i), this.slide = t.findSlideByElement(this.videoPlayer), this.isStatic = this.slide.isStatic();
        var s = this.playerElement.data("volume");
        0 === s ? (this.videoPlayer.volume = 1, this.videoPlayer.muted = !0) : (this.videoPlayer.volume = s, this.videoPlayer.muted = !1), this.slider.stages.done("BeforeShow", function() {
            0 < this.videoPlayer.videoWidth ? this.initVideoPlayer() : this.videoPlayer.addEventListener("loadedmetadata", this.initVideoPlayer.bind(this))
        }.bind(this))
    }
    return t.prototype.initVideoPlayer = function() {
        "fill" === n(this.videoPlayer).parent().data("aspect-ratio") && this.slider.responsive.doThrottledResize(), 1 === parseInt(this.parameters.center) && (this.onResize(), this.slider.sliderElement.on("SliderResize", this.onResize.bind(this)));
        var t = this.playerElement.closest(".n2-ss-layer");
        this.layer = t.data("layer"), this.layer.isVisible && this.setState("visible", !0, !0), this.layer.$layer.on("visibilityChange", function(t, e) {
            if (e) this.setState("visible", !0, !0);
            else {
                var i = this.state.play;
                this.setState("visible", !1, !0), i && this.setState("continuePlay", !0)
            }
        }.bind(this)), this.slide.isVisible && this.setState("slideVisible", !0, !0), this.slide.$element.on({
            Hidden: function() {
                var t = this.state.play;
                this.setState("slideVisible", !1, !0), t && this.setState("continuePlay", !0)
            }.bind(this),
            Visible: function() {
                this.setState("slideVisible", !0, !0)
            }.bind(this)
        }), this.playerElement.on("playing", function() {
            this.isStatic || this.slider.trigger("mediaStarted", this.playerId), t.triggerHandler("n2play")
        }.bind(this)).on("ended", function() {
            1 === parseInt(this.parameters.loop) ? (this.videoPlayer.currentTime = 0, this.safePlay()) : (this.isStatic || this.slider.trigger("mediaEnded", this.playerId), t.triggerHandler("n2stop"), this.setState("play", !1), "next" === this.parameters.ended && ((document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement) && (document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen).call(document), this.slider.next()))
        }.bind(this)), this.playerElement.on("pause", function() {
            t.triggerHandler("n2pause"), this.state.continuePlay ? (this.setState("continuePlay", !1), this.setState("play", !0)) : this.setState("play", !1)
        }.bind(this)), this.slide.isActiveWhen() && this.setState("slide", !0, !0), 1 === parseInt(this.parameters.autoplay) && this.slider.visible(this.initAutoplay.bind(this)), this.isStatic || (this.slider.sliderElement.on({
            CurrentSlideChanged: function(t, e) {
                this.onCurrentSlideChange(e)
            }.bind(this),
            mainAnimationStart: function(t, e, i, s) {
                this.onCurrentSlideChange(this.slider.slides[s])
            }.bind(this)
        }), parseInt(this.parameters.reset) && this.slider.sliderElement.on("mainAnimationComplete", function(t, e, i, s, n) {
            0 < this.videoPlayer.currentTime && !this.slide.isActiveWhen(this.slider.slides[s]) && (this.videoPlayer.currentTime = 0)
        }.bind(this))), "" !== this.parameters["scroll-pause"] ? N2Classes.ScrollTracker.add(this.playerElement, this.parameters["scroll-pause"], function() {
            this.setState("scroll", !0, !0)
        }.bind(this), function() {
            this.setState("continuePlay", !0), this.setState("scroll", !1, !0)
        }.bind(this)) : this.setState("scroll", !0, !0)
    }, t.prototype.onCurrentSlideChange = function(t) {
        var e = this.slide.isActiveWhen(t);
        e && 1 == this.parameters.autoplay && this.setState("play", !0), this.setState("slide", e, !0)
    }, t.prototype.onResize = function() {
        var t = this.playerElement.parent(),
            e = t.width(),
            i = t.height(),
            s = this.videoPlayer.videoWidth / this.videoPlayer.videoHeight,
            n = {
                width: e + "px",
                height: i + "px",
                marginTop: "0"
            };
        n[n2const.rtl.marginLeft] = 0, s < e / i ? (n.height = e * s + "px", n.marginTop = (i - n.height) / 2 + "px") : (n.width = i * s + "px", n[n2const.rtl.marginLeft] = (e - n.width) / 2 + "px"), this.playerElement.css(n)
    }, t.prototype.initAutoplay = function() {
        this.isStatic ? (this.setState("play", !0), this.setState("slide", !0, !0)) : (this.slider.sliderElement.on("mainAnimationComplete", function(t, e, i, s, n) {
            this.slide.isActiveWhen(this.slider.slides[s]) ? (this.setState("play", !0), setTimeout(function() {
                this.setState("slide", !0, !0)
            }.bind(this), 100)) : this.setState("slide", !1, !0)
        }.bind(this)), this.slide.isActiveWhen() && (this.setState("play", !0), this.setState("slide", !0, !0)))
    }, t.prototype.setState = function(t, e, i) {
        i = i || !1, this.state[t] = e, i && (this.state.slideVisible && this.state.visible && this.state.play && this.state.slide && this.state.scroll ? this.safePlay() : this.safePause())
    }, t.prototype.safePlay = function() {
        this.safeCallback(function() {
            this.promise = this.videoPlayer.play(), this.promise && Promise !== e && this.promise.catch(function(t) {
                if ("NotAllowedError" === t.name) {
                    var e = ".ssLayerVideo" + this.counter;
                    n("body").off(e).one("click" + e + " touchend" + e, function() {
                        n("body").off(e), !1 !== this.promise && this.safePlay()
                    }.bind(this))
                }
            }.bind(this))
        }.bind(this))
    }, t.prototype.safePause = function() {
        this.safeCallback(function() {
            this.videoPlayer.pause(), this.promise = !1
        }.bind(this))
    }, t.prototype.safeCallback = function(t) {
        this.promise && Promise !== e ? this.promise.then(t).catch(t) : t()
    }, t
}), N2D("FrontendItemVimeo", function(r, e) {
    function i(t, e, i, s, n, o) {
        if (this.state = {
                slideVisible: !1,
                visible: !1,
                scroll: !1,
                slide: !1,
                InComplete: !1,
                play: !1,
                continuePlay: !1
            }, this.readyDeferred = r.Deferred(), this.slider = t, this.playerId = e, this.$playerElement = r("#" + this.playerId), this.$cover = this.$playerElement.find(".n2_ss_video_player__cover"), this.start = o, this.parameters = r.extend({
                vimeourl: "//vimeo.com/144598279",
                autoplay: "0",
                ended: "",
                reset: "0",
                title: "1",
                byline: "1",
                portrait: "0",
                loop: "0",
                color: "00adef",
                volume: "-1",
                dnt: "0"
            }, s), 1 === parseInt(this.parameters.autoplay))
            if (-1 < navigator.userAgent.toLowerCase().indexOf("android")) this.parameters.volume = 0;
            else if (n2const.isIOS) {
            this.parameters.autoplay = 0;
            try {
                "playsInline" in document.createElement("video") && (this.parameters.autoplay = 1, this.parameters.volume = 0)
            } catch (t) {}
        }
        1 === parseInt(this.parameters.autoplay) || !n || n2const.isMobile ? this.ready(this.initVimeoPlayer.bind(this)) : this.ready(function() {
            this.$playerElement.on("click.vimeo n2click.vimeo", function(t) {
                this.$playerElement.off(".vimeo"), t.preventDefault(), t.stopPropagation(), this.initVimeoPlayer(), this.safePlay()
            }.bind(this))
        }.bind(this))
    }
    return i.vimeoDeferred = null, i.prototype.ready = function(t) {
        null === i.vimeoDeferred && (i.vimeoDeferred = r.getScript("https://player.vimeo.com/api/player.js")), i.vimeoDeferred.done(t)
    }, i.prototype.initVimeoPlayer = function() {
        var t = r('<iframe class="intrinsic-ignore" allow="autoplay; encrypted-media" id="' + this.playerId + '-frame" src="https://player.vimeo.com/video/' + this.parameters.vimeocode + "?autoplay=0&_video&title=" + this.parameters.title + "&byline=" + this.parameters.byline + "&background=" + this.parameters.background + "&portrait=" + this.parameters.portrait + "&color=" + this.parameters.color + "&loop=" + this.parameters.loop + ("-1" == this.parameters.quality ? "" : "&quality=" + this.parameters.quality) + "&dnt=" + this.parameters["privacy-enhanced"] + '" style="position: absolute; top:0; left: 0; width: 100%; height: 100%;" webkitAllowFullScreen allowFullScreen></iframe>');
        this.$playerElement.prepend(t), this.player = new Vimeo.Player(t[0], {
            autoplay: !1
        }), this.promise = this.player.ready(), this.slider.stages.done("BeforeShow", function() {
            this.promise.then(this.onReady.bind(this))
        }.bind(this))
    }, i.prototype.onReady = function() {
        var t = parseFloat(this.parameters.volume);
        0 <= t && this.setVolume(t), this.slide = this.slider.findSlideByElement(this.$playerElement), this.isStatic = this.slide.isStatic();
        var e = this.$playerElement.closest(".n2-ss-layer");
        this.layer = e.data("layer"), this.layer.isVisible && this.setState("visible", !0, !0), this.layer.$layer.on("visibilityChange", function(t, e) {
            if (e) this.setState("visible", !0, !0);
            else {
                var i = this.state.play;
                this.setState("visible", !1, !0), i && this.setState("continuePlay", !0)
            }
        }.bind(this)), this.slide.isVisible && this.setState("slideVisible", !0, !0), this.slide.$element.on({
            Hidden: function() {
                var t = this.state.play;
                this.setState("slideVisible", !1, !0), t && this.setState("continuePlay", !0)
            }.bind(this),
            Visible: function() {
                this.setState("slideVisible", !0, !0)
            }.bind(this)
        }), this.$cover.length && (n2const.isMobile && this.$cover.on("click", this.safePlay.bind(this)), e.one("n2play", function() {
            NextendTween.to(this.$cover, .3, {
                opacity: 0,
                onComplete: function() {
                    this.$cover.remove()
                }.bind(this)
            })
        }.bind(this))), this.player.on("play", function() {
            this.isStatic || this.slider.trigger("mediaStarted", this.playerId), e.triggerHandler("n2play")
        }.bind(this)), this.player.on("pause", function() {
            e.triggerHandler("n2pause"), this.state.continuePlay ? (this.setState("continuePlay", !1), this.setState("play", !0)) : this.setState("play", !1)
        }.bind(this)), this.player.on("ended", function() {
            this.isStatic || this.slider.trigger("mediaEnded", this.playerId), e.triggerHandler("n2stop"), this.setState("play", !1), "next" === this.parameters.ended && 0 == this.parameters.loop && ((document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement) && (document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen).call(document), this.slider.next())
        }.bind(this)), this.isStatic || this.slider.sliderElement.on({
            CurrentSlideChanged: function(t, e) {
                this.onCurrentSlideChange(e)
            }.bind(this),
            mainAnimationStart: function(t, e, i, s) {
                this.onCurrentSlideChange(this.slider.slides[s])
            }.bind(this)
        }), "" !== this.parameters["scroll-pause"] ? N2Classes.ScrollTracker.add(this.$playerElement, this.parameters["scroll-pause"], function() {
            this.setState("scroll", !0, !0)
        }.bind(this), function() {
            this.setState("continuePlay", !0), this.setState("scroll", !1, !0)
        }.bind(this)) : this.setState("scroll", !0, !0), this.slide.isActiveWhen() && this.setState("slide", !0, !0), 1 === parseInt(this.parameters.autoplay) && this.slider.visible(this.initAutoplay.bind(this)), this.readyDeferred.resolve()
    }, i.prototype.onCurrentSlideChange = function(t) {
        this.slide.isActiveWhen(t) ? 1 == this.parameters.autoplay && this.setState("play", !0) : parseInt(this.parameters.reset) && this.reset(), this.setState("slide", !0, !0)
    }, i.prototype.initAutoplay = function() {
        this.layer.addStateCallback(function(t) {
            this.setState("InComplete", t.InComplete, !0)
        }.bind(this)), this.isStatic ? (this.setState("play", !0), this.setState("slide", !0, !0)) : (this.slider.sliderElement.on("mainAnimationComplete", function(t, e, i, s, n) {
            this.slide.isActiveWhen(this.slider.slides[s]) ? (this.setState("play", !0), this.setState("slide", !0, !0)) : this.setState("slide", !1, !0)
        }.bind(this)), this.slide.isActiveWhen() && (this.setState("play", !0), this.setState("slide", !0, !0)))
    }, i.prototype.setState = function(t, e, i) {
        i = i || !1, this.state[t] = e, i && (this.state.slideVisible && this.state.visible && this.state.play && this.state.slide && this.state.InComplete && this.state.scroll && this.layer.isVisible ? this.play() : this.pause())
    }, i.prototype.play = function() {
        this.slider.trigger("mediaStarted", this.playerId), 0 != this.start && this.safeSetCurrentTime(this.start), this.safePlay(), this.player.getCurrentTime().then(function(t) {
            t < this.start && 0 != this.start && this.safeSetCurrentTime(this.start), this.safePlay()
        }.bind(this)).catch(function(t) {
            this.safePlay()
        }.bind(this))
    }, i.prototype.pause = function() {
        this.safePause()
    }, i.prototype.reset = function() {
        this.safeSetCurrentTime(this.start)
    }, i.prototype.setVolume = function(t) {
        this.safeCallback(function() {
            this.promise = this.player.setVolume(t)
        }.bind(this))
    }, i.prototype.safeSetCurrentTime = function(t) {
        this.safeCallback(function() {
            this.promise = this.player.setCurrentTime(t)
        }.bind(this))
    }, i.prototype.safePlay = function() {
        this.safeCallback(function() {
            this.promise = this.player.getPaused(), this.safeCallback(function(t) {
                t && (this.promise = this.player.play())
            }.bind(this))
        }.bind(this))
    }, i.prototype.safePause = function() {
        this.safeCallback(function() {
            this.promise = this.player.getPaused(), this.safeCallback(function(t) {
                t || (this.promise = this.player.pause())
            }.bind(this))
        }.bind(this))
    }, i.prototype.safeCallback = function(t) {
        this.promise && Promise !== e ? this.promise.then(t).catch(t) : t()
    }, i
}), N2D("FrontendItemYouTube", function(o, r) {
    function a(t, e, i, s) {
        this.state = {
            slideVisible: !1,
            visible: !1,
            scroll: !1,
            slide: !1,
            InComplete: !1,
            play: !1,
            continuePlay: !1
        }, this.readyDeferred = o.Deferred(), this.slider = t, this.playerId = e, this.$playerElement = o("#" + this.playerId), this.$cover = this.$playerElement.find(".n2_ss_video_player__cover"), this.parameters = o.extend({
            youtubeurl: "//www.youtube.com/watch?v=3PPtkRU7D74",
            youtubecode: "3PPtkRU7D74",
            center: 0,
            autoplay: 1,
            ended: "",
            related: "1",
            volume: "-1",
            loop: 0,
            modestbranding: 1,
            reset: 0,
            query: [],
            playsinline: 0
        }, i), 1 === parseInt(this.parameters.autoplay) || !s || n2const.isMobile ? this.ready(this.initYoutubePlayer.bind(this)) : this.$playerElement.on("click.youtube n2click.youtube", function(t) {
            this.$playerElement.off(".youtube"), t.preventDefault(), t.stopPropagation(), this.ready(function() {
                this.readyDeferred.done(function() {
                    this.play()
                }.bind(this)), this.initYoutubePlayer()
            }.bind(this))
        }.bind(this))
    }
    return a.YTDeferred = null, a.prototype.ready = function(t) {
        var e, i, s, n;
        null === a.YTDeferred && (a.YTDeferred = o.Deferred(), window.YT === r && o.getScript("https://www.youtube.com/iframe_api"), window._EPYT_ !== r ? (s = a.YTDeferred, (n = function() {
            !0 === window._EPADashboard_.initStarted ? s.resolve() : setTimeout(n, 100)
        })()) : (e = a.YTDeferred, (i = function() {
            window.YT !== r && window.YT.loaded ? e.resolve() : setTimeout(i, 100)
        })())), a.YTDeferred.done(t)
    }, a.prototype.fadeOutCover = function() {
        this.coverFadedOut === r && this.$cover.length && (this.coverFadedOut = !0, NextendTween.to(this.$cover, .3, {
            opacity: 0,
            onComplete: function() {
                this.$cover.remove()
            }.bind(this)
        }))
    }, a.prototype.initYoutubePlayer = function() {
        var e = this.$playerElement.closest(".n2-ss-layer");
        this.layer = e.data("layer"), this.$cover.length && (n2const.isMobile && this.$cover.on("click", this.play.bind(this)), e.one("n2play", this.fadeOutCover.bind(this))), this.slide = this.slider.findSlideByElement(this.$playerElement), this.isStatic = this.slide.isStatic();
        var t = {
            enablejsapi: 1,
            origin: window.location.protocol + "//" + window.location.host,
            wmode: "opaque",
            rel: 1 - this.parameters.related,
            start: this.parameters.start,
            end: this.parameters.end,
            modestbranding: this.parameters.modestbranding,
            playsinline: this.parameters.playsinline
        };
        if (1 === parseInt(this.parameters.autoplay))
            if (-1 < navigator.userAgent.toLowerCase().indexOf("android")) this.parameters.volume = 0;
            else if (n2const.isIOS) {
            this.parameters.autoplay = 0;
            try {
                "playsInline" in document.createElement("video") && (this.parameters.autoplay = 1, this.parameters.volume = 0, t.playsinline = 1)
            } catch (t) {}
        }
        for (var i in n2const.isIOS && this.parameters.controls && (t.use_native_controls = 1), 1 == this.parameters.center && (t.controls = 0), 1 != this.parameters.controls && (t.autohide = 1, t.controls = 0), +(0 <= navigator.platform.toUpperCase().indexOf("MAC") && -1 < navigator.userAgent.search("Firefox")) && (t.html5 = 1), this.parameters.query) this.parameters.query.hasOwnProperty(i) && (t[i] = this.parameters.query[i]);
        var s = {
            videoId: this.parameters.youtubecode,
            wmode: "opaque",
            playerVars: t,
            events: {
                onReady: this.onReady.bind(this),
                onStateChange: function(t) {
                    switch (t.data) {
                        case YT.PlayerState.PLAYING:
                        case YT.PlayerState.BUFFERING:
                            this.isStatic || this.slide.isActiveWhen(this.slider.currentSlide) && this.slider.sliderElement.trigger("mediaStarted", this.playerId), e.triggerHandler("n2play");
                            break;
                        case YT.PlayerState.PAUSED:
                            e.triggerHandler("n2pause"), this.state.continuePlay ? (this.setState("continuePlay", !1), this.setState("play", !0)) : this.setState("play", !1);
                            break;
                        case YT.PlayerState.ENDED:
                            1 == this.parameters.loop ? (this.player.seekTo(this.parameters.start), this.player.playVideo()) : (this.isStatic || this.slider.trigger("mediaEnded", this.playerId), e.triggerHandler("n2stop"), this.setState("play", !1), "next" === this.parameters.ended && ((document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement) && (document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen).call(document), this.slider.next()))
                    }
                }.bind(this)
            }
        };
        (this.parameters["privacy-enhanced"] || jQuery && jQuery.fn.revolution) && (s.host = "https://www.youtube-nocookie.com"), this.player = new YT.Player(this.playerId + "-frame", s), 1 == this.parameters.center && (this.$playerElement.parent().css("overflow", "hidden"), this.onResize(), this.slider.sliderElement.on("SliderResize", this.onResize.bind(this)))
    }, a.prototype.onReady = function() {
        this.slider.stages.done("BeforeShow", this.onBeforeShow.bind(this))
    }, a.prototype.onBeforeShow = function() {
        var t = parseFloat(this.parameters.volume);
        0 < t ? this.setVolume(t) : -1 !== t && this.player.mute(), this.layer.isVisible && this.setState("visible", !0, !0), this.layer.$layer.on("visibilityChange", function(t, e) {
            if (e) this.setState("visible", !0, !0);
            else {
                var i = this.state.play;
                this.setState("visible", !1, !0), i && this.setState("continuePlay", !0)
            }
        }.bind(this)), this.slide.isVisible && this.setState("slideVisible", !0, !0), this.slide.$element.on({
            Hidden: function() {
                var t = this.state.play;
                this.setState("slideVisible", !1, !0), t && this.setState("continuePlay", !0)
            }.bind(this),
            Visible: function() {
                this.setState("slideVisible", !0, !0)
            }.bind(this)
        }), this.slide.isActiveWhen() && this.setState("slide", !0, !0), 1 == this.parameters.autoplay && this.slider.visible(this.initAutoplay.bind(this)), this.isStatic || (this.slider.sliderElement.on({
            CurrentSlideChanged: function(t, e) {
                this.onCurrentSlideChange(e)
            }.bind(this),
            mainAnimationStart: function(t, e, i, s) {
                this.onCurrentSlideChange(this.slider.slides[s])
            }.bind(this)
        }), parseInt(this.parameters.reset) && this.slider.sliderElement.on("mainAnimationComplete", function(t, e, i, s) {
            this.slide.isActiveWhen(this.slider.slides[s]) || 0 !== this.player.getCurrentTime() && this.player.seekTo(this.parameters.start)
        }.bind(this))), this.readyDeferred.resolve(), "" !== this.parameters["scroll-pause"] ? N2Classes.ScrollTracker.add(this.$playerElement, this.parameters["scroll-pause"], function() {
            this.setState("scroll", !0, !0)
        }.bind(this), function() {
            this.setState("continuePlay", !0), this.setState("scroll", !1, !0)
        }.bind(this)) : this.setState("scroll", !0, !0)
    }, a.prototype.onCurrentSlideChange = function(t) {
        var e = this.slide.isActiveWhen(t);
        e && 1 == this.parameters.autoplay && this.setState("play", !0), this.setState("slide", e, !0)
    }, a.prototype.onResize = function() {
        var t = this.$playerElement.parent(),
            e = t.width(),
            i = t.height() + 100,
            s = {
                width: e + "px",
                height: i + "px",
                marginTop: "0"
            };
        s[n2const.rtl.marginLeft] = "0", 16 / 9 < e / i ? (s.height = e * (16 / 9) + "px", s.marginTop = (i - s.height) / 2 + "px") : (s.width = i * (16 / 9) + "px", s[n2const.rtl.marginLeft] = (e - s.width) / 2 + "px"), this.$playerElement.css(s)
    }, a.prototype.initAutoplay = function() {
        this.layer.addStateCallback(function(t) {
            this.setState("InComplete", t.InComplete, !0)
        }.bind(this)), this.isStatic ? (this.setState("play", !0), this.setState("slide", !0, !0)) : (this.slider.sliderElement.on("mainAnimationComplete", function(t, e, i, s) {
            this.slide.isActiveWhen(this.slider.slides[s]) ? (this.setState("play", !0), this.setState("slide", !0, !0)) : this.setState("slide", !1, !0)
        }.bind(this)), this.slide.isActiveWhen() && (this.setState("play", !0), this.setState("slide", !0, !0)))
    }, a.prototype.setState = function(t, e, i) {
        i = i || !1, this.state[t] = e, i && (this.state.slideVisible && this.state.visible && this.state.play && this.state.slide && this.state.InComplete && this.state.scroll ? this.play() : this.pause())
    }, a.prototype.play = function() {
        this.isStopped() && (this.coverFadedOut === r && setTimeout(this.fadeOutCover.bind(this), 200), this.slider.trigger("mediaStarted", this.playerId), this.player.playVideo())
    }, a.prototype.pause = function() {
        this.isStopped() || this.player.pauseVideo()
    }, a.prototype.stop = function() {
        this.player.stopVideo()
    }, a.prototype.isStopped = function() {
        switch (this.player.getPlayerState()) {
            case -1:
            case 2:
            case 5:
                return !0;
            default:
                return !1
        }
    }, a.prototype.setVolume = function(t) {
        this.player.setVolume(100 * t)
    }, a
}), N2D("smartslider-frontend");