(function() {
    var e = this;
    e.N2_ = e.N2_ || {
        r: [],
        d: []
    }, e.N2R = e.N2R || function() {
        e.N2_.r.push(arguments)
    }, e.N2D = e.N2D || function() {
        e.N2_.d.push(arguments)
    }
}).call(window), N2D("SmartSliderCarouselSingle", ["SmartSliderAbstract"], function(t, r) {
    function e(e, i) {
        this.type = "carousel-single", N2Classes.SmartSliderAbstract.prototype.constructor.call(this, e, t.extend({
            carousel: 1,
            maxPaneWidth: 980
        }, i))
    }
    return ((e.prototype = Object.create(N2Classes.SmartSliderAbstract.prototype)).constructor = e).prototype.createSlide = function(e, i) {
        return new N2Classes.SlideCarouselSingle(this, e, i)
    }, e.prototype.initResponsiveMode = function() {
        this.responsive = new N2Classes.SmartSliderResponsiveCarouselSingle(this, this.parameters.responsive), this.responsive.start(), N2Classes.SmartSliderAbstract.prototype.initResponsiveMode.call(this)
    }, e.prototype.initMainAnimation = function() {
        this.mainAnimation = new N2Classes.SmartSliderMainAnimationCarouselSingle(this, this.parameters.mainanimation)
    }, e.prototype.updateInsideSlides = function(e) {
        for (var i = [], t = 0; t < e.length; t++) i = i.concat(this.getVisibleSlides(e[t]));
        N2Classes.SmartSliderAbstract.prototype.updateInsideSlides.call(this, i)
    }, e.prototype.getVisibleSlides = function(e) {
        e === r && (e = this.currentSlide);
        for (var i = [], t = e, s = 0; t && s < this.slides.length && s < this.responsive.slidesInGroup; s++) i.push(t), t = t.getNext();
        if (!this.parameters.carousel && i.length < this.responsive.slidesInGroup) {
            t = e.getPrevious();
            for (s = i.length; s < this.responsive.slidesInGroup && t; s++) i.push(t), t = t.getPrevious()
        }
        return i
    }, e.prototype.getSlideBackgroundContainer = function() {
        return this.sliderElement.find(".n2-ss-slider-2")
    }, e.prototype.getUIPreviousSlide = function(e) {
        for (var i = e, t = 0; t < this.responsive.slidesInGroup && i; t++) i = i.getNext();
        var s = e;
        for (t = this.responsive.slidesInGroup - t; 0 <= t && s; t--) s = s.getPrevious();
        return (!s || -1 === this.getVisibleSlides(e).indexOf(s)) && s
    }, e.prototype.getUINextSlide = function(e) {
        for (var i = e, t = 0; t < this.responsive.slidesInGroup && i; t++) i = i.getNext();
        return (!i || -1 === this.getVisibleSlides(e).indexOf(i)) && i
    }, e
}), N2D("SmartSliderResponsiveCarouselSingle", ["SmartSliderResponsive"], function(t, e) {
    function i(e, i) {
        this.wH = 0, this.slidesInGroup = 1, this.mainAnimation = e.mainAnimation, N2Classes.SmartSliderResponsive.prototype.constructor.call(this, e, t.extend({
            minimumSlideGap: 10,
            justifySlides: 1,
            sideSpacing: {
                desktop: [0, 0, 0, 0],
                tablet: [0, 0, 0, 0],
                mobile: [0, 0, 0, 0]
            },
            border: 0
        }, i))
    }
    return ((i.prototype = Object.create(N2Classes.SmartSliderResponsive.prototype)).constructor = i).prototype.init = function() {
        this.$cache = {
            "n2-ss-slider-3": this.sliderElement.find(".n2-ss-slider-3"),
            "n2-ss-slide": this.sliderElement.find(".n2-ss-slide"),
            "n2-ss-layers-container": this.sliderElement.find(".n2-ss-layers-container"),
            "n2-ss-slider-pane-single": this.sliderElement.find(".n2-ss-slider-pane-single"),
            "n2-ss-slider-pipeline": this.sliderElement.find(".n2-ss-slider-pipeline")
        }, this.$cache["n2-ss-slider-pane-single"][0].addEventListener("scroll", function(e) {
            e.currentTarget.scrollTop = 0, e.currentTarget.scrollLeft = 0
        }, {
            capture: !0
        }), this.base = {
            sliderWidth: this.sliderElement.width(),
            sliderHeight: this.sliderElement.height(),
            slideContainerWidth: this.$cache["n2-ss-slider-3"].width(),
            slideContainerHeight: this.$cache["n2-ss-slider-3"].height(),
            slideOuterWidth: this.$cache["n2-ss-slide"].outerWidth(),
            slideOuterHeight: this.$cache["n2-ss-slide"].outerHeight(),
            slideWidth: this.$cache["n2-ss-layers-container"].width(),
            slideHeight: this.$cache["n2-ss-layers-container"].height()
        }
    }, i.prototype.resizeStage1Width = function() {
        N2Classes.SmartSliderResponsive.prototype.resizeStage1Width.call(this), this.stage1CalculateSliderWidth(), this.stage1CalculateSlideWidth()
    }, i.prototype.stage1CalculateSliderWidth = function() {
        this.resizeContext = {};
        var e = this.containerElementPadding.width();
        this.parameters.upscale || (e = Math.min(e, this.base.sliderWidth)), this.parameters.downscale || (e = Math.max(e, this.base.sliderWidth)), this.resizeContext.sliderWidth = this.applyFilter("SliderWidth", e), this.resizeContext.sliderInnerWidth = this.resizeContext.sliderWidth - (this.base.sliderWidth - this.base.slideContainerWidth), this.resizeContext.sliderRatio = this.resizeContext.sliderWidth / this.base.sliderWidth, this.sliderElement.css({
            width: this.resizeContext.sliderWidth + "px"
        })
    }, i.prototype.stage1CalculateSlideWidth = function() {
        var e = this.resizeContext.sliderWidth - (this.base.sliderWidth - this.base.slideContainerWidth);
        this.resizeContext.slideContainerWidth = Math.min(e, this.slider.parameters.maxPaneWidth);
        var i = Math.floor((e - this.resizeContext.slideContainerWidth) / 2);
        this.$cache["n2-ss-slider-3"].css({
            width: this.resizeContext.slideContainerWidth + "px",
            marginLeft: i + "px",
            marginRight: i + "px"
        });
        var t = this.parameters.sideSpacing[this.getDeviceGroup()],
            s = this.resizeContext.slideContainerWidth - t[1] - t[3],
            r = Math.min(this.slider.visibleSlides.length, Math.max(1, Math.floor(s / (this.base.slideOuterWidth + this.parameters.minimumSlideGap)))),
            n = 0;
        if (2 === this.parameters.justifySlides) {
            var l = Math.min((this.base.slideOuterWidth + this.parameters.minimumSlideGap) * r, e);
            n = Math.round((s - l) / 2), s = Math.min(s - 2 * n, e)
        }
        this.resizeContext.paneWidth = s, this.$cache["n2-ss-slider-pane-single"].css({
            width: s + "px",
            marginLeft: t[1] + n + "px",
            marginRight: t[3] + n + "px"
        }), 1 === r && s < this.base.slideOuterWidth ? this.resizeContext.slideOuterWidth = s : this.resizeContext.slideOuterWidth = this.base.slideOuterWidth;
        var a, h = s - r * this.resizeContext.slideOuterWidth;
        1 === this.parameters.justifySlides || 2 === this.parameters.justifySlides || 1 === r ? (a = Math.ceil(h / r / 2), this.$cache["n2-ss-slider-pipeline"].css({
            marginLeft: "0",
            marginRight: "0"
        })) : (a = Math.ceil(h / Math.max(1, r - 1) / 2), this.$cache["n2-ss-slider-pipeline"].css({
            marginLeft: -a + "px",
            marginRight: -a + "px"
        })), this.$cache["n2-ss-slide"].css({
            width: this.resizeContext.slideOuterWidth + "px",
            marginLeft: a + "px",
            marginRight: a + "px"
        }), this.slideWidth = this.resizeContext.slideOuterWidth + 2 * a, this.resizeContext.slideWidth = this.resizeContext.slideOuterWidth - (this.base.slideOuterWidth - this.base.slideWidth), this.resizeContext.slideRatio = this.resizeContext.slideWidth / this.base.slideWidth, this.sliderElement.css({
            fontSize: this.prepareFontSize(16 * this.resizeContext.slideRatio)
        });
        var o = !1;
        r !== this.slidesInGroup && (o = !0), this.slidesInGroup = r, o && this.slider.stages.resolved("StarterSlide") && (this.slider.updateInsideSlides([this.slider.currentSlide]), this.slider.playSlide(this.slider.currentSlide))
    }, i.prototype.getResizeStage2CSS = function() {
        var e = [];
        return this.stage2CalculateSlideHeight(e), this.stage2CalculateSliderHeight(e), e
    }, i.prototype.stage2CalculateSlideHeight = function(e) {
        var i = this.base.slideHeight,
            t = Math.floor(this.resizeContext.slideWidth / this.base.slideWidth * i);
        this.minimumSlideHeight = t, this.resizeContext.slideHeight = Math.max(t, this.getMinimumContentHeight()), this.resizeContext.slideOuterHeight = this.resizeContext.slideHeight + (this.base.slideOuterHeight - this.base.slideHeight), e.push(new N2Classes.CSSData(this.$cache["n2-ss-slide"], {
            height: this.resizeContext.slideOuterHeight
        }))
    }, i.prototype.stage2CalculateSliderHeight = function(e) {
        var i = this.parameters.sideSpacing[this.getDeviceGroup()],
            t = this.resizeContext.slideOuterHeight + i[0] + i[2] + (this.base.sliderHeight - this.base.slideContainerHeight),
            s = this.parameters.sizes[this.device];
        if (0 < s.height) {
            var r = Math.min(s.height, Math.floor(this.resizeContext.sliderWidth / s.width * s.height));
            t = Math.max(t, r)
        }
        this.resizeContext.sliderHeight = Math.max(t, this.parameters.minimumHeight, this.fullPageMinimumSliderHeight), this.resizeContext.sliderInnerHeight = this.resizeContext.sliderHeight - (this.base.sliderHeight - this.base.slideContainerHeight), this.resizeContext.slideContainerHeight = this.resizeContext.sliderHeight - (this.base.sliderHeight - this.base.slideContainerHeight), e.push(new N2Classes.CSSData(this.$cache["n2-ss-slider-3"], {
            height: this.resizeContext.slideContainerHeight
        }));
        var n = Math.floor((this.resizeContext.slideContainerHeight - this.resizeContext.slideOuterHeight - i[0] - i[2]) / 2),
            l = i[0] + n,
            a = i[2] + n;
        this.resizeContext.paneHeight = this.resizeContext.slideContainerHeight - l - a, e.push(new N2Classes.CSSData(this.$cache["n2-ss-slider-pane-single"], {
            height: this.resizeContext.paneHeight,
            marginTop: l,
            marginBottom: a
        }))
    }, i.prototype.onStarterSlide = function(e) {
        N2Classes.SmartSliderResponsive.prototype.onStarterSlide.apply(this, arguments), this.mainAnimation.finalizeVisibleSlidesStage2()
    }, i.prototype.finalizeVisibleSlidesStage2 = function() {
        N2Classes.SmartSliderResponsive.prototype.finalizeVisibleSlidesStage2.apply(this, arguments), this.state.StarterSlide && this.mainAnimation.finalizeVisibleSlidesStage2()
    }, i.prototype.updateVisibleSlides = function() {
        N2Classes.SmartSliderResponsive.prototype.updateVisibleSlides.call(this), this.mainAnimation.onVisibleRealSlidesChanged()
    }, i
}), N2D("SmartSliderMainAnimationCarouselSingle", ["SmartSliderMainAnimationAbstract"], function(t, e) {
    function i(e, i) {
        this.carousel = e.parameters.carousel, N2Classes.SmartSliderMainAnimationAbstract.prototype.constructor.call(this, e, t.extend({
            duration: 1500,
            ease: "easeInOutQuint"
        }, i)), this.$pipeline = this.slider.sliderElement.find(".n2-ss-slider-pipeline")
    }
    return ((i.prototype = Object.create(N2Classes.SmartSliderMainAnimationAbstract.prototype)).constructor = i).prototype.onVisibleRealSlidesChanged = function() {
        this.slides = t.extend([], this.slider.visibleRealSlides);
        for (var e = 0; e < this.slides.length; e++) this.slides[e].localIndex = e
    }, i.prototype.finalizeVisibleSlidesStage2 = function() {
        this.carousel ? this.prepareCarousel(this.slider.currentSlide) : this.calibratePipelinePosition()
    }, i.prototype.prepareCarousel = function(e) {
        if (this.slides.length > this.responsive.slidesInGroup) {
            var i, t, s = e.localIndex;
            if (t = s < this.slider.currentSlide.localIndex ? (i = Math.abs(s - this.slider.currentSlide.localIndex), this.slider.currentSlide.localIndex - this.slides.length + 2 + s) : (i = Math.max(0, s - this.slider.currentSlide.localIndex), Math.max(0, this.slides.length - s + this.slider.currentSlide.localIndex)), i <= t)
                for (; s > this.slides.length - this.responsive.slidesInGroup;) {
                    var r = this.slides.shift();
                    this.slides.push(r), s--
                } else
                    for (var n = 0; n < t; n++) {
                        var l = this.slides.pop();
                        this.slides.unshift(l), s--
                    }
        }
        for (var a = 0; a < this.slides.length; a++) this.slides[a].localIndex = a, this.slides[a].$element.css("order", String(a + 1));
        this.calibratePipelinePosition()
    }, i.prototype.calibratePipelinePosition = function() {
        var e = this.slider.currentSlide.localIndex;
        (!this.carousel || this.slides.length <= this.responsive.slidesInGroup) && (e = Math.min(e, this.slides.length - this.responsive.slidesInGroup)), NextendTween.set(this.$pipeline, {
            n2RoundProps: "x",
            x: -1 * n2const.rtl.modifier * e * this.getSlideWidth()
        })
    }, i.prototype._initAnimation = function(e, i) {
        this.carousel && this.prepareCarousel(i), e.unsetActive(), i.setActive();
        var t = i.localIndex;
        (!this.carousel || this.slides.length <= this.responsive.slidesInGroup) && (t = Math.min(t, this.slides.length - this.responsive.slidesInGroup)), this.timeline.to(this.$pipeline, this.parameters.duration, {
            n2RoundProps: "x",
            x: -1 * n2const.rtl.modifier * t * this.getSlideWidth(),
            ease: this.getEase()
        }, 0), this.slider.updateInsideSlides([e, i])
    }, i.prototype.getSlideWidth = function() {
        return this.slider.responsive.slideWidth
    }, i
}), N2D("SlideCarouselSingle", ["FrontendSliderSlide"], function(e, i) {
    function t(e, i, t) {
        N2Classes.FrontendSliderSlide.prototype.constructor.apply(this, arguments)
    }
    return ((t.prototype = Object.create(N2Classes.FrontendSliderSlide.prototype)).constructor = t).prototype.call = function(e) {
        for (var i = this.slider.getVisibleSlides(this), t = 0; t < i.length; t++) N2Classes.FrontendSliderSlide.prototype[e].call(i[t])
    }, t.prototype.playIn = function() {
        this.call("playIn")
    }, t.prototype.playSpecialEventOnly = function() {
        this.call("playSpecialEventOnly")
    }, t.prototype.playOut = function() {
        this.call("playOut")
    }, t.prototype.allowFocus = function() {
        this.call("allowFocus")
    }, t
}), N2D("smartslider-carousel-single-type-frontend");